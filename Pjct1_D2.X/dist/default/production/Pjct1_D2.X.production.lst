

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Feb 16 00:19:55 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 09/04/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  008F                     	;# 
   360  0090                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0094                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  0105                     	;# 
   379  0107                     	;# 
   380  0108                     	;# 
   381  0109                     	;# 
   382  010C                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0187                     	;# 
   389  0188                     	;# 
   390  0189                     	;# 
   391  018C                     	;# 
   392  018D                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  000E                     	;# 
   408  000E                     	;# 
   409  000F                     	;# 
   410  0010                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0014                     	;# 
   415  0015                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001D                     	;# 
   426  001E                     	;# 
   427  001F                     	;# 
   428  0081                     	;# 
   429  0085                     	;# 
   430  0086                     	;# 
   431  0087                     	;# 
   432  0088                     	;# 
   433  0089                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  008E                     	;# 
   437  008F                     	;# 
   438  0090                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0094                     	;# 
   445  0095                     	;# 
   446  0096                     	;# 
   447  0097                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009A                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  0105                     	;# 
   457  0107                     	;# 
   458  0108                     	;# 
   459  0109                     	;# 
   460  010C                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  010F                     	;# 
   465  0185                     	;# 
   466  0187                     	;# 
   467  0188                     	;# 
   468  0189                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471  0000                     	;# 
   472  0001                     	;# 
   473  0002                     	;# 
   474  0003                     	;# 
   475  0004                     	;# 
   476  0005                     	;# 
   477  0006                     	;# 
   478  0007                     	;# 
   479  0008                     	;# 
   480  0009                     	;# 
   481  000A                     	;# 
   482  000B                     	;# 
   483  000C                     	;# 
   484  000D                     	;# 
   485  000E                     	;# 
   486  000E                     	;# 
   487  000F                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0014                     	;# 
   493  0015                     	;# 
   494  0015                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  001A                     	;# 
   500  001B                     	;# 
   501  001B                     	;# 
   502  001C                     	;# 
   503  001D                     	;# 
   504  001E                     	;# 
   505  001F                     	;# 
   506  0081                     	;# 
   507  0085                     	;# 
   508  0086                     	;# 
   509  0087                     	;# 
   510  0088                     	;# 
   511  0089                     	;# 
   512  008C                     	;# 
   513  008D                     	;# 
   514  008E                     	;# 
   515  008F                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0093                     	;# 
   520  0093                     	;# 
   521  0093                     	;# 
   522  0094                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0098                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  0105                     	;# 
   535  0107                     	;# 
   536  0108                     	;# 
   537  0109                     	;# 
   538  010C                     	;# 
   539  010C                     	;# 
   540  010D                     	;# 
   541  010E                     	;# 
   542  010F                     	;# 
   543  0185                     	;# 
   544  0187                     	;# 
   545  0188                     	;# 
   546  0189                     	;# 
   547  018C                     	;# 
   548  018D                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  000E                     	;# 
   564  000E                     	;# 
   565  000F                     	;# 
   566  0010                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0014                     	;# 
   571  0015                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0017                     	;# 
   575  0018                     	;# 
   576  0019                     	;# 
   577  001A                     	;# 
   578  001B                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001D                     	;# 
   582  001E                     	;# 
   583  001F                     	;# 
   584  0081                     	;# 
   585  0085                     	;# 
   586  0086                     	;# 
   587  0087                     	;# 
   588  0088                     	;# 
   589  0089                     	;# 
   590  008C                     	;# 
   591  008D                     	;# 
   592  008E                     	;# 
   593  008F                     	;# 
   594  0090                     	;# 
   595  0091                     	;# 
   596  0092                     	;# 
   597  0093                     	;# 
   598  0093                     	;# 
   599  0093                     	;# 
   600  0094                     	;# 
   601  0095                     	;# 
   602  0096                     	;# 
   603  0097                     	;# 
   604  0098                     	;# 
   605  0099                     	;# 
   606  009A                     	;# 
   607  009B                     	;# 
   608  009C                     	;# 
   609  009D                     	;# 
   610  009E                     	;# 
   611  009F                     	;# 
   612  0105                     	;# 
   613  0107                     	;# 
   614  0108                     	;# 
   615  0109                     	;# 
   616  010C                     	;# 
   617  010C                     	;# 
   618  010D                     	;# 
   619  010E                     	;# 
   620  010F                     	;# 
   621  0185                     	;# 
   622  0187                     	;# 
   623  0188                     	;# 
   624  0189                     	;# 
   625  018C                     	;# 
   626  018D                     	;# 
   627  0000                     	;# 
   628  0001                     	;# 
   629  0002                     	;# 
   630  0003                     	;# 
   631  0004                     	;# 
   632  0005                     	;# 
   633  0006                     	;# 
   634  0007                     	;# 
   635  0008                     	;# 
   636  0009                     	;# 
   637  000A                     	;# 
   638  000B                     	;# 
   639  000C                     	;# 
   640  000D                     	;# 
   641  000E                     	;# 
   642  000E                     	;# 
   643  000F                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0014                     	;# 
   649  0015                     	;# 
   650  0015                     	;# 
   651  0016                     	;# 
   652  0017                     	;# 
   653  0018                     	;# 
   654  0019                     	;# 
   655  001A                     	;# 
   656  001B                     	;# 
   657  001B                     	;# 
   658  001C                     	;# 
   659  001D                     	;# 
   660  001E                     	;# 
   661  001F                     	;# 
   662  0081                     	;# 
   663  0085                     	;# 
   664  0086                     	;# 
   665  0087                     	;# 
   666  0088                     	;# 
   667  0089                     	;# 
   668  008C                     	;# 
   669  008D                     	;# 
   670  008E                     	;# 
   671  008F                     	;# 
   672  0090                     	;# 
   673  0091                     	;# 
   674  0092                     	;# 
   675  0093                     	;# 
   676  0093                     	;# 
   677  0093                     	;# 
   678  0094                     	;# 
   679  0095                     	;# 
   680  0096                     	;# 
   681  0097                     	;# 
   682  0098                     	;# 
   683  0099                     	;# 
   684  009A                     	;# 
   685  009B                     	;# 
   686  009C                     	;# 
   687  009D                     	;# 
   688  009E                     	;# 
   689  009F                     	;# 
   690  0105                     	;# 
   691  0107                     	;# 
   692  0108                     	;# 
   693  0109                     	;# 
   694  010C                     	;# 
   695  010C                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  010F                     	;# 
   699  0185                     	;# 
   700  0187                     	;# 
   701  0188                     	;# 
   702  0189                     	;# 
   703  018C                     	;# 
   704  018D                     	;# 
   705                           
   706                           	psect	idataCOMMON
   707  07DF                     __pidataCOMMON:
   708                           
   709                           ;initializer for _POT2_C
   710  07DF  3430               	retlw	48
   711                           
   712                           	psect	idataBANK0
   713  07BA                     __pidataBANK0:
   714                           
   715                           ;initializer for _SIGN
   716  07BA  3430               	retlw	48
   717                           
   718                           ;initializer for _POT2_D
   719  07BB  3430               	retlw	48
   720                           
   721                           ;initializer for _POT2_U
   722  07BC  3430               	retlw	48
   723                           
   724                           ;initializer for _POT1_C
   725  07BD  3430               	retlw	48
   726                           
   727                           ;initializer for _POT1_D
   728  07BE  3430               	retlw	48
   729                           
   730                           ;initializer for _POT1_U
   731  07BF  3430               	retlw	48
   732                           
   733                           ;initializer for _CONT_C
   734  07C0  3430               	retlw	48
   735                           
   736                           ;initializer for _CONT_D
   737  07C1  3430               	retlw	48
   738                           
   739                           ;initializer for _CONT_U
   740  07C2  3430               	retlw	48
   741  0013                     _SSPBUF	set	19
   742  0014                     _SSPCON	set	20
   743  0018                     _RCSTAbits	set	24
   744  0006                     _PORTBbits	set	6
   745  001F                     _ADCON0bits	set	31
   746  0019                     _TXREG	set	25
   747  0007                     _PORTCbits	set	7
   748  0008                     _PORTD	set	8
   749  0007                     _PORTC	set	7
   750  0006                     _PORTB	set	6
   751  0005                     _PORTA	set	5
   752  0001                     _TMR0	set	1
   753  000B                     _INTCONbits	set	11
   754  000C                     _PIR1bits	set	12
   755  0094                     _SSPSTATbits	set	148
   756  0094                     _SSPSTAT	set	148
   757  0099                     _SPBRG	set	153
   758  009A                     _SPBRGH	set	154
   759  0098                     _TXSTAbits	set	152
   760  008F                     _OSCCONbits	set	143
   761  009F                     _ADCON1	set	159
   762  0081                     _OPTION_REG	set	129
   763  0087                     _TRISC	set	135
   764  0086                     _TRISB	set	134
   765  0085                     _TRISA	set	133
   766  0088                     _TRISD	set	136
   767  008C                     _PIE1bits	set	140
   768  043B                     _TRISC3	set	1083
   769  043D                     _TRISC5	set	1085
   770  0187                     _BAUDCTLbits	set	391
   771  0189                     _ANSELH	set	393
   772  0188                     _ANSELbits	set	392
   773  0188                     _ANSEL	set	392
   774                           
   775                           	psect	strings
   776  0717                     __pstrings:
   777  0717                     stringtab:
   778  0717                     __stringtab:
   779                           
   780                           ;	String table - string pointers are 1 byte each
   781  0717  1BFF               	btfsc	btemp+1,7
   782  0718  2F21               	ljmp	stringcode
   783  0719  1383               	bcf	3,7
   784  071A  187F               	btfsc	btemp+1,0
   785  071B  1783               	bsf	3,7
   786  071C  0800               	movf	0,w
   787  071D  0A84               	incf	4,f
   788  071E  1903               	skipnz
   789  071F  0AFF               	incf	btemp+1,f
   790  0720  0008               	return
   791  0721                     stringcode:
   792  0721                     stringdir:
   793  0721  3007               	movlw	high stringdir
   794  0722  008A               	movwf	10
   795  0723  0804               	movf	4,w
   796  0724  0A84               	incf	4,f
   797  0725  0782               	addwf	2,f
   798  0726                     __stringbase:
   799  0726  3400               	retlw	0
   800  0727                     __end_of__stringtab:
   801  0727                     STR_1:
   802  0727  3453               	retlw	83	;'S'
   803  0728  3431               	retlw	49	;'1'
   804  0729  3420               	retlw	32	;' '
   805  072A  3420               	retlw	32	;' '
   806  072B  3420               	retlw	32	;' '
   807  072C  3420               	retlw	32	;' '
   808  072D  3453               	retlw	83	;'S'
   809  072E  3432               	retlw	50	;'2'
   810  072F  3420               	retlw	32	;' '
   811  0730  3420               	retlw	32	;' '
   812  0731  3420               	retlw	32	;' '
   813  0732  3420               	retlw	32	;' '
   814  0733  3453               	retlw	83	;'S'
   815  0734  3433               	retlw	51	;'3'
   816  0735  3400               	retlw	0
   817                           
   818                           	psect	cinit
   819  0013                     start_initialization:	
   820                           ; #config settings
   821                           
   822  0013                     __initialization:
   823                           
   824                           ; Initialize objects allocated to BANK0
   825  0013  1383               	bcf	3,7	;select IRP bank0
   826  0014  303E               	movlw	low (__pdataBANK0+9)
   827  0015  00FD               	movwf	btemp+-1
   828  0016  3007               	movlw	high __pidataBANK0
   829  0017  00FE               	movwf	btemp
   830  0018  30BA               	movlw	low __pidataBANK0
   831  0019  00FF               	movwf	btemp+1
   832  001A  3035               	movlw	low __pdataBANK0
   833  001B  0084               	movwf	4
   834  001C  120A  118A  27AB  120A  118A  	fcall	init_ram0
   835                           
   836                           ; Initialize objects allocated to COMMON
   837  0021  120A  118A  27DF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   838  0026  00FA               	movwf	__pdataCOMMON& (0+127)
   839                           
   840                           ; Clear objects allocated to BANK0
   841  0027  01BE               	clrf	__pbssBANK0& (0+127)
   842  0028  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   843  0029  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   844  002A  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   845  002B  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   846  002C  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   847  002D  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   848  002E  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   849                           
   850                           ; Clear objects allocated to COMMON
   851  002F  01F8               	clrf	__pbssCOMMON& (0+127)
   852  0030  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   853  0031                     end_of_initialization:	
   854                           ;End of C runtime variable initialization code
   855                           
   856  0031                     __end_of__initialization:
   857  0031  0183               	clrf	3
   858  0032  120A  118A  2C0E   	ljmp	_main	;jump to C main() function
   859                           
   860                           	psect	bssCOMMON
   861  0078                     __pbssCOMMON:
   862  0078                     _toggleTX:
   863  0078                     	ds	1
   864  0079                     _temp3:
   865  0079                     	ds	1
   866                           
   867                           	psect	dataCOMMON
   868  007A                     __pdataCOMMON:
   869  007A                     _POT2_C:
   870  007A                     	ds	1
   871                           
   872                           	psect	bssBANK0
   873  003E                     __pbssBANK0:
   874  003E                     _toggleS:
   875  003E                     	ds	1
   876  003F                     _lec_ADC:
   877  003F                     	ds	1
   878  0040                     _var:
   879  0040                     	ds	1
   880  0041                     _pot2:
   881  0041                     	ds	1
   882  0042                     _temp2:
   883  0042                     	ds	1
   884  0043                     _CONT:
   885  0043                     	ds	1
   886  0044                     _basura:
   887  0044                     	ds	1
   888  0045                     _go_adc:
   889  0045                     	ds	1
   890                           
   891                           	psect	dataBANK0
   892  0035                     __pdataBANK0:
   893  0035                     _SIGN:
   894  0035                     	ds	1
   895  0036                     _POT2_D:
   896  0036                     	ds	1
   897  0037                     _POT2_U:
   898  0037                     	ds	1
   899  0038                     _POT1_C:
   900  0038                     	ds	1
   901  0039                     _POT1_D:
   902  0039                     	ds	1
   903  003A                     _POT1_U:
   904  003A                     	ds	1
   905  003B                     _CONT_C:
   906  003B                     	ds	1
   907  003C                     _CONT_D:
   908  003C                     	ds	1
   909  003D                     _CONT_U:
   910  003D                     	ds	1
   911                           
   912                           	psect	inittext
   913  07A7                     init_fetch0:	
   914                           ;	Called with low address in FSR and high address in W
   915                           
   916  07A7  087E               	movf	btemp,w
   917  07A8  008A               	movwf	10
   918  07A9  087F               	movf	btemp+1,w
   919  07AA  0082               	movwf	2
   920  07AB                     init_ram0:	
   921                           ;Called with:
   922                           ;	high address of idata address in btemp 
   923                           ;	low address of idata address in btemp+1 
   924                           ;	low address of data in FSR
   925                           ;	high address + 1 of data in btemp-1
   926                           
   927  07AB  120A  118A  27A7  120A  118A  	fcall	init_fetch0
   928  07B0  0080               	movwf	0
   929  07B1  0A84               	incf	4,f
   930  07B2  0804               	movf	4,w
   931  07B3  067D               	xorwf	btemp+-1,w
   932  07B4  1903               	btfsc	3,2
   933  07B5  3400               	retlw	0
   934  07B6  0AFF               	incf	btemp+1,f
   935  07B7  1903               	btfsc	3,2
   936  07B8  0AFE               	incf	btemp,f
   937  07B9  2FAB               	goto	init_ram0
   938                           
   939                           	psect	cstackCOMMON
   940  0070                     __pcstackCOMMON:
   941  0070                     ?_envio:
   942  0070                     ??_envio:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_initOsc:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ?_Setup:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ?_USARTconf:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?_Lcd_Init:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_conver:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ?_map_pot1:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_map_cont:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ?_map_pot2:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_slaveT:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_spiWrite:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ?_spiRead:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_num_ascii:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_Lcd_Cmd:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_ISR:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ??_ISR:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ?_main:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ?_slave1:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ?_slave3:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     ?_slave2:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0070                     ?_Lcd_Port:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0070                     ?_Lcd_Write_Char:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ?_spiReceiveWait:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011                           
  1012                           ; 1 bytes @ 0x0
  1013  0070                     	ds	3
  1014  0073                     ??_initOsc:
  1015  0073                     ??_Setup:	
  1016                           ; 1 bytes @ 0x3
  1017                           
  1018  0073                     ??_USARTconf:	
  1019                           ; 1 bytes @ 0x3
  1020                           
  1021  0073                     ?_spiInit:	
  1022                           ; 1 bytes @ 0x3
  1023                           
  1024  0073                     ??_conver:	
  1025                           ; 1 bytes @ 0x3
  1026                           
  1027  0073                     ??_spiWrite:	
  1028                           ; 1 bytes @ 0x3
  1029                           
  1030  0073                     ??_spiRead:	
  1031                           ; 1 bytes @ 0x3
  1032                           
  1033  0073                     ??_num_ascii:	
  1034                           ; 1 bytes @ 0x3
  1035                           
  1036  0073                     ??_Lcd_Port:	
  1037                           ; 1 bytes @ 0x3
  1038                           
  1039  0073                     ??_spiReceiveWait:	
  1040                           ; 1 bytes @ 0x3
  1041                           
  1042  0073                     ?___bmul:	
  1043                           ; 1 bytes @ 0x3
  1044                           
  1045  0073                     ?___wmul:	
  1046                           ; 1 bytes @ 0x3
  1047                           
  1048  0073                     num_ascii@num:	
  1049                           ; 2 bytes @ 0x3
  1050                           
  1051  0073                     Lcd_Port@a:	
  1052                           ; 1 bytes @ 0x3
  1053                           
  1054  0073                     initOsc@frec:	
  1055                           ; 1 bytes @ 0x3
  1056                           
  1057  0073                     spiInit@sDataSample:	
  1058                           ; 1 bytes @ 0x3
  1059                           
  1060  0073                     spiWrite@dat:	
  1061                           ; 1 bytes @ 0x3
  1062                           
  1063  0073                     ___bmul@multiplicand:	
  1064                           ; 1 bytes @ 0x3
  1065                           
  1066  0073                     ___wmul@multiplier:	
  1067                           ; 1 bytes @ 0x3
  1068                           
  1069                           
  1070                           ; 2 bytes @ 0x3
  1071  0073                     	ds	1
  1072  0074                     ??_Lcd_Cmd:
  1073  0074                     ??_slave1:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076  0074                     ??_slave3:	
  1077                           ; 1 bytes @ 0x4
  1078                           
  1079  0074                     ??_slave2:	
  1080                           ; 1 bytes @ 0x4
  1081                           
  1082  0074                     ??_Lcd_Write_Char:	
  1083                           ; 1 bytes @ 0x4
  1084                           
  1085  0074                     ??___bmul:	
  1086                           ; 1 bytes @ 0x4
  1087                           
  1088  0074                     spiInit@sClockIdle:	
  1089                           ; 1 bytes @ 0x4
  1090                           
  1091  0074                     ___bmul@product:	
  1092                           ; 1 bytes @ 0x4
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x4
  1096  0074                     	ds	1
  1097  0075                     Lcd_Write_Char@a:
  1098  0075                     spiInit@sTransmitEdge:	
  1099                           ; 1 bytes @ 0x5
  1100                           
  1101  0075                     ___bmul@multiplier:	
  1102                           ; 1 bytes @ 0x5
  1103                           
  1104  0075                     ___wmul@multiplicand:	
  1105                           ; 1 bytes @ 0x5
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x5
  1109  0075                     	ds	1
  1110  0076                     ??_spiInit:
  1111  0076                     ?_Lcd_Write_String:	
  1112                           ; 1 bytes @ 0x6
  1113                           
  1114  0076                     ??_slaveT:	
  1115                           ; 1 bytes @ 0x6
  1116                           
  1117  0076                     Lcd_Cmd@a:	
  1118                           ; 1 bytes @ 0x6
  1119                           
  1120  0076                     spiInit@sType:	
  1121                           ; 1 bytes @ 0x6
  1122                           
  1123  0076                     Lcd_Write_String@a:	
  1124                           ; 1 bytes @ 0x6
  1125                           
  1126                           
  1127                           ; 2 bytes @ 0x6
  1128  0076                     	ds	1
  1129  0077                     ?_Lcd_Set_Cursor:
  1130  0077                     ??___wmul:	
  1131                           ; 1 bytes @ 0x7
  1132                           
  1133  0077                     ??___awdiv:	
  1134                           ; 1 bytes @ 0x7
  1135                           
  1136  0077                     Lcd_Set_Cursor@b:	
  1137                           ; 1 bytes @ 0x7
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x7
  1141  0077                     	ds	1
  1142  0078                     ??_Lcd_Set_Cursor:
  1143  0078                     ??_main:	
  1144                           ; 1 bytes @ 0x8
  1145                           
  1146                           
  1147                           	psect	cstackBANK0
  1148  0020                     __pcstackBANK0:	
  1149                           ; 1 bytes @ 0x8
  1150                           
  1151  0020                     ??_Lcd_Init:
  1152  0020                     Lcd_Set_Cursor@a:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0020                     ___wmul@product:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0020                     conver@temporal:	
  1159                           ; 2 bytes @ 0x0
  1160                           
  1161                           
  1162                           ; 16 bytes @ 0x0
  1163  0020                     	ds	1
  1164  0021                     Lcd_Set_Cursor@temp:
  1165                           
  1166                           ; 1 bytes @ 0x1
  1167  0021                     	ds	1
  1168  0022                     ?___awdiv:
  1169  0022                     Lcd_Set_Cursor@z:	
  1170                           ; 2 bytes @ 0x2
  1171                           
  1172  0022                     ___awdiv@divisor:	
  1173                           ; 1 bytes @ 0x2
  1174                           
  1175                           
  1176                           ; 2 bytes @ 0x2
  1177  0022                     	ds	2
  1178  0024                     ___awdiv@dividend:
  1179                           
  1180                           ; 2 bytes @ 0x4
  1181  0024                     	ds	2
  1182  0026                     ___awdiv@counter:
  1183                           
  1184                           ; 1 bytes @ 0x6
  1185  0026                     	ds	1
  1186  0027                     ___awdiv@sign:
  1187                           
  1188                           ; 1 bytes @ 0x7
  1189  0027                     	ds	1
  1190  0028                     ___awdiv@quotient:
  1191                           
  1192                           ; 2 bytes @ 0x8
  1193  0028                     	ds	2
  1194  002A                     ??_map_pot1:
  1195  002A                     ??_map_cont:	
  1196                           ; 1 bytes @ 0xA
  1197                           
  1198  002A                     ??_map_pot2:	
  1199                           ; 1 bytes @ 0xA
  1200                           
  1201                           
  1202                           ; 1 bytes @ 0xA
  1203  002A                     	ds	6
  1204  0030                     ??_Lcd_Write_String:
  1205  0030                     _map_pot1$1355:	
  1206                           ; 1 bytes @ 0x10
  1207                           
  1208                           
  1209                           ; 2 bytes @ 0x10
  1210  0030                     	ds	3
  1211  0033                     Lcd_Write_String@i:
  1212                           
  1213                           ; 2 bytes @ 0x13
  1214  0033                     	ds	2
  1215                           
  1216                           	psect	maintext
  1217  040E                     __pmaintext:	
  1218 ;;
  1219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1220 ;;
  1221 ;; *************** function _main *****************
  1222 ;; Defined at:
  1223 ;;		line 107 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : B00/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       0       0       0       0
  1238 ;;      Locals:         0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0
  1240 ;;      Totals:         0       0       0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels required when called:    6
  1243 ;; This function calls:
  1244 ;;		_Lcd_Init
  1245 ;;		_Lcd_Set_Cursor
  1246 ;;		_Lcd_Write_String
  1247 ;;		_Setup
  1248 ;;		_USARTconf
  1249 ;;		_conver
  1250 ;;		_initOsc
  1251 ;;		_map_cont
  1252 ;;		_map_pot1
  1253 ;;		_map_pot2
  1254 ;;		_slaveT
  1255 ;;		_spiInit
  1256 ;; This function is called by:
  1257 ;;		Startup code after reset
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _main
  1263  040E                     _main:
  1264  040E                     l2221:	
  1265                           ;incstack = 0
  1266                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1267                           
  1268                           
  1269                           ;main.c: 108: TRISD = 0x00;
  1270  040E  1683               	bsf	3,5	;RP0=1, select bank1
  1271  040F  1303               	bcf	3,6	;RP1=0, select bank1
  1272  0410  0188               	clrf	8	;volatile
  1273  0411                     l2223:
  1274                           
  1275                           ;main.c: 109: initOsc(20);
  1276  0411  3014               	movlw	20
  1277  0412  120A  118A  26C9  120A  118A  	fcall	_initOsc
  1278  0417                     l2225:
  1279                           
  1280                           ;main.c: 110: Setup();
  1281  0417  120A  118A  26F0  120A  118A  	fcall	_Setup
  1282  041C                     l2227:
  1283                           
  1284                           ;main.c: 111: USARTconf();
  1285  041C  120A  118A  2766  120A  118A  	fcall	_USARTconf
  1286  0421                     l2229:
  1287                           
  1288                           ;main.c: 112: spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
  1289  0421  01F3               	clrf	spiInit@sDataSample
  1290  0422  01F4               	clrf	spiInit@sClockIdle
  1291  0423  01F5               	clrf	spiInit@sTransmitEdge
  1292  0424  3020               	movlw	32
  1293  0425  120A  118A  2750  120A  118A  	fcall	_spiInit
  1294  042A                     l2231:
  1295                           
  1296                           ;main.c: 116: Lcd_Init();
  1297  042A  120A  118A  2473  120A  118A  	fcall	_Lcd_Init
  1298  042F                     l2233:
  1299                           
  1300                           ;main.c: 119: toggleS++;
  1301  042F  3001               	movlw	1
  1302  0430  00FF               	movwf	btemp+1
  1303  0431  087F               	movf	btemp+1,w
  1304  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0434  07BE               	addwf	_toggleS,f
  1307  0435                     l2235:
  1308                           
  1309                           ;main.c: 121: Lcd_Set_Cursor(1,1);
  1310  0435  01F7               	clrf	Lcd_Set_Cursor@b
  1311  0436  0AF7               	incf	Lcd_Set_Cursor@b,f
  1312  0437  3001               	movlw	1
  1313  0438  120A  118A  25CB  120A  118A  	fcall	_Lcd_Set_Cursor
  1314  043D                     l2237:
  1315                           
  1316                           ;main.c: 122: Lcd_Write_String("S1    S2    S3");
  1317  043D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1318  043E  00F6               	movwf	Lcd_Write_String@a
  1319  043F  3080               	movlw	128
  1320  0440  00F7               	movwf	Lcd_Write_String@a+1
  1321  0441  120A  118A  24D8  120A  118A  	fcall	_Lcd_Write_String
  1322  0446                     l2239:
  1323                           
  1324                           ;main.c: 123: Lcd_Set_Cursor(2,1);
  1325  0446  01F7               	clrf	Lcd_Set_Cursor@b
  1326  0447  0AF7               	incf	Lcd_Set_Cursor@b,f
  1327  0448  3002               	movlw	2
  1328  0449  120A  118A  25CB  120A  118A  	fcall	_Lcd_Set_Cursor
  1329  044E                     l2241:
  1330                           
  1331                           ;main.c: 124: Lcd_Write_String(conver());
  1332  044E  120A  118A  251E  120A  118A  	fcall	_conver
  1333  0453  00F6               	movwf	Lcd_Write_String@a
  1334  0454  3000               	movlw	0
  1335  0455  00F7               	movwf	Lcd_Write_String@a+1
  1336  0456  120A  118A  24D8  120A  118A  	fcall	_Lcd_Write_String
  1337  045B                     l2243:
  1338                           
  1339                           ;main.c: 125: map_pot1();
  1340  045B  120A  118A  218F  120A  118A  	fcall	_map_pot1
  1341  0460                     l2245:
  1342                           
  1343                           ;main.c: 126: map_cont();
  1344  0460  120A  118A  2325  120A  118A  	fcall	_map_cont
  1345  0465                     l2247:
  1346                           
  1347                           ;main.c: 127: map_pot2();
  1348  0465  120A  118A  2035  120A  118A  	fcall	_map_pot2
  1349  046A                     l2249:
  1350                           
  1351                           ;main.c: 128: slaveT();
  1352  046A  120A  118A  2624  120A  118A  	fcall	_slaveT
  1353  046F  2C2F               	goto	l2233
  1354  0470  120A  118A  2810   	ljmp	start
  1355  0473                     __end_of_main:
  1356                           
  1357                           	psect	text1
  1358  0750                     __ptext1:	
  1359 ;; *************** function _spiInit *****************
  1360 ;; Defined at:
  1361 ;;		line 12 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  sType           1    wreg     enum E1265
  1364 ;;  sDataSample     1    3[COMMON] enum E1273
  1365 ;;  sClockIdle      1    4[COMMON] enum E1277
  1366 ;;  sTransmitEdg    1    5[COMMON] enum E1281
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  sType           1    6[COMMON] enum E1265
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1378 ;;      Params:         3       0       0       0       0
  1379 ;;      Locals:         1       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0
  1381 ;;      Totals:         4       0       0       0       0
  1382 ;;Total ram usage:        4 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    2
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           
  1393                           ;psect for function _spiInit
  1394  0750                     _spiInit:
  1395                           
  1396                           ;incstack = 0
  1397                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1398                           ;spiInit@sType stored from wreg
  1399  0750  00F6               	movwf	spiInit@sType
  1400  0751                     l1771:
  1401                           
  1402                           ;SPI.c: 14: TRISC5 = 0;
  1403  0751  1683               	bsf	3,5	;RP0=1, select bank1
  1404  0752  1303               	bcf	3,6	;RP1=0, select bank1
  1405  0753  1287               	bcf	7,5	;volatile
  1406                           
  1407                           ;SPI.c: 15: if(sType & 0b00000100)
  1408  0754  1D76               	btfss	spiInit@sType,2
  1409  0755  2F57               	goto	u801
  1410  0756  2F58               	goto	u800
  1411  0757                     u801:
  1412  0757  2F5C               	goto	l1777
  1413  0758                     u800:
  1414  0758                     l1773:
  1415                           
  1416                           ;SPI.c: 16: {;SPI.c: 17: SSPSTAT = sTransmitEdge;
  1417  0758  0875               	movf	spiInit@sTransmitEdge,w
  1418  0759  0094               	movwf	20	;volatile
  1419  075A                     l1775:
  1420                           
  1421                           ;SPI.c: 18: TRISC3 = 1;
  1422  075A  1587               	bsf	7,3	;volatile
  1423                           
  1424                           ;SPI.c: 19: }
  1425  075B  2F60               	goto	l303
  1426  075C                     l1777:
  1427                           
  1428                           ;SPI.c: 20: else;SPI.c: 21: {;SPI.c: 22: SSPSTAT = sDataSample | sTransmitEdge;
  1429  075C  0873               	movf	spiInit@sDataSample,w
  1430  075D  0475               	iorwf	spiInit@sTransmitEdge,w
  1431  075E  0094               	movwf	20	;volatile
  1432  075F                     l1779:
  1433                           
  1434                           ;SPI.c: 23: TRISC3 = 0;
  1435  075F  1187               	bcf	7,3	;volatile
  1436  0760                     l303:
  1437                           
  1438                           ;SPI.c: 24: };SPI.c: 26: SSPCON = sType | sClockIdle;
  1439  0760  0876               	movf	spiInit@sType,w
  1440  0761  0474               	iorwf	spiInit@sClockIdle,w
  1441  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0764  0094               	movwf	20	;volatile
  1444  0765                     l304:
  1445  0765  0008               	return
  1446  0766                     __end_of_spiInit:
  1447                           
  1448                           	psect	text2
  1449  0624                     __ptext2:	
  1450 ;; *************** function _slaveT *****************
  1451 ;; Defined at:
  1452 ;;		line 292 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0
  1469 ;;      Totals:         0       0       0       0       0
  1470 ;;Total ram usage:        0 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    5
  1473 ;; This function calls:
  1474 ;;		_slave1
  1475 ;;		_slave2
  1476 ;;		_slave3
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _slaveT
  1484  0624                     _slaveT:
  1485  0624                     l1883:	
  1486                           ;incstack = 0
  1487                           ; Regs used in _slaveT: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1488                           
  1489                           
  1490                           ;main.c: 293: if(toggleS == 1){
  1491  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0626  033E               	decf	_toggleS,w
  1494  0627  1D03               	btfss	3,2
  1495  0628  2E2A               	goto	u871
  1496  0629  2E2B               	goto	u870
  1497  062A                     u871:
  1498  062A  2E30               	goto	l1887
  1499  062B                     u870:
  1500  062B                     l1885:
  1501                           
  1502                           ;main.c: 294: slave1();
  1503  062B  120A  118A  26A0  120A  118A  	fcall	_slave1
  1504  0630                     l1887:
  1505                           
  1506                           ;main.c: 295: };main.c: 296: if(toggleS == 3){
  1507  0630  3003               	movlw	3
  1508  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0633  063E               	xorwf	_toggleS,w
  1511  0634  1D03               	btfss	3,2
  1512  0635  2E37               	goto	u881
  1513  0636  2E38               	goto	u880
  1514  0637                     u881:
  1515  0637  2E3D               	goto	l1891
  1516  0638                     u880:
  1517  0638                     l1889:
  1518                           
  1519                           ;main.c: 297: slave2();
  1520  0638  120A  118A  2677  120A  118A  	fcall	_slave2
  1521  063D                     l1891:
  1522                           
  1523                           ;main.c: 298: };main.c: 299: if(toggleS == 5){
  1524  063D  3005               	movlw	5
  1525  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1526  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0640  063E               	xorwf	_toggleS,w
  1528  0641  1D03               	btfss	3,2
  1529  0642  2E44               	goto	u891
  1530  0643  2E45               	goto	u890
  1531  0644                     u891:
  1532  0644  2E4D               	goto	l158
  1533  0645                     u890:
  1534  0645                     l1893:
  1535                           
  1536                           ;main.c: 300: slave3();
  1537  0645  120A  118A  264E  120A  118A  	fcall	_slave3
  1538  064A                     l1895:
  1539                           
  1540                           ;main.c: 301: toggleS = 0;
  1541  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1542  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1543  064C  01BE               	clrf	_toggleS
  1544  064D                     l158:
  1545  064D  0008               	return
  1546  064E                     __end_of_slaveT:
  1547                           
  1548                           	psect	text3
  1549  064E                     __ptext3:	
  1550 ;; *************** function _slave3 *****************
  1551 ;; Defined at:
  1552 ;;		line 191 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0
  1568 ;;      Temps:          2       0       0       0       0
  1569 ;;      Totals:         2       0       0       0       0
  1570 ;;Total ram usage:        2 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    4
  1573 ;; This function calls:
  1574 ;;		_spiRead
  1575 ;;		_spiWrite
  1576 ;; This function is called by:
  1577 ;;		_slaveT
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           
  1582                           ;psect for function _slave3
  1583  064E                     _slave3:
  1584  064E                     l1467:	
  1585                           ;incstack = 0
  1586                           ; Regs used in _slave3: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1587                           
  1588                           
  1589                           ;main.c: 192: PORTCbits.RC0 = 0;
  1590  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1591  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0650  1007               	bcf	7,0	;volatile
  1593  0651                     l1469:
  1594                           
  1595                           ;main.c: 193: _delay((unsigned long)((1)*(40000000/4000.0)));
  1596  0651  300D               	movlw	13
  1597  0652  00F5               	movwf	??_slave3+1
  1598  0653  30FB               	movlw	251
  1599  0654  00F4               	movwf	??_slave3
  1600  0655                     u1157:
  1601  0655  0BF4               	decfsz	??_slave3,f
  1602  0656  2E55               	goto	u1157
  1603  0657  0BF5               	decfsz	??_slave3+1,f
  1604  0658  2E55               	goto	u1157
  1605  0659  2E5A               	nop2
  1606  065A                     l1471:
  1607                           
  1608                           ;main.c: 195: spiWrite(basura);
  1609  065A  3000               	movlw	0
  1610  065B  120A  118A  27D3  120A  118A  	fcall	_spiWrite
  1611  0660                     l1473:
  1612                           
  1613                           ;main.c: 196: CONT = spiRead();
  1614  0660  120A  118A  27C3  120A  118A  	fcall	_spiRead
  1615  0665  00FF               	movwf	btemp+1
  1616  0666  087F               	movf	btemp+1,w
  1617  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0669  00C3               	movwf	_CONT
  1620  066A                     l1475:
  1621                           
  1622                           ;main.c: 198: _delay((unsigned long)((1)*(40000000/4000.0)));
  1623  066A  300D               	movlw	13
  1624  066B  00F5               	movwf	??_slave3+1
  1625  066C  30FB               	movlw	251
  1626  066D  00F4               	movwf	??_slave3
  1627  066E                     u1167:
  1628  066E  0BF4               	decfsz	??_slave3,f
  1629  066F  2E6E               	goto	u1167
  1630  0670  0BF5               	decfsz	??_slave3+1,f
  1631  0671  2E6E               	goto	u1167
  1632  0672  2E73               	nop2
  1633  0673                     l1477:
  1634                           
  1635                           ;main.c: 199: PORTCbits.RC0 = 1;
  1636  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0675  1407               	bsf	7,0	;volatile
  1639  0676                     l135:
  1640  0676  0008               	return
  1641  0677                     __end_of_slave3:
  1642                           
  1643                           	psect	text4
  1644  0677                     __ptext4:	
  1645 ;; *************** function _slave2 *****************
  1646 ;; Defined at:
  1647 ;;		line 204 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0
  1663 ;;      Temps:          2       0       0       0       0
  1664 ;;      Totals:         2       0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    4
  1668 ;; This function calls:
  1669 ;;		_spiRead
  1670 ;;		_spiWrite
  1671 ;; This function is called by:
  1672 ;;		_slaveT
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _slave2
  1678  0677                     _slave2:
  1679  0677                     l1479:	
  1680                           ;incstack = 0
  1681                           ; Regs used in _slave2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1682                           
  1683                           
  1684                           ;main.c: 205: PORTCbits.RC1 = 0;
  1685  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0679  1087               	bcf	7,1	;volatile
  1688  067A                     l1481:
  1689                           
  1690                           ;main.c: 206: _delay((unsigned long)((1)*(40000000/4000.0)));
  1691  067A  300D               	movlw	13
  1692  067B  00F5               	movwf	??_slave2+1
  1693  067C  30FB               	movlw	251
  1694  067D  00F4               	movwf	??_slave2
  1695  067E                     u1177:
  1696  067E  0BF4               	decfsz	??_slave2,f
  1697  067F  2E7E               	goto	u1177
  1698  0680  0BF5               	decfsz	??_slave2+1,f
  1699  0681  2E7E               	goto	u1177
  1700  0682  2E83               	nop2
  1701  0683                     l1483:
  1702                           
  1703                           ;main.c: 208: spiWrite(basura);
  1704  0683  3000               	movlw	0
  1705  0684  120A  118A  27D3  120A  118A  	fcall	_spiWrite
  1706  0689                     l1485:
  1707                           
  1708                           ;main.c: 209: pot2 = spiRead();
  1709  0689  120A  118A  27C3  120A  118A  	fcall	_spiRead
  1710  068E  00FF               	movwf	btemp+1
  1711  068F  087F               	movf	btemp+1,w
  1712  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0692  00C1               	movwf	_pot2
  1715  0693                     l1487:
  1716                           
  1717                           ;main.c: 211: _delay((unsigned long)((1)*(40000000/4000.0)));
  1718  0693  300D               	movlw	13
  1719  0694  00F5               	movwf	??_slave2+1
  1720  0695  30FB               	movlw	251
  1721  0696  00F4               	movwf	??_slave2
  1722  0697                     u1187:
  1723  0697  0BF4               	decfsz	??_slave2,f
  1724  0698  2E97               	goto	u1187
  1725  0699  0BF5               	decfsz	??_slave2+1,f
  1726  069A  2E97               	goto	u1187
  1727  069B  2E9C               	nop2
  1728  069C                     l1489:
  1729                           
  1730                           ;main.c: 212: PORTCbits.RC1 = 1;
  1731  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1732  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1733  069E  1487               	bsf	7,1	;volatile
  1734  069F                     l138:
  1735  069F  0008               	return
  1736  06A0                     __end_of_slave2:
  1737                           
  1738                           	psect	text5
  1739  06A0                     __ptext5:	
  1740 ;; *************** function _slave1 *****************
  1741 ;; Defined at:
  1742 ;;		line 178 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0
  1758 ;;      Temps:          2       0       0       0       0
  1759 ;;      Totals:         2       0       0       0       0
  1760 ;;Total ram usage:        2 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    4
  1763 ;; This function calls:
  1764 ;;		_spiRead
  1765 ;;		_spiWrite
  1766 ;; This function is called by:
  1767 ;;		_slaveT
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _slave1
  1773  06A0                     _slave1:
  1774  06A0                     l1455:	
  1775                           ;incstack = 0
  1776                           ; Regs used in _slave1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1777                           
  1778                           
  1779                           ;main.c: 179: PORTCbits.RC2 = 0;
  1780  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1781  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1782  06A2  1107               	bcf	7,2	;volatile
  1783  06A3                     l1457:
  1784                           
  1785                           ;main.c: 180: _delay((unsigned long)((1)*(40000000/4000.0)));
  1786  06A3  300D               	movlw	13
  1787  06A4  00F5               	movwf	??_slave1+1
  1788  06A5  30FB               	movlw	251
  1789  06A6  00F4               	movwf	??_slave1
  1790  06A7                     u1197:
  1791  06A7  0BF4               	decfsz	??_slave1,f
  1792  06A8  2EA7               	goto	u1197
  1793  06A9  0BF5               	decfsz	??_slave1+1,f
  1794  06AA  2EA7               	goto	u1197
  1795  06AB  2EAC               	nop2
  1796  06AC                     l1459:
  1797                           
  1798                           ;main.c: 182: spiWrite(basura);
  1799  06AC  3000               	movlw	0
  1800  06AD  120A  118A  27D3  120A  118A  	fcall	_spiWrite
  1801  06B2                     l1461:
  1802                           
  1803                           ;main.c: 183: lec_ADC = spiRead();
  1804  06B2  120A  118A  27C3  120A  118A  	fcall	_spiRead
  1805  06B7  00FF               	movwf	btemp+1
  1806  06B8  087F               	movf	btemp+1,w
  1807  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1808  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1809  06BB  00BF               	movwf	_lec_ADC
  1810  06BC                     l1463:
  1811                           
  1812                           ;main.c: 185: _delay((unsigned long)((1)*(40000000/4000.0)));
  1813  06BC  300D               	movlw	13
  1814  06BD  00F5               	movwf	??_slave1+1
  1815  06BE  30FB               	movlw	251
  1816  06BF  00F4               	movwf	??_slave1
  1817  06C0                     u1207:
  1818  06C0  0BF4               	decfsz	??_slave1,f
  1819  06C1  2EC0               	goto	u1207
  1820  06C2  0BF5               	decfsz	??_slave1+1,f
  1821  06C3  2EC0               	goto	u1207
  1822  06C4  2EC5               	nop2
  1823  06C5                     l1465:
  1824                           
  1825                           ;main.c: 186: PORTCbits.RC2 = 1;
  1826  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1827  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1828  06C7  1507               	bsf	7,2	;volatile
  1829  06C8                     l132:
  1830  06C8  0008               	return
  1831  06C9                     __end_of_slave1:
  1832                           
  1833                           	psect	text6
  1834  07D3                     __ptext6:	
  1835 ;; *************** function _spiWrite *****************
  1836 ;; Defined at:
  1837 ;;		line 34 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  dat             1    wreg     unsigned char 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  dat             1    3[COMMON] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0       0       0       0
  1852 ;;      Locals:         1       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0
  1854 ;;      Totals:         1       0       0       0       0
  1855 ;;Total ram usage:        1 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    2
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_slave1
  1862 ;;		_slave3
  1863 ;;		_slave2
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _spiWrite
  1869  07D3                     _spiWrite:
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _spiWrite: [wreg]
  1873                           ;spiWrite@dat stored from wreg
  1874  07D3  00F3               	movwf	spiWrite@dat
  1875  07D4                     l1445:
  1876                           
  1877                           ;SPI.c: 36: SSPBUF = dat;
  1878  07D4  0873               	movf	spiWrite@dat,w
  1879  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1880  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1881  07D7  0093               	movwf	19	;volatile
  1882  07D8                     l313:
  1883  07D8  0008               	return
  1884  07D9                     __end_of_spiWrite:
  1885                           
  1886                           	psect	text7
  1887  07C3                     __ptext7:	
  1888 ;; *************** function _spiRead *****************
  1889 ;; Defined at:
  1890 ;;		line 49 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      unsigned char 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0
  1907 ;;      Totals:         0       0       0       0       0
  1908 ;;Total ram usage:        0 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    3
  1911 ;; This function calls:
  1912 ;;		_spiReceiveWait
  1913 ;; This function is called by:
  1914 ;;		_slave1
  1915 ;;		_slave3
  1916 ;;		_slave2
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function _spiRead
  1922  07C3                     _spiRead:
  1923  07C3                     l1447:	
  1924                           ;incstack = 0
  1925                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1926                           
  1927                           
  1928                           ;SPI.c: 51: spiReceiveWait();
  1929  07C3  120A  118A  27CC  120A  118A  	fcall	_spiReceiveWait
  1930  07C8                     l1449:
  1931                           
  1932                           ;SPI.c: 52: return(SSPBUF);
  1933  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  1934  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  1935  07CA  0813               	movf	19,w	;volatile
  1936  07CB                     l321:
  1937  07CB  0008               	return
  1938  07CC                     __end_of_spiRead:
  1939                           
  1940                           	psect	text8
  1941  07CC                     __ptext8:	
  1942 ;; *************** function _spiReceiveWait *****************
  1943 ;; Defined at:
  1944 ;;		line 29 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		None
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0
  1961 ;;      Totals:         0       0       0       0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    2
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_spiRead
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _spiReceiveWait
  1974  07CC                     _spiReceiveWait:
  1975  07CC                     l1443:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _spiReceiveWait: []
  1978                           
  1979  07CC                     l307:	
  1980                           ;SPI.c: 31: while ( !SSPSTATbits.BF );
  1981                           
  1982  07CC  1683               	bsf	3,5	;RP0=1, select bank1
  1983  07CD  1303               	bcf	3,6	;RP1=0, select bank1
  1984  07CE  1C14               	btfss	20,0	;volatile
  1985  07CF  2FD1               	goto	u471
  1986  07D0  2FD2               	goto	u470
  1987  07D1                     u471:
  1988  07D1  2FCC               	goto	l307
  1989  07D2                     u470:
  1990  07D2                     l310:
  1991  07D2  0008               	return
  1992  07D3                     __end_of_spiReceiveWait:
  1993                           
  1994                           	psect	text9
  1995  0035                     __ptext9:	
  1996 ;; *************** function _map_pot2 *****************
  1997 ;; Defined at:
  1998 ;;		line 230 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2012 ;;      Params:         0       0       0       0       0
  2013 ;;      Locals:         0       0       0       0       0
  2014 ;;      Temps:          0       2       0       0       0
  2015 ;;      Totals:         0       2       0       0       0
  2016 ;;Total ram usage:        2 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    3
  2019 ;; This function calls:
  2020 ;;		___awdiv
  2021 ;;		___bmul
  2022 ;;		___wmul
  2023 ;;		_num_ascii
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function _map_pot2
  2031  0035                     _map_pot2:
  2032  0035                     l2197:	
  2033                           ;incstack = 0
  2034                           ; Regs used in _map_pot2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2035                           
  2036                           
  2037                           ;main.c: 231: temp3 = pot2;
  2038  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0037  0841               	movf	_pot2,w
  2041  0038  00FF               	movwf	btemp+1
  2042  0039  087F               	movf	btemp+1,w
  2043  003A  00F9               	movwf	_temp3
  2044  003B                     l2199:
  2045                           
  2046                           ;main.c: 232: if(temp3 >= 69){
  2047  003B  3045               	movlw	69
  2048  003C  0279               	subwf	_temp3,w
  2049  003D  1C03               	skipc
  2050  003E  2840               	goto	u1141
  2051  003F  2841               	goto	u1140
  2052  0040                     u1141:
  2053  0040  28E8               	goto	l2211
  2054  0041                     u1140:
  2055  0041                     l2201:
  2056                           
  2057                           ;main.c: 233: temp3 = ((temp3-69)*150)/186;
  2058  0041  30BA               	movlw	186
  2059  0042  00A2               	movwf	___awdiv@divisor
  2060  0043  3000               	movlw	0
  2061  0044  00A3               	movwf	___awdiv@divisor+1
  2062  0045  0879               	movf	_temp3,w
  2063  0046  3EBB               	addlw	187
  2064  0047  00F3               	movwf	___wmul@multiplier
  2065  0048  30FF               	movlw	255
  2066  0049  1803               	skipnc
  2067  004A  3000               	movlw	0
  2068  004B  00F4               	movwf	___wmul@multiplier+1
  2069  004C  3096               	movlw	150
  2070  004D  00F5               	movwf	___wmul@multiplicand
  2071  004E  3000               	movlw	0
  2072  004F  00F6               	movwf	___wmul@multiplicand+1
  2073  0050  120A  118A  25F9  120A  118A  	fcall	___wmul
  2074  0055  0874               	movf	?___wmul+1,w
  2075  0056  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0057  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0058  00A5               	movwf	___awdiv@dividend+1
  2078  0059  0873               	movf	?___wmul,w
  2079  005A  00A4               	movwf	___awdiv@dividend
  2080  005B  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2081  0060  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0061  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0062  0822               	movf	?___awdiv,w
  2084  0063  00FF               	movwf	btemp+1
  2085  0064  087F               	movf	btemp+1,w
  2086  0065  00F9               	movwf	_temp3
  2087                           
  2088                           ;main.c: 234: POT2_C = (temp3/100);
  2089  0066  3064               	movlw	100
  2090  0067  00A2               	movwf	___awdiv@divisor
  2091  0068  3000               	movlw	0
  2092  0069  00A3               	movwf	___awdiv@divisor+1
  2093  006A  0879               	movf	_temp3,w
  2094  006B  00AA               	movwf	??_map_pot2
  2095  006C  01AB               	clrf	??_map_pot2+1
  2096  006D  082A               	movf	??_map_pot2,w
  2097  006E  00A4               	movwf	___awdiv@dividend
  2098  006F  082B               	movf	??_map_pot2+1,w
  2099  0070  00A5               	movwf	___awdiv@dividend+1
  2100  0071  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2101  0076  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0077  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0078  0822               	movf	?___awdiv,w
  2104  0079  00FF               	movwf	btemp+1
  2105  007A  087F               	movf	btemp+1,w
  2106  007B  00FA               	movwf	_POT2_C
  2107                           
  2108                           ;main.c: 235: POT2_D = (temp3-(POT2_C*100))/10;
  2109  007C  300A               	movlw	10
  2110  007D  00A2               	movwf	___awdiv@divisor
  2111  007E  3000               	movlw	0
  2112  007F  00A3               	movwf	___awdiv@divisor+1
  2113  0080  087A               	movf	_POT2_C,w
  2114  0081  00AA               	movwf	??_map_pot2
  2115  0082  01AB               	clrf	??_map_pot2+1
  2116  0083  082A               	movf	??_map_pot2,w
  2117  0084  00F3               	movwf	___wmul@multiplier
  2118  0085  082B               	movf	??_map_pot2+1,w
  2119  0086  00F4               	movwf	___wmul@multiplier+1
  2120  0087  309C               	movlw	156
  2121  0088  00F5               	movwf	___wmul@multiplicand
  2122  0089  30FF               	movlw	255
  2123  008A  00F6               	movwf	___wmul@multiplicand+1
  2124  008B  120A  118A  25F9  120A  118A  	fcall	___wmul
  2125  0090  0879               	movf	_temp3,w
  2126  0091  0773               	addwf	?___wmul,w
  2127  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0094  00A4               	movwf	___awdiv@dividend
  2130  0095  0874               	movf	?___wmul+1,w
  2131  0096  1803               	skipnc
  2132  0097  0A74               	incf	?___wmul+1,w
  2133  0098  00A5               	movwf	___awdiv@dividend+1
  2134  0099  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2135  009E  1283               	bcf	3,5	;RP0=0, select bank0
  2136  009F  1303               	bcf	3,6	;RP1=0, select bank0
  2137  00A0  0822               	movf	?___awdiv,w
  2138  00A1  00FF               	movwf	btemp+1
  2139  00A2  087F               	movf	btemp+1,w
  2140  00A3  00B6               	movwf	_POT2_D
  2141                           
  2142                           ;main.c: 236: POT2_U = (temp3-(POT2_C*100)-(POT2_D*10));
  2143  00A4  309C               	movlw	156
  2144  00A5  00FF               	movwf	btemp+1
  2145  00A6  087F               	movf	btemp+1,w
  2146  00A7  00F3               	movwf	___bmul@multiplicand
  2147  00A8  087A               	movf	_POT2_C,w
  2148  00A9  120A  118A  2792  120A  118A  	fcall	___bmul
  2149  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2150  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2151  00B0  00AA               	movwf	??_map_pot2
  2152  00B1  30F6               	movlw	246
  2153  00B2  00FF               	movwf	btemp+1
  2154  00B3  087F               	movf	btemp+1,w
  2155  00B4  00F3               	movwf	___bmul@multiplicand
  2156  00B5  0836               	movf	_POT2_D,w
  2157  00B6  120A  118A  2792  120A  118A  	fcall	___bmul
  2158  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2159  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2160  00BD  072A               	addwf	??_map_pot2,w
  2161  00BE  0779               	addwf	_temp3,w
  2162  00BF  00FF               	movwf	btemp+1
  2163  00C0  087F               	movf	btemp+1,w
  2164  00C1  00B7               	movwf	_POT2_U
  2165  00C2                     l2203:
  2166                           
  2167                           ;main.c: 237: POT2_C = num_ascii(POT2_C);
  2168  00C2  087A               	movf	_POT2_C,w
  2169  00C3  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2170  00C8  00FF               	movwf	btemp+1
  2171  00C9  087F               	movf	btemp+1,w
  2172  00CA  00FA               	movwf	_POT2_C
  2173  00CB                     l2205:
  2174                           
  2175                           ;main.c: 238: POT2_D = num_ascii(POT2_D);
  2176  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2177  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2178  00CD  0836               	movf	_POT2_D,w
  2179  00CE  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2180  00D3  00FF               	movwf	btemp+1
  2181  00D4  087F               	movf	btemp+1,w
  2182  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  2183  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  2184  00D7  00B6               	movwf	_POT2_D
  2185  00D8                     l2207:
  2186                           
  2187                           ;main.c: 239: POT2_U = num_ascii(POT2_U);
  2188  00D8  0837               	movf	_POT2_U,w
  2189  00D9  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2190  00DE  00FF               	movwf	btemp+1
  2191  00DF  087F               	movf	btemp+1,w
  2192  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2193  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2194  00E2  00B7               	movwf	_POT2_U
  2195  00E3                     l2209:
  2196                           
  2197                           ;main.c: 240: SIGN = 0x20;
  2198  00E3  3020               	movlw	32
  2199  00E4  00FF               	movwf	btemp+1
  2200  00E5  087F               	movf	btemp+1,w
  2201  00E6  00B5               	movwf	_SIGN
  2202                           
  2203                           ;main.c: 241: }
  2204  00E7  298E               	goto	l146
  2205  00E8                     l2211:
  2206                           
  2207                           ;main.c: 242: else{;main.c: 243: temp3 = -((temp3-69)*55)/69;
  2208  00E8  30BB               	movlw	187
  2209  00E9  00A2               	movwf	___awdiv@divisor
  2210  00EA  30FF               	movlw	255
  2211  00EB  00A3               	movwf	___awdiv@divisor+1
  2212  00EC  0879               	movf	_temp3,w
  2213  00ED  3EBB               	addlw	187
  2214  00EE  00F3               	movwf	___wmul@multiplier
  2215  00EF  30FF               	movlw	255
  2216  00F0  1803               	skipnc
  2217  00F1  3000               	movlw	0
  2218  00F2  00F4               	movwf	___wmul@multiplier+1
  2219  00F3  3037               	movlw	55
  2220  00F4  00F5               	movwf	___wmul@multiplicand
  2221  00F5  3000               	movlw	0
  2222  00F6  00F6               	movwf	___wmul@multiplicand+1
  2223  00F7  120A  118A  25F9  120A  118A  	fcall	___wmul
  2224  00FC  0874               	movf	?___wmul+1,w
  2225  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  2226  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  2227  00FF  00A5               	movwf	___awdiv@dividend+1
  2228  0100  0873               	movf	?___wmul,w
  2229  0101  00A4               	movwf	___awdiv@dividend
  2230  0102  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2231  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0109  0822               	movf	?___awdiv,w
  2234  010A  00FF               	movwf	btemp+1
  2235  010B  087F               	movf	btemp+1,w
  2236  010C  00F9               	movwf	_temp3
  2237                           
  2238                           ;main.c: 244: POT2_C = (temp3/100);
  2239  010D  3064               	movlw	100
  2240  010E  00A2               	movwf	___awdiv@divisor
  2241  010F  3000               	movlw	0
  2242  0110  00A3               	movwf	___awdiv@divisor+1
  2243  0111  0879               	movf	_temp3,w
  2244  0112  00AA               	movwf	??_map_pot2
  2245  0113  01AB               	clrf	??_map_pot2+1
  2246  0114  082A               	movf	??_map_pot2,w
  2247  0115  00A4               	movwf	___awdiv@dividend
  2248  0116  082B               	movf	??_map_pot2+1,w
  2249  0117  00A5               	movwf	___awdiv@dividend+1
  2250  0118  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2251  011D  1283               	bcf	3,5	;RP0=0, select bank0
  2252  011E  1303               	bcf	3,6	;RP1=0, select bank0
  2253  011F  0822               	movf	?___awdiv,w
  2254  0120  00FF               	movwf	btemp+1
  2255  0121  087F               	movf	btemp+1,w
  2256  0122  00FA               	movwf	_POT2_C
  2257                           
  2258                           ;main.c: 245: POT2_D = (temp3-(POT2_C*100))/10;
  2259  0123  300A               	movlw	10
  2260  0124  00A2               	movwf	___awdiv@divisor
  2261  0125  3000               	movlw	0
  2262  0126  00A3               	movwf	___awdiv@divisor+1
  2263  0127  087A               	movf	_POT2_C,w
  2264  0128  00AA               	movwf	??_map_pot2
  2265  0129  01AB               	clrf	??_map_pot2+1
  2266  012A  082A               	movf	??_map_pot2,w
  2267  012B  00F3               	movwf	___wmul@multiplier
  2268  012C  082B               	movf	??_map_pot2+1,w
  2269  012D  00F4               	movwf	___wmul@multiplier+1
  2270  012E  309C               	movlw	156
  2271  012F  00F5               	movwf	___wmul@multiplicand
  2272  0130  30FF               	movlw	255
  2273  0131  00F6               	movwf	___wmul@multiplicand+1
  2274  0132  120A  118A  25F9  120A  118A  	fcall	___wmul
  2275  0137  0879               	movf	_temp3,w
  2276  0138  0773               	addwf	?___wmul,w
  2277  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2278  013A  1303               	bcf	3,6	;RP1=0, select bank0
  2279  013B  00A4               	movwf	___awdiv@dividend
  2280  013C  0874               	movf	?___wmul+1,w
  2281  013D  1803               	skipnc
  2282  013E  0A74               	incf	?___wmul+1,w
  2283  013F  00A5               	movwf	___awdiv@dividend+1
  2284  0140  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2285  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0146  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0147  0822               	movf	?___awdiv,w
  2288  0148  00FF               	movwf	btemp+1
  2289  0149  087F               	movf	btemp+1,w
  2290  014A  00B6               	movwf	_POT2_D
  2291                           
  2292                           ;main.c: 246: POT2_U = (temp3-(POT2_C*100)-(POT2_D*10));
  2293  014B  309C               	movlw	156
  2294  014C  00FF               	movwf	btemp+1
  2295  014D  087F               	movf	btemp+1,w
  2296  014E  00F3               	movwf	___bmul@multiplicand
  2297  014F  087A               	movf	_POT2_C,w
  2298  0150  120A  118A  2792  120A  118A  	fcall	___bmul
  2299  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0157  00AA               	movwf	??_map_pot2
  2302  0158  30F6               	movlw	246
  2303  0159  00FF               	movwf	btemp+1
  2304  015A  087F               	movf	btemp+1,w
  2305  015B  00F3               	movwf	___bmul@multiplicand
  2306  015C  0836               	movf	_POT2_D,w
  2307  015D  120A  118A  2792  120A  118A  	fcall	___bmul
  2308  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0163  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0164  072A               	addwf	??_map_pot2,w
  2311  0165  0779               	addwf	_temp3,w
  2312  0166  00FF               	movwf	btemp+1
  2313  0167  087F               	movf	btemp+1,w
  2314  0168  00B7               	movwf	_POT2_U
  2315  0169                     l2213:
  2316                           
  2317                           ;main.c: 247: POT2_C = num_ascii(POT2_C);
  2318  0169  087A               	movf	_POT2_C,w
  2319  016A  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2320  016F  00FF               	movwf	btemp+1
  2321  0170  087F               	movf	btemp+1,w
  2322  0171  00FA               	movwf	_POT2_C
  2323  0172                     l2215:
  2324                           
  2325                           ;main.c: 248: POT2_D = num_ascii(POT2_D);
  2326  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2327  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2328  0174  0836               	movf	_POT2_D,w
  2329  0175  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2330  017A  00FF               	movwf	btemp+1
  2331  017B  087F               	movf	btemp+1,w
  2332  017C  1283               	bcf	3,5	;RP0=0, select bank0
  2333  017D  1303               	bcf	3,6	;RP1=0, select bank0
  2334  017E  00B6               	movwf	_POT2_D
  2335  017F                     l2217:
  2336                           
  2337                           ;main.c: 249: POT2_U = num_ascii(POT2_U);
  2338  017F  0837               	movf	_POT2_U,w
  2339  0180  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2340  0185  00FF               	movwf	btemp+1
  2341  0186  087F               	movf	btemp+1,w
  2342  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2343  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2344  0189  00B7               	movwf	_POT2_U
  2345  018A                     l2219:
  2346                           
  2347                           ;main.c: 250: SIGN = 0x2D;
  2348  018A  302D               	movlw	45
  2349  018B  00FF               	movwf	btemp+1
  2350  018C  087F               	movf	btemp+1,w
  2351  018D  00B5               	movwf	_SIGN
  2352  018E                     l146:
  2353  018E  0008               	return
  2354  018F                     __end_of_map_pot2:
  2355                           
  2356                           	psect	text10
  2357  018F                     __ptext10:	
  2358 ;; *************** function _map_pot1 *****************
  2359 ;; Defined at:
  2360 ;;		line 217 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2374 ;;      Params:         0       0       0       0       0
  2375 ;;      Locals:         0       2       0       0       0
  2376 ;;      Temps:          0       6       0       0       0
  2377 ;;      Totals:         0       8       0       0       0
  2378 ;;Total ram usage:        8 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    3
  2381 ;; This function calls:
  2382 ;;		___awdiv
  2383 ;;		___bmul
  2384 ;;		___wmul
  2385 ;;		_num_ascii
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function _map_pot1
  2393  018F                     _map_pot1:
  2394  018F                     l2171:	
  2395                           ;incstack = 0
  2396                           ; Regs used in _map_pot1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2397                           
  2398                           
  2399                           ;main.c: 218: temp2 = lec_ADC;
  2400  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2402  0191  083F               	movf	_lec_ADC,w
  2403  0192  00FF               	movwf	btemp+1
  2404  0193  087F               	movf	btemp+1,w
  2405  0194  00C2               	movwf	_temp2
  2406  0195                     l2173:
  2407                           
  2408                           ;main.c: 219: POT1_C = ((temp2*100)/51)/100;
  2409  0195  3033               	movlw	51
  2410  0196  00A2               	movwf	___awdiv@divisor
  2411  0197  3000               	movlw	0
  2412  0198  00A3               	movwf	___awdiv@divisor+1
  2413  0199  0842               	movf	_temp2,w
  2414  019A  00AA               	movwf	??_map_pot1
  2415  019B  01AB               	clrf	??_map_pot1+1
  2416  019C  082A               	movf	??_map_pot1,w
  2417  019D  00F3               	movwf	___wmul@multiplier
  2418  019E  082B               	movf	??_map_pot1+1,w
  2419  019F  00F4               	movwf	___wmul@multiplier+1
  2420  01A0  3064               	movlw	100
  2421  01A1  00F5               	movwf	___wmul@multiplicand
  2422  01A2  3000               	movlw	0
  2423  01A3  00F6               	movwf	___wmul@multiplicand+1
  2424  01A4  120A  118A  25F9  120A  118A  	fcall	___wmul
  2425  01A9  0874               	movf	?___wmul+1,w
  2426  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2427  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2428  01AC  00A5               	movwf	___awdiv@dividend+1
  2429  01AD  0873               	movf	?___wmul,w
  2430  01AE  00A4               	movwf	___awdiv@dividend
  2431  01AF  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2432  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2433  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2434  01B6  0823               	movf	?___awdiv+1,w
  2435  01B7  00B1               	movwf	_map_pot1$1355+1
  2436  01B8  0822               	movf	?___awdiv,w
  2437  01B9  00B0               	movwf	_map_pot1$1355
  2438  01BA                     l2175:
  2439                           
  2440                           ;main.c: 219: POT1_C = ((temp2*100)/51)/100;
  2441  01BA  3064               	movlw	100
  2442  01BB  00A2               	movwf	___awdiv@divisor
  2443  01BC  3000               	movlw	0
  2444  01BD  00A3               	movwf	___awdiv@divisor+1
  2445  01BE  0831               	movf	_map_pot1$1355+1,w
  2446  01BF  00A5               	movwf	___awdiv@dividend+1
  2447  01C0  0830               	movf	_map_pot1$1355,w
  2448  01C1  00A4               	movwf	___awdiv@dividend
  2449  01C2  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2450  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2451  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2452  01C9  0822               	movf	?___awdiv,w
  2453  01CA  00FF               	movwf	btemp+1
  2454  01CB  087F               	movf	btemp+1,w
  2455  01CC  00B8               	movwf	_POT1_C
  2456  01CD                     l2177:
  2457                           
  2458                           ;main.c: 220: POT1_D = (((temp2*100)/51)-(POT1_C*100))/10;
  2459  01CD  3033               	movlw	51
  2460  01CE  00A2               	movwf	___awdiv@divisor
  2461  01CF  3000               	movlw	0
  2462  01D0  00A3               	movwf	___awdiv@divisor+1
  2463  01D1  0842               	movf	_temp2,w
  2464  01D2  00AA               	movwf	??_map_pot1
  2465  01D3  01AB               	clrf	??_map_pot1+1
  2466  01D4  082A               	movf	??_map_pot1,w
  2467  01D5  00F3               	movwf	___wmul@multiplier
  2468  01D6  082B               	movf	??_map_pot1+1,w
  2469  01D7  00F4               	movwf	___wmul@multiplier+1
  2470  01D8  3064               	movlw	100
  2471  01D9  00F5               	movwf	___wmul@multiplicand
  2472  01DA  3000               	movlw	0
  2473  01DB  00F6               	movwf	___wmul@multiplicand+1
  2474  01DC  120A  118A  25F9  120A  118A  	fcall	___wmul
  2475  01E1  0874               	movf	?___wmul+1,w
  2476  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2477  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2478  01E4  00A5               	movwf	___awdiv@dividend+1
  2479  01E5  0873               	movf	?___wmul,w
  2480  01E6  00A4               	movwf	___awdiv@dividend
  2481  01E7  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2482  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2483  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2484  01EE  0822               	movf	?___awdiv,w
  2485  01EF  00AC               	movwf	??_map_pot1+2
  2486  01F0  0823               	movf	?___awdiv+1,w
  2487  01F1  00AD               	movwf	??_map_pot1+3
  2488  01F2  0838               	movf	_POT1_C,w
  2489  01F3  00AE               	movwf	??_map_pot1+4
  2490  01F4  01AF               	clrf	??_map_pot1+5
  2491  01F5  082E               	movf	??_map_pot1+4,w
  2492  01F6  00F3               	movwf	___wmul@multiplier
  2493  01F7  082F               	movf	??_map_pot1+5,w
  2494  01F8  00F4               	movwf	___wmul@multiplier+1
  2495  01F9  309C               	movlw	156
  2496  01FA  00F5               	movwf	___wmul@multiplicand
  2497  01FB  30FF               	movlw	255
  2498  01FC  00F6               	movwf	___wmul@multiplicand+1
  2499  01FD  120A  118A  25F9  120A  118A  	fcall	___wmul
  2500  0202  0873               	movf	?___wmul,w
  2501  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0205  072C               	addwf	??_map_pot1+2,w
  2504  0206  00B0               	movwf	_map_pot1$1355
  2505  0207  0874               	movf	?___wmul+1,w
  2506  0208  1803               	skipnc
  2507  0209  0A74               	incf	?___wmul+1,w
  2508  020A  072D               	addwf	??_map_pot1+3,w
  2509  020B  00B1               	movwf	_map_pot1$1355+1
  2510  020C                     l2179:
  2511                           
  2512                           ;main.c: 220: POT1_D = (((temp2*100)/51)-(POT1_C*100))/10;
  2513  020C  300A               	movlw	10
  2514  020D  00A2               	movwf	___awdiv@divisor
  2515  020E  3000               	movlw	0
  2516  020F  00A3               	movwf	___awdiv@divisor+1
  2517  0210  0831               	movf	_map_pot1$1355+1,w
  2518  0211  00A5               	movwf	___awdiv@dividend+1
  2519  0212  0830               	movf	_map_pot1$1355,w
  2520  0213  00A4               	movwf	___awdiv@dividend
  2521  0214  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2522  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2523  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2524  021B  0822               	movf	?___awdiv,w
  2525  021C  00FF               	movwf	btemp+1
  2526  021D  087F               	movf	btemp+1,w
  2527  021E  00B9               	movwf	_POT1_D
  2528  021F                     l2181:
  2529                           
  2530                           ;main.c: 221: POT1_U = (((temp2*100)/51)-(POT1_C*100)-(POT1_D*10));
  2531  021F  3033               	movlw	51
  2532  0220  00A2               	movwf	___awdiv@divisor
  2533  0221  3000               	movlw	0
  2534  0222  00A3               	movwf	___awdiv@divisor+1
  2535  0223  0842               	movf	_temp2,w
  2536  0224  00AA               	movwf	??_map_pot1
  2537  0225  01AB               	clrf	??_map_pot1+1
  2538  0226  082A               	movf	??_map_pot1,w
  2539  0227  00F3               	movwf	___wmul@multiplier
  2540  0228  082B               	movf	??_map_pot1+1,w
  2541  0229  00F4               	movwf	___wmul@multiplier+1
  2542  022A  3064               	movlw	100
  2543  022B  00F5               	movwf	___wmul@multiplicand
  2544  022C  3000               	movlw	0
  2545  022D  00F6               	movwf	___wmul@multiplicand+1
  2546  022E  120A  118A  25F9  120A  118A  	fcall	___wmul
  2547  0233  0874               	movf	?___wmul+1,w
  2548  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0236  00A5               	movwf	___awdiv@dividend+1
  2551  0237  0873               	movf	?___wmul,w
  2552  0238  00A4               	movwf	___awdiv@dividend
  2553  0239  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2554  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2555  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0240  0822               	movf	?___awdiv,w
  2557  0241  00AC               	movwf	??_map_pot1+2
  2558  0242  0823               	movf	?___awdiv+1,w
  2559  0243  00AD               	movwf	??_map_pot1+3
  2560  0244  309C               	movlw	156
  2561  0245  00FF               	movwf	btemp+1
  2562  0246  087F               	movf	btemp+1,w
  2563  0247  00F3               	movwf	___bmul@multiplicand
  2564  0248  0838               	movf	_POT1_C,w
  2565  0249  120A  118A  2792  120A  118A  	fcall	___bmul
  2566  024E  1283               	bcf	3,5	;RP0=0, select bank0
  2567  024F  1303               	bcf	3,6	;RP1=0, select bank0
  2568  0250  00AE               	movwf	??_map_pot1+4
  2569  0251  30F6               	movlw	246
  2570  0252  00FF               	movwf	btemp+1
  2571  0253  087F               	movf	btemp+1,w
  2572  0254  00F3               	movwf	___bmul@multiplicand
  2573  0255  0839               	movf	_POT1_D,w
  2574  0256  120A  118A  2792  120A  118A  	fcall	___bmul
  2575  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2576  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2577  025D  072E               	addwf	??_map_pot1+4,w
  2578  025E  072C               	addwf	??_map_pot1+2,w
  2579  025F  00FF               	movwf	btemp+1
  2580  0260  087F               	movf	btemp+1,w
  2581  0261  00BA               	movwf	_POT1_U
  2582  0262                     l2183:
  2583                           
  2584                           ;main.c: 222: POT1_C = num_ascii(POT1_C);
  2585  0262  0838               	movf	_POT1_C,w
  2586  0263  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2587  0268  00FF               	movwf	btemp+1
  2588  0269  087F               	movf	btemp+1,w
  2589  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2590  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2591  026C  00B8               	movwf	_POT1_C
  2592  026D                     l2185:
  2593                           
  2594                           ;main.c: 223: POT1_D = num_ascii(POT1_D);
  2595  026D  0839               	movf	_POT1_D,w
  2596  026E  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2597  0273  00FF               	movwf	btemp+1
  2598  0274  087F               	movf	btemp+1,w
  2599  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0277  00B9               	movwf	_POT1_D
  2602  0278                     l2187:
  2603                           
  2604                           ;main.c: 224: POT1_U = num_ascii(POT1_U);
  2605  0278  083A               	movf	_POT1_U,w
  2606  0279  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2607  027E  00FF               	movwf	btemp+1
  2608  027F  087F               	movf	btemp+1,w
  2609  0280  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0281  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0282  00BA               	movwf	_POT1_U
  2612  0283                     l141:
  2613  0283  0008               	return
  2614  0284                     __end_of_map_pot1:
  2615                           
  2616                           	psect	text11
  2617  0325                     __ptext11:	
  2618 ;; *************** function _map_cont *****************
  2619 ;; Defined at:
  2620 ;;		line 257 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2634 ;;      Params:         0       0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0
  2636 ;;      Temps:          0       2       0       0       0
  2637 ;;      Totals:         0       2       0       0       0
  2638 ;;Total ram usage:        2 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    3
  2641 ;; This function calls:
  2642 ;;		___awdiv
  2643 ;;		___bmul
  2644 ;;		___wmul
  2645 ;;		_num_ascii
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           
  2652                           ;psect for function _map_cont
  2653  0325                     _map_cont:
  2654  0325                     l2189:	
  2655                           ;incstack = 0
  2656                           ; Regs used in _map_cont: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2657                           
  2658                           
  2659                           ;main.c: 258: CONT_C = CONT/100;
  2660  0325  3064               	movlw	100
  2661  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2662  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2663  0328  00A2               	movwf	___awdiv@divisor
  2664  0329  3000               	movlw	0
  2665  032A  00A3               	movwf	___awdiv@divisor+1
  2666  032B  0843               	movf	_CONT,w
  2667  032C  00AA               	movwf	??_map_cont
  2668  032D  01AB               	clrf	??_map_cont+1
  2669  032E  082A               	movf	??_map_cont,w
  2670  032F  00A4               	movwf	___awdiv@dividend
  2671  0330  082B               	movf	??_map_cont+1,w
  2672  0331  00A5               	movwf	___awdiv@dividend+1
  2673  0332  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2674  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0339  0822               	movf	?___awdiv,w
  2677  033A  00FF               	movwf	btemp+1
  2678  033B  087F               	movf	btemp+1,w
  2679  033C  00BB               	movwf	_CONT_C
  2680                           
  2681                           ;main.c: 259: CONT_D = (CONT-(CONT_C*100))/10;
  2682  033D  300A               	movlw	10
  2683  033E  00A2               	movwf	___awdiv@divisor
  2684  033F  3000               	movlw	0
  2685  0340  00A3               	movwf	___awdiv@divisor+1
  2686  0341  083B               	movf	_CONT_C,w
  2687  0342  00AA               	movwf	??_map_cont
  2688  0343  01AB               	clrf	??_map_cont+1
  2689  0344  082A               	movf	??_map_cont,w
  2690  0345  00F3               	movwf	___wmul@multiplier
  2691  0346  082B               	movf	??_map_cont+1,w
  2692  0347  00F4               	movwf	___wmul@multiplier+1
  2693  0348  309C               	movlw	156
  2694  0349  00F5               	movwf	___wmul@multiplicand
  2695  034A  30FF               	movlw	255
  2696  034B  00F6               	movwf	___wmul@multiplicand+1
  2697  034C  120A  118A  25F9  120A  118A  	fcall	___wmul
  2698  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0353  0843               	movf	_CONT,w
  2701  0354  0773               	addwf	?___wmul,w
  2702  0355  00A4               	movwf	___awdiv@dividend
  2703  0356  0874               	movf	?___wmul+1,w
  2704  0357  1803               	skipnc
  2705  0358  0A74               	incf	?___wmul+1,w
  2706  0359  00A5               	movwf	___awdiv@dividend+1
  2707  035A  120A  118A  23A5  120A  118A  	fcall	___awdiv
  2708  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0361  0822               	movf	?___awdiv,w
  2711  0362  00FF               	movwf	btemp+1
  2712  0363  087F               	movf	btemp+1,w
  2713  0364  00BC               	movwf	_CONT_D
  2714                           
  2715                           ;main.c: 260: CONT_U = (CONT-(CONT_C*100)-(CONT_D*10));
  2716  0365  309C               	movlw	156
  2717  0366  00FF               	movwf	btemp+1
  2718  0367  087F               	movf	btemp+1,w
  2719  0368  00F3               	movwf	___bmul@multiplicand
  2720  0369  083B               	movf	_CONT_C,w
  2721  036A  120A  118A  2792  120A  118A  	fcall	___bmul
  2722  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0371  00AA               	movwf	??_map_cont
  2725  0372  30F6               	movlw	246
  2726  0373  00FF               	movwf	btemp+1
  2727  0374  087F               	movf	btemp+1,w
  2728  0375  00F3               	movwf	___bmul@multiplicand
  2729  0376  083C               	movf	_CONT_D,w
  2730  0377  120A  118A  2792  120A  118A  	fcall	___bmul
  2731  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2732  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2733  037E  072A               	addwf	??_map_cont,w
  2734  037F  0743               	addwf	_CONT,w
  2735  0380  00FF               	movwf	btemp+1
  2736  0381  087F               	movf	btemp+1,w
  2737  0382  00BD               	movwf	_CONT_U
  2738  0383                     l2191:
  2739                           
  2740                           ;main.c: 261: CONT_C = num_ascii(CONT_C);
  2741  0383  083B               	movf	_CONT_C,w
  2742  0384  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2743  0389  00FF               	movwf	btemp+1
  2744  038A  087F               	movf	btemp+1,w
  2745  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2746  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2747  038D  00BB               	movwf	_CONT_C
  2748  038E                     l2193:
  2749                           
  2750                           ;main.c: 262: CONT_D = num_ascii(CONT_D);
  2751  038E  083C               	movf	_CONT_D,w
  2752  038F  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2753  0394  00FF               	movwf	btemp+1
  2754  0395  087F               	movf	btemp+1,w
  2755  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2757  0398  00BC               	movwf	_CONT_D
  2758  0399                     l2195:
  2759                           
  2760                           ;main.c: 263: CONT_U = num_ascii(CONT_U);
  2761  0399  083D               	movf	_CONT_U,w
  2762  039A  120A  118A  2562  120A  118A  	fcall	_num_ascii
  2763  039F  00FF               	movwf	btemp+1
  2764  03A0  087F               	movf	btemp+1,w
  2765  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2766  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2767  03A3  00BD               	movwf	_CONT_U
  2768  03A4                     l149:
  2769  03A4  0008               	return
  2770  03A5                     __end_of_map_cont:
  2771                           
  2772                           	psect	text12
  2773  0562                     __ptext12:	
  2774 ;; *************** function _num_ascii *****************
  2775 ;; Defined at:
  2776 ;;		line 3 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/ASCII_NUM.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  num             1    wreg     unsigned char 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  num             1    3[COMMON] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      unsigned char 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2790 ;;      Params:         0       0       0       0       0
  2791 ;;      Locals:         1       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0
  2793 ;;      Totals:         1       0       0       0       0
  2794 ;;Total ram usage:        1 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    2
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_map_pot1
  2801 ;;		_map_pot2
  2802 ;;		_map_cont
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           
  2807                           ;psect for function _num_ascii
  2808  0562                     _num_ascii:
  2809                           
  2810                           ;incstack = 0
  2811                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  2812                           ;num_ascii@num stored from wreg
  2813  0562  00F3               	movwf	num_ascii@num
  2814  0563                     l1957:
  2815                           
  2816                           ;ASCII_NUM.c: 4: switch(num){
  2817  0563  2D78               	goto	l2027
  2818  0564                     l1959:
  2819                           
  2820                           ;ASCII_NUM.c: 6: return 0x30;
  2821  0564  3030               	movlw	48
  2822  0565  2D98               	goto	l211
  2823  0566                     l1971:
  2824                           
  2825                           ;ASCII_NUM.c: 14: return 0x31;
  2826  0566  3031               	movlw	49
  2827  0567  2D98               	goto	l211
  2828  0568                     l1977:
  2829                           
  2830                           ;ASCII_NUM.c: 18: return 0x32;
  2831  0568  3032               	movlw	50
  2832  0569  2D98               	goto	l211
  2833  056A                     l1983:
  2834                           
  2835                           ;ASCII_NUM.c: 22: return 0x33;
  2836  056A  3033               	movlw	51
  2837  056B  2D98               	goto	l211
  2838  056C                     l1989:
  2839                           
  2840                           ;ASCII_NUM.c: 26: return 0x34;
  2841  056C  3034               	movlw	52
  2842  056D  2D98               	goto	l211
  2843  056E                     l1995:
  2844                           
  2845                           ;ASCII_NUM.c: 30: return 0x35;
  2846  056E  3035               	movlw	53
  2847  056F  2D98               	goto	l211
  2848  0570                     l2001:
  2849                           
  2850                           ;ASCII_NUM.c: 34: return 0x36;
  2851  0570  3036               	movlw	54
  2852  0571  2D98               	goto	l211
  2853  0572                     l2007:
  2854                           
  2855                           ;ASCII_NUM.c: 38: return 0x37;
  2856  0572  3037               	movlw	55
  2857  0573  2D98               	goto	l211
  2858  0574                     l2013:
  2859                           
  2860                           ;ASCII_NUM.c: 42: return 0x38;
  2861  0574  3038               	movlw	56
  2862  0575  2D98               	goto	l211
  2863  0576                     l2019:
  2864                           
  2865                           ;ASCII_NUM.c: 46: return 0x39;
  2866  0576  3039               	movlw	57
  2867  0577  2D98               	goto	l211
  2868  0578                     l2027:
  2869  0578  0873               	movf	num_ascii@num,w
  2870                           
  2871                           ; Switch size 1, requested type "simple"
  2872                           ; Number of cases is 10, Range of values is 0 to 9
  2873                           ; switch strategies available:
  2874                           ; Name         Instructions Cycles
  2875                           ; simple_byte           31    16 (average)
  2876                           ; direct_byte           38     8 (fixed)
  2877                           ; jumptable            260     6 (fixed)
  2878                           ;	Chosen strategy is simple_byte
  2879  0579  3A00               	xorlw	0	; case 0
  2880  057A  1903               	skipnz
  2881  057B  2D64               	goto	l1959
  2882  057C  3A01               	xorlw	1	; case 1
  2883  057D  1903               	skipnz
  2884  057E  2D66               	goto	l1971
  2885  057F  3A03               	xorlw	3	; case 2
  2886  0580  1903               	skipnz
  2887  0581  2D68               	goto	l1977
  2888  0582  3A01               	xorlw	1	; case 3
  2889  0583  1903               	skipnz
  2890  0584  2D6A               	goto	l1983
  2891  0585  3A07               	xorlw	7	; case 4
  2892  0586  1903               	skipnz
  2893  0587  2D6C               	goto	l1989
  2894  0588  3A01               	xorlw	1	; case 5
  2895  0589  1903               	skipnz
  2896  058A  2D6E               	goto	l1995
  2897  058B  3A03               	xorlw	3	; case 6
  2898  058C  1903               	skipnz
  2899  058D  2D70               	goto	l2001
  2900  058E  3A01               	xorlw	1	; case 7
  2901  058F  1903               	skipnz
  2902  0590  2D72               	goto	l2007
  2903  0591  3A0F               	xorlw	15	; case 8
  2904  0592  1903               	skipnz
  2905  0593  2D74               	goto	l2013
  2906  0594  3A01               	xorlw	1	; case 9
  2907  0595  1903               	skipnz
  2908  0596  2D76               	goto	l2019
  2909  0597  2D64               	goto	l1959
  2910  0598                     l211:
  2911  0598  0008               	return
  2912  0599                     __end_of_num_ascii:
  2913                           
  2914                           	psect	text13
  2915  05F9                     __ptext13:	
  2916 ;; *************** function ___wmul *****************
  2917 ;; Defined at:
  2918 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  multiplier      2    3[COMMON] unsigned int 
  2921 ;;  multiplicand    2    5[COMMON] unsigned int 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  product         2    0[BANK0 ] unsigned int 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  2    3[COMMON] unsigned int 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         4       0       0       0       0
  2934 ;;      Locals:         0       2       0       0       0
  2935 ;;      Temps:          0       0       0       0       0
  2936 ;;      Totals:         4       2       0       0       0
  2937 ;;Total ram usage:        6 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    2
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_map_pot1
  2944 ;;		_map_pot2
  2945 ;;		_map_cont
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function ___wmul
  2951  05F9                     ___wmul:
  2952  05F9                     l2051:	
  2953                           ;incstack = 0
  2954                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2955                           
  2956  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  2957  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  2958  05FB  01A0               	clrf	___wmul@product
  2959  05FC  01A1               	clrf	___wmul@product+1
  2960  05FD                     l2053:
  2961  05FD  1C73               	btfss	___wmul@multiplier,0
  2962  05FE  2E00               	goto	u931
  2963  05FF  2E01               	goto	u930
  2964  0600                     u931:
  2965  0600  2E09               	goto	l407
  2966  0601                     u930:
  2967  0601                     l2055:
  2968  0601  0875               	movf	___wmul@multiplicand,w
  2969  0602  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0603  1303               	bcf	3,6	;RP1=0, select bank0
  2971  0604  07A0               	addwf	___wmul@product,f
  2972  0605  1803               	skipnc
  2973  0606  0AA1               	incf	___wmul@product+1,f
  2974  0607  0876               	movf	___wmul@multiplicand+1,w
  2975  0608  07A1               	addwf	___wmul@product+1,f
  2976  0609                     l407:
  2977  0609  3001               	movlw	1
  2978  060A                     u945:
  2979  060A  1003               	clrc
  2980  060B  0DF5               	rlf	___wmul@multiplicand,f
  2981  060C  0DF6               	rlf	___wmul@multiplicand+1,f
  2982  060D  3EFF               	addlw	-1
  2983  060E  1D03               	skipz
  2984  060F  2E0A               	goto	u945
  2985  0610                     l2057:
  2986  0610  3001               	movlw	1
  2987  0611                     u955:
  2988  0611  1003               	clrc
  2989  0612  0CF4               	rrf	___wmul@multiplier+1,f
  2990  0613  0CF3               	rrf	___wmul@multiplier,f
  2991  0614  3EFF               	addlw	-1
  2992  0615  1D03               	skipz
  2993  0616  2E11               	goto	u955
  2994  0617                     l2059:
  2995  0617  0873               	movf	___wmul@multiplier,w
  2996  0618  0474               	iorwf	___wmul@multiplier+1,w
  2997  0619  1D03               	btfss	3,2
  2998  061A  2E1C               	goto	u961
  2999  061B  2E1D               	goto	u960
  3000  061C                     u961:
  3001  061C  2DFD               	goto	l2053
  3002  061D                     u960:
  3003  061D                     l2061:
  3004  061D  1283               	bcf	3,5	;RP0=0, select bank0
  3005  061E  1303               	bcf	3,6	;RP1=0, select bank0
  3006  061F  0821               	movf	___wmul@product+1,w
  3007  0620  00F4               	movwf	?___wmul+1
  3008  0621  0820               	movf	___wmul@product,w
  3009  0622  00F3               	movwf	?___wmul
  3010  0623                     l409:
  3011  0623  0008               	return
  3012  0624                     __end_of___wmul:
  3013                           
  3014                           	psect	text14
  3015  0792                     __ptext14:	
  3016 ;; *************** function ___bmul *****************
  3017 ;; Defined at:
  3018 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  multiplier      1    wreg     unsigned char 
  3021 ;;  multiplicand    1    3[COMMON] unsigned char 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  multiplier      1    5[COMMON] unsigned char 
  3024 ;;  product         1    4[COMMON] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  1    wreg      unsigned char 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0, btemp+1
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3034 ;;      Params:         1       0       0       0       0
  3035 ;;      Locals:         2       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0
  3037 ;;      Totals:         3       0       0       0       0
  3038 ;;Total ram usage:        3 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    2
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		_map_pot1
  3045 ;;		_map_pot2
  3046 ;;		_map_cont
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function ___bmul
  3052  0792                     ___bmul:
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  3056                           ;___bmul@multiplier stored from wreg
  3057  0792  00F5               	movwf	___bmul@multiplier
  3058  0793                     l2065:
  3059  0793  01F4               	clrf	___bmul@product
  3060  0794                     l2067:
  3061  0794  1C75               	btfss	___bmul@multiplier,0
  3062  0795  2F97               	goto	u971
  3063  0796  2F98               	goto	u970
  3064  0797                     u971:
  3065  0797  2F9C               	goto	l2071
  3066  0798                     u970:
  3067  0798                     l2069:
  3068  0798  0873               	movf	___bmul@multiplicand,w
  3069  0799  00FF               	movwf	btemp+1
  3070  079A  087F               	movf	btemp+1,w
  3071  079B  07F4               	addwf	___bmul@product,f
  3072  079C                     l2071:
  3073  079C  1003               	clrc
  3074  079D  0DF3               	rlf	___bmul@multiplicand,f
  3075  079E                     l2073:
  3076  079E  1003               	clrc
  3077  079F  0CF5               	rrf	___bmul@multiplier,f
  3078  07A0                     l2075:
  3079  07A0  0875               	movf	___bmul@multiplier,w
  3080  07A1  1D03               	btfss	3,2
  3081  07A2  2FA4               	goto	u981
  3082  07A3  2FA5               	goto	u980
  3083  07A4                     u981:
  3084  07A4  2F94               	goto	l2067
  3085  07A5                     u980:
  3086  07A5                     l2077:
  3087  07A5  0874               	movf	___bmul@product,w
  3088  07A6                     l433:
  3089  07A6  0008               	return
  3090  07A7                     __end_of___bmul:
  3091                           
  3092                           	psect	text15
  3093  03A5                     __ptext15:	
  3094 ;; *************** function ___awdiv *****************
  3095 ;; Defined at:
  3096 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  divisor         2    2[BANK0 ] int 
  3099 ;;  dividend        2    4[BANK0 ] int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  quotient        2    8[BANK0 ] int 
  3102 ;;  sign            1    7[BANK0 ] unsigned char 
  3103 ;;  counter         1    6[BANK0 ] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  2    2[BANK0 ] int 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, btemp+1
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3113 ;;      Params:         0       4       0       0       0
  3114 ;;      Locals:         0       4       0       0       0
  3115 ;;      Temps:          0       0       0       0       0
  3116 ;;      Totals:         0       8       0       0       0
  3117 ;;Total ram usage:        8 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    2
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_map_pot1
  3124 ;;		_map_pot2
  3125 ;;		_map_cont
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function ___awdiv
  3131  03A5                     ___awdiv:
  3132  03A5                     l2081:	
  3133                           ;incstack = 0
  3134                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3135                           
  3136  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  3137  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  3138  03A7  01A7               	clrf	___awdiv@sign
  3139  03A8                     l2083:
  3140  03A8  1FA3               	btfss	___awdiv@divisor+1,7
  3141  03A9  2BAB               	goto	u991
  3142  03AA  2BAC               	goto	u990
  3143  03AB                     u991:
  3144  03AB  2BB3               	goto	l2089
  3145  03AC                     u990:
  3146  03AC                     l2085:
  3147  03AC  09A2               	comf	___awdiv@divisor,f
  3148  03AD  09A3               	comf	___awdiv@divisor+1,f
  3149  03AE  0AA2               	incf	___awdiv@divisor,f
  3150  03AF  1903               	skipnz
  3151  03B0  0AA3               	incf	___awdiv@divisor+1,f
  3152  03B1                     l2087:
  3153  03B1  01A7               	clrf	___awdiv@sign
  3154  03B2  0AA7               	incf	___awdiv@sign,f
  3155  03B3                     l2089:
  3156  03B3  1FA5               	btfss	___awdiv@dividend+1,7
  3157  03B4  2BB6               	goto	u1001
  3158  03B5  2BB7               	goto	u1000
  3159  03B6                     u1001:
  3160  03B6  2BC0               	goto	l2095
  3161  03B7                     u1000:
  3162  03B7                     l2091:
  3163  03B7  09A4               	comf	___awdiv@dividend,f
  3164  03B8  09A5               	comf	___awdiv@dividend+1,f
  3165  03B9  0AA4               	incf	___awdiv@dividend,f
  3166  03BA  1903               	skipnz
  3167  03BB  0AA5               	incf	___awdiv@dividend+1,f
  3168  03BC                     l2093:
  3169  03BC  3001               	movlw	1
  3170  03BD  00FF               	movwf	btemp+1
  3171  03BE  087F               	movf	btemp+1,w
  3172  03BF  06A7               	xorwf	___awdiv@sign,f
  3173  03C0                     l2095:
  3174  03C0  01A8               	clrf	___awdiv@quotient
  3175  03C1  01A9               	clrf	___awdiv@quotient+1
  3176  03C2                     l2097:
  3177  03C2  0822               	movf	___awdiv@divisor,w
  3178  03C3  0423               	iorwf	___awdiv@divisor+1,w
  3179  03C4  1903               	btfsc	3,2
  3180  03C5  2BC7               	goto	u1011
  3181  03C6  2BC8               	goto	u1010
  3182  03C7                     u1011:
  3183  03C7  2BFF               	goto	l2117
  3184  03C8                     u1010:
  3185  03C8                     l2099:
  3186  03C8  01A6               	clrf	___awdiv@counter
  3187  03C9  0AA6               	incf	___awdiv@counter,f
  3188  03CA  2BD6               	goto	l2105
  3189  03CB                     l2101:
  3190  03CB  3001               	movlw	1
  3191  03CC                     u1025:
  3192  03CC  1003               	clrc
  3193  03CD  0DA2               	rlf	___awdiv@divisor,f
  3194  03CE  0DA3               	rlf	___awdiv@divisor+1,f
  3195  03CF  3EFF               	addlw	-1
  3196  03D0  1D03               	skipz
  3197  03D1  2BCC               	goto	u1025
  3198  03D2                     l2103:
  3199  03D2  3001               	movlw	1
  3200  03D3  00FF               	movwf	btemp+1
  3201  03D4  087F               	movf	btemp+1,w
  3202  03D5  07A6               	addwf	___awdiv@counter,f
  3203  03D6                     l2105:
  3204  03D6  1FA3               	btfss	___awdiv@divisor+1,7
  3205  03D7  2BD9               	goto	u1031
  3206  03D8  2BDA               	goto	u1030
  3207  03D9                     u1031:
  3208  03D9  2BCB               	goto	l2101
  3209  03DA                     u1030:
  3210  03DA                     l2107:
  3211  03DA  3001               	movlw	1
  3212  03DB                     u1045:
  3213  03DB  1003               	clrc
  3214  03DC  0DA8               	rlf	___awdiv@quotient,f
  3215  03DD  0DA9               	rlf	___awdiv@quotient+1,f
  3216  03DE  3EFF               	addlw	-1
  3217  03DF  1D03               	skipz
  3218  03E0  2BDB               	goto	u1045
  3219  03E1  0823               	movf	___awdiv@divisor+1,w
  3220  03E2  0225               	subwf	___awdiv@dividend+1,w
  3221  03E3  1D03               	skipz
  3222  03E4  2BE7               	goto	u1055
  3223  03E5  0822               	movf	___awdiv@divisor,w
  3224  03E6  0224               	subwf	___awdiv@dividend,w
  3225  03E7                     u1055:
  3226  03E7  1C03               	skipc
  3227  03E8  2BEA               	goto	u1051
  3228  03E9  2BEB               	goto	u1050
  3229  03EA                     u1051:
  3230  03EA  2BF2               	goto	l2113
  3231  03EB                     u1050:
  3232  03EB                     l2109:
  3233  03EB  0822               	movf	___awdiv@divisor,w
  3234  03EC  02A4               	subwf	___awdiv@dividend,f
  3235  03ED  0823               	movf	___awdiv@divisor+1,w
  3236  03EE  1C03               	skipc
  3237  03EF  03A5               	decf	___awdiv@dividend+1,f
  3238  03F0  02A5               	subwf	___awdiv@dividend+1,f
  3239  03F1                     l2111:
  3240  03F1  1428               	bsf	___awdiv@quotient,0
  3241  03F2                     l2113:
  3242  03F2  3001               	movlw	1
  3243  03F3                     u1065:
  3244  03F3  1003               	clrc
  3245  03F4  0CA3               	rrf	___awdiv@divisor+1,f
  3246  03F5  0CA2               	rrf	___awdiv@divisor,f
  3247  03F6  3EFF               	addlw	-1
  3248  03F7  1D03               	skipz
  3249  03F8  2BF3               	goto	u1065
  3250  03F9                     l2115:
  3251  03F9  3001               	movlw	1
  3252  03FA  02A6               	subwf	___awdiv@counter,f
  3253  03FB  1D03               	btfss	3,2
  3254  03FC  2BFE               	goto	u1071
  3255  03FD  2BFF               	goto	u1070
  3256  03FE                     u1071:
  3257  03FE  2BDA               	goto	l2107
  3258  03FF                     u1070:
  3259  03FF                     l2117:
  3260  03FF  0827               	movf	___awdiv@sign,w
  3261  0400  1903               	btfsc	3,2
  3262  0401  2C03               	goto	u1081
  3263  0402  2C04               	goto	u1080
  3264  0403                     u1081:
  3265  0403  2C09               	goto	l2121
  3266  0404                     u1080:
  3267  0404                     l2119:
  3268  0404  09A8               	comf	___awdiv@quotient,f
  3269  0405  09A9               	comf	___awdiv@quotient+1,f
  3270  0406  0AA8               	incf	___awdiv@quotient,f
  3271  0407  1903               	skipnz
  3272  0408  0AA9               	incf	___awdiv@quotient+1,f
  3273  0409                     l2121:
  3274  0409  0829               	movf	___awdiv@quotient+1,w
  3275  040A  00A3               	movwf	?___awdiv+1
  3276  040B  0828               	movf	___awdiv@quotient,w
  3277  040C  00A2               	movwf	?___awdiv
  3278  040D                     l560:
  3279  040D  0008               	return
  3280  040E                     __end_of___awdiv:
  3281                           
  3282                           	psect	text16
  3283  06C9                     __ptext16:	
  3284 ;; *************** function _initOsc *****************
  3285 ;; Defined at:
  3286 ;;		line 7 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/Osc.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  frec            1    wreg     unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  frec            1    3[COMMON] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3300 ;;      Params:         0       0       0       0       0
  3301 ;;      Locals:         1       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0
  3303 ;;      Totals:         1       0       0       0       0
  3304 ;;Total ram usage:        1 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    2
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_main
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function _initOsc
  3316  06C9                     _initOsc:
  3317                           
  3318                           ;incstack = 0
  3319                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  3320                           ;initOsc@frec stored from wreg
  3321  06C9  00F3               	movwf	initOsc@frec
  3322  06CA                     l1725:
  3323                           
  3324                           ;Osc.c: 8: switch(frec){
  3325  06CA  2EE3               	goto	l1729
  3326  06CB                     l269:	
  3327                           ;Osc.c: 9: case 0:
  3328                           
  3329                           
  3330                           ;Osc.c: 10: OSCCONbits.IRCF0 = 0;
  3331  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  3332  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  3333  06CD  120F               	bcf	15,4	;volatile
  3334                           
  3335                           ;Osc.c: 11: OSCCONbits.IRCF1 = 0;
  3336  06CE  128F               	bcf	15,5	;volatile
  3337                           
  3338                           ;Osc.c: 12: OSCCONbits.IRCF2 = 0;
  3339  06CF  130F               	bcf	15,6	;volatile
  3340                           
  3341                           ;Osc.c: 13: break;
  3342  06D0  2EEE               	goto	l270
  3343  06D1                     l271:	
  3344                           ;Osc.c: 14: case 1:
  3345                           
  3346                           
  3347                           ;Osc.c: 15: OSCCONbits.IRCF0 = 1;
  3348  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  3349  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  3350  06D3  160F               	bsf	15,4	;volatile
  3351                           
  3352                           ;Osc.c: 16: OSCCONbits.IRCF1 = 0;
  3353  06D4  128F               	bcf	15,5	;volatile
  3354                           
  3355                           ;Osc.c: 17: OSCCONbits.IRCF2 = 0;
  3356  06D5  130F               	bcf	15,6	;volatile
  3357                           
  3358                           ;Osc.c: 18: break;
  3359  06D6  2EEE               	goto	l270
  3360  06D7                     l272:	
  3361                           ;Osc.c: 26: case 7:
  3362                           
  3363                           
  3364                           ;Osc.c: 27: OSCCONbits.IRCF0 = 1;
  3365  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  3366  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  3367  06D9  160F               	bsf	15,4	;volatile
  3368                           
  3369                           ;Osc.c: 28: OSCCONbits.IRCF1 = 1;
  3370  06DA  168F               	bsf	15,5	;volatile
  3371                           
  3372                           ;Osc.c: 29: OSCCONbits.IRCF2 = 1;
  3373  06DB  170F               	bsf	15,6	;volatile
  3374                           
  3375                           ;Osc.c: 30: break;
  3376  06DC  2EEE               	goto	l270
  3377  06DD                     l273:	
  3378                           ;Osc.c: 31: default:
  3379                           
  3380                           
  3381                           ;Osc.c: 32: OSCCONbits.IRCF0 = 0;
  3382  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  3383  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  3384  06DF  120F               	bcf	15,4	;volatile
  3385                           
  3386                           ;Osc.c: 33: OSCCONbits.IRCF1 = 1;
  3387  06E0  168F               	bsf	15,5	;volatile
  3388                           
  3389                           ;Osc.c: 34: OSCCONbits.IRCF2 = 1;
  3390  06E1  170F               	bsf	15,6	;volatile
  3391                           
  3392                           ;Osc.c: 35: break;
  3393  06E2  2EEE               	goto	l270
  3394  06E3                     l1729:
  3395  06E3  0873               	movf	initOsc@frec,w
  3396                           
  3397                           ; Switch size 1, requested type "simple"
  3398                           ; Number of cases is 3, Range of values is 0 to 7
  3399                           ; switch strategies available:
  3400                           ; Name         Instructions Cycles
  3401                           ; simple_byte           10     6 (average)
  3402                           ; direct_byte           32     8 (fixed)
  3403                           ; jumptable            260     6 (fixed)
  3404                           ;	Chosen strategy is simple_byte
  3405  06E4  3A00               	xorlw	0	; case 0
  3406  06E5  1903               	skipnz
  3407  06E6  2ECB               	goto	l269
  3408  06E7  3A01               	xorlw	1	; case 1
  3409  06E8  1903               	skipnz
  3410  06E9  2ED1               	goto	l271
  3411  06EA  3A06               	xorlw	6	; case 7
  3412  06EB  1903               	skipnz
  3413  06EC  2ED7               	goto	l272
  3414  06ED  2EDD               	goto	l273
  3415  06EE                     l270:
  3416                           
  3417                           ;Osc.c: 38: OSCCONbits.SCS = 1;
  3418  06EE  140F               	bsf	15,0	;volatile
  3419  06EF                     l274:
  3420  06EF  0008               	return
  3421  06F0                     __end_of_initOsc:
  3422                           
  3423                           	psect	text17
  3424  051E                     __ptext17:	
  3425 ;; *************** function _conver *****************
  3426 ;; Defined at:
  3427 ;;		line 269 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;  temporal       16    0[BANK0 ] unsigned char [16]
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      PTR const unsigned char 
  3434 ;; Registers used:
  3435 ;;		wreg, btemp+1
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3441 ;;      Params:         0       0       0       0       0
  3442 ;;      Locals:         0      16       0       0       0
  3443 ;;      Temps:          0       0       0       0       0
  3444 ;;      Totals:         0      16       0       0       0
  3445 ;;Total ram usage:       16 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    2
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_main
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function _conver
  3457  051E                     _conver:
  3458  051E                     l1827:	
  3459                           ;incstack = 0
  3460                           ; Regs used in _conver: [wreg+btemp+1]
  3461                           
  3462                           
  3463                           ;main.c: 270: char temporal[16];;main.c: 271: temporal[0] = CONT_C;
  3464  051E  1283               	bcf	3,5	;RP0=0, select bank0
  3465  051F  1303               	bcf	3,6	;RP1=0, select bank0
  3466  0520  083B               	movf	_CONT_C,w
  3467  0521  00FF               	movwf	btemp+1
  3468  0522  087F               	movf	btemp+1,w
  3469  0523  00A0               	movwf	conver@temporal
  3470                           
  3471                           ;main.c: 272: temporal[1] = CONT_D;
  3472  0524  083C               	movf	_CONT_D,w
  3473  0525  00FF               	movwf	btemp+1
  3474  0526  087F               	movf	btemp+1,w
  3475  0527  00A1               	movwf	conver@temporal+1
  3476                           
  3477                           ;main.c: 273: temporal[2] = CONT_U;
  3478  0528  083D               	movf	_CONT_U,w
  3479  0529  00FF               	movwf	btemp+1
  3480  052A  087F               	movf	btemp+1,w
  3481  052B  00A2               	movwf	conver@temporal+2
  3482                           
  3483                           ;main.c: 274: temporal[3] = 0x20;
  3484  052C  3020               	movlw	32
  3485  052D  00FF               	movwf	btemp+1
  3486  052E  087F               	movf	btemp+1,w
  3487  052F  00A3               	movwf	conver@temporal+3
  3488                           
  3489                           ;main.c: 275: temporal[4] = 0x20;
  3490  0530  3020               	movlw	32
  3491  0531  00FF               	movwf	btemp+1
  3492  0532  087F               	movf	btemp+1,w
  3493  0533  00A4               	movwf	conver@temporal+4
  3494                           
  3495                           ;main.c: 276: temporal[5] = POT1_C;
  3496  0534  0838               	movf	_POT1_C,w
  3497  0535  00FF               	movwf	btemp+1
  3498  0536  087F               	movf	btemp+1,w
  3499  0537  00A5               	movwf	conver@temporal+5
  3500                           
  3501                           ;main.c: 277: temporal[6] = 0x2E;
  3502  0538  302E               	movlw	46
  3503  0539  00FF               	movwf	btemp+1
  3504  053A  087F               	movf	btemp+1,w
  3505  053B  00A6               	movwf	conver@temporal+6
  3506                           
  3507                           ;main.c: 278: temporal[7] = POT1_D;
  3508  053C  0839               	movf	_POT1_D,w
  3509  053D  00FF               	movwf	btemp+1
  3510  053E  087F               	movf	btemp+1,w
  3511  053F  00A7               	movwf	conver@temporal+7
  3512                           
  3513                           ;main.c: 279: temporal[8] = POT1_U;
  3514  0540  083A               	movf	_POT1_U,w
  3515  0541  00FF               	movwf	btemp+1
  3516  0542  087F               	movf	btemp+1,w
  3517  0543  00A8               	movwf	conver@temporal+8
  3518                           
  3519                           ;main.c: 280: temporal[9] = 0x76;
  3520  0544  3076               	movlw	118
  3521  0545  00FF               	movwf	btemp+1
  3522  0546  087F               	movf	btemp+1,w
  3523  0547  00A9               	movwf	conver@temporal+9
  3524                           
  3525                           ;main.c: 281: temporal[10] = 0x20;
  3526  0548  3020               	movlw	32
  3527  0549  00FF               	movwf	btemp+1
  3528  054A  087F               	movf	btemp+1,w
  3529  054B  00AA               	movwf	conver@temporal+10
  3530                           
  3531                           ;main.c: 282: temporal[11] = SIGN;
  3532  054C  0835               	movf	_SIGN,w
  3533  054D  00FF               	movwf	btemp+1
  3534  054E  087F               	movf	btemp+1,w
  3535  054F  00AB               	movwf	conver@temporal+11
  3536                           
  3537                           ;main.c: 283: temporal[12] = POT2_C;
  3538  0550  087A               	movf	_POT2_C,w
  3539  0551  00FF               	movwf	btemp+1
  3540  0552  087F               	movf	btemp+1,w
  3541  0553  00AC               	movwf	conver@temporal+12
  3542                           
  3543                           ;main.c: 284: temporal[13] = POT2_D;
  3544  0554  0836               	movf	_POT2_D,w
  3545  0555  00FF               	movwf	btemp+1
  3546  0556  087F               	movf	btemp+1,w
  3547  0557  00AD               	movwf	conver@temporal+13
  3548                           
  3549                           ;main.c: 285: temporal[14] = POT2_U;
  3550  0558  0837               	movf	_POT2_U,w
  3551  0559  00FF               	movwf	btemp+1
  3552  055A  087F               	movf	btemp+1,w
  3553  055B  00AE               	movwf	conver@temporal+14
  3554                           
  3555                           ;main.c: 286: temporal[15] = 67;
  3556  055C  3043               	movlw	67
  3557  055D  00FF               	movwf	btemp+1
  3558  055E  087F               	movf	btemp+1,w
  3559  055F  00AF               	movwf	conver@temporal+15
  3560  0560                     l1829:
  3561                           
  3562                           ;main.c: 287: return temporal;
  3563  0560  3020               	movlw	(low (conver@temporal| 0))& (0+255)
  3564  0561                     l152:
  3565  0561  0008               	return
  3566  0562                     __end_of_conver:
  3567                           
  3568                           	psect	text18
  3569  0766                     __ptext18:	
  3570 ;; *************** function _USARTconf *****************
  3571 ;; Defined at:
  3572 ;;		line 3 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/usartP.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3586 ;;      Params:         0       0       0       0       0
  3587 ;;      Locals:         0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0
  3589 ;;      Totals:         0       0       0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    2
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function _USARTconf
  3602  0766                     _USARTconf:
  3603  0766                     l1757:	
  3604                           ;incstack = 0
  3605                           ; Regs used in _USARTconf: [wreg+status,2]
  3606                           
  3607                           
  3608                           ;usartP.c: 5: TXSTAbits.SYNC = 0;
  3609  0766  1683               	bsf	3,5	;RP0=1, select bank1
  3610  0767  1303               	bcf	3,6	;RP1=0, select bank1
  3611  0768  1218               	bcf	24,4	;volatile
  3612                           
  3613                           ;usartP.c: 6: TXSTAbits.BRGH = 1;
  3614  0769  1518               	bsf	24,2	;volatile
  3615                           
  3616                           ;usartP.c: 7: TXSTAbits.TX9 = 0;
  3617  076A  1318               	bcf	24,6	;volatile
  3618                           
  3619                           ;usartP.c: 8: BAUDCTLbits.BRG16 = 0;
  3620  076B  1683               	bsf	3,5	;RP0=1, select bank3
  3621  076C  1703               	bsf	3,6	;RP1=1, select bank3
  3622  076D  1187               	bcf	7,3	;volatile
  3623  076E                     l1759:
  3624                           
  3625                           ;usartP.c: 9: SPBRGH = 0;
  3626  076E  1683               	bsf	3,5	;RP0=1, select bank1
  3627  076F  1303               	bcf	3,6	;RP1=0, select bank1
  3628  0770  019A               	clrf	26	;volatile
  3629  0771                     l1761:
  3630                           
  3631                           ;usartP.c: 10: SPBRG = 25;
  3632  0771  3019               	movlw	25
  3633  0772  0099               	movwf	25	;volatile
  3634  0773                     l1763:
  3635                           
  3636                           ;usartP.c: 12: RCSTAbits.SPEN = 1;
  3637  0773  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0774  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0775  1798               	bsf	24,7	;volatile
  3640  0776                     l1765:
  3641                           
  3642                           ;usartP.c: 13: RCSTAbits.RX9 = 0;
  3643  0776  1318               	bcf	24,6	;volatile
  3644  0777                     l1767:
  3645                           
  3646                           ;usartP.c: 14: RCSTAbits.CREN = 1;
  3647  0777  1618               	bsf	24,4	;volatile
  3648  0778                     l1769:
  3649                           
  3650                           ;usartP.c: 16: TXSTAbits.TXEN = 1;
  3651  0778  1683               	bsf	3,5	;RP0=1, select bank1
  3652  0779  1303               	bcf	3,6	;RP1=0, select bank1
  3653  077A  1698               	bsf	24,5	;volatile
  3654  077B                     l287:
  3655  077B  0008               	return
  3656  077C                     __end_of_USARTconf:
  3657                           
  3658                           	psect	text19
  3659  06F0                     __ptext19:	
  3660 ;; *************** function _Setup *****************
  3661 ;; Defined at:
  3662 ;;		line 141 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    2
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _Setup
  3692  06F0                     _Setup:
  3693  06F0                     l1731:	
  3694                           ;incstack = 0
  3695                           ; Regs used in _Setup: [wreg+status,2]
  3696                           
  3697                           
  3698                           ;main.c: 143: PORTA = 0;
  3699  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  3700  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  3701  06F2  0185               	clrf	5	;volatile
  3702                           
  3703                           ;main.c: 144: PORTB = 0;
  3704  06F3  0186               	clrf	6	;volatile
  3705                           
  3706                           ;main.c: 145: PORTC = 0;
  3707  06F4  0187               	clrf	7	;volatile
  3708                           
  3709                           ;main.c: 146: PORTD = 0;
  3710  06F5  0188               	clrf	8	;volatile
  3711                           
  3712                           ;main.c: 147: ANSEL = 0;
  3713  06F6  1683               	bsf	3,5	;RP0=1, select bank3
  3714  06F7  1703               	bsf	3,6	;RP1=1, select bank3
  3715  06F8  0188               	clrf	8	;volatile
  3716  06F9                     l1733:
  3717                           
  3718                           ;main.c: 148: ANSELbits.ANS0 = 1;
  3719  06F9  1408               	bsf	8,0	;volatile
  3720                           
  3721                           ;main.c: 149: ANSELH = 0;
  3722  06FA  0189               	clrf	9	;volatile
  3723                           
  3724                           ;main.c: 150: TRISA = 0b00000000;
  3725  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3726  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  3727  06FD  0185               	clrf	5	;volatile
  3728                           
  3729                           ;main.c: 151: TRISB = 0b00000000;
  3730  06FE  0186               	clrf	6	;volatile
  3731                           
  3732                           ;main.c: 152: TRISD = 0;
  3733  06FF  0188               	clrf	8	;volatile
  3734  0700                     l1735:
  3735                           
  3736                           ;main.c: 153: TRISC = 0b00010000;
  3737  0700  3010               	movlw	16
  3738  0701  0087               	movwf	7	;volatile
  3739  0702                     l1737:
  3740                           
  3741                           ;main.c: 154: PORTCbits.RC2 = 1;
  3742  0702  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0703  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0704  1507               	bsf	7,2	;volatile
  3745  0705                     l1739:
  3746                           
  3747                           ;main.c: 155: INTCONbits.TMR0IF = 0;
  3748  0705  110B               	bcf	11,2	;volatile
  3749  0706                     l1741:
  3750                           
  3751                           ;main.c: 156: PIR1bits.ADIF = 0;
  3752  0706  130C               	bcf	12,6	;volatile
  3753  0707                     l1743:
  3754                           
  3755                           ;main.c: 157: INTCONbits.RBIF = 0;
  3756  0707  100B               	bcf	11,0	;volatile
  3757  0708                     l1745:
  3758                           
  3759                           ;main.c: 160: OPTION_REG = 0b11010111;
  3760  0708  30D7               	movlw	215
  3761  0709  1683               	bsf	3,5	;RP0=1, select bank1
  3762  070A  1303               	bcf	3,6	;RP1=0, select bank1
  3763  070B  0081               	movwf	1	;volatile
  3764  070C                     l1747:
  3765                           
  3766                           ;main.c: 163: INTCONbits.GIE = 1;
  3767  070C  178B               	bsf	11,7	;volatile
  3768  070D                     l1749:
  3769                           
  3770                           ;main.c: 164: INTCONbits.PEIE = 1;
  3771  070D  170B               	bsf	11,6	;volatile
  3772  070E                     l1751:
  3773                           
  3774                           ;main.c: 165: INTCONbits.T0IE = 1;
  3775  070E  168B               	bsf	11,5	;volatile
  3776  070F                     l1753:
  3777                           
  3778                           ;main.c: 166: TMR0 = 250;
  3779  070F  30FA               	movlw	250
  3780  0710  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0711  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0712  0081               	movwf	1	;volatile
  3783  0713                     l1755:
  3784                           
  3785                           ;main.c: 170: PIE1bits.TXIE = 1;
  3786  0713  1683               	bsf	3,5	;RP0=1, select bank1
  3787  0714  1303               	bcf	3,6	;RP1=0, select bank1
  3788  0715  160C               	bsf	12,4	;volatile
  3789  0716                     l129:
  3790  0716  0008               	return
  3791  0717                     __end_of_Setup:
  3792                           
  3793                           	psect	text20
  3794  04D8                     __ptext20:	
  3795 ;; *************** function _Lcd_Write_String *****************
  3796 ;; Defined at:
  3797 ;;		line 73 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  a               2    6[COMMON] PTR unsigned char 
  3800 ;;		 -> conver@temporal(16), STR_1(15), 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  i               2   19[BANK0 ] int 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3812 ;;      Params:         2       0       0       0       0
  3813 ;;      Locals:         0       2       0       0       0
  3814 ;;      Temps:          0       3       0       0       0
  3815 ;;      Totals:         2       5       0       0       0
  3816 ;;Total ram usage:        7 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    4
  3819 ;; This function calls:
  3820 ;;		_Lcd_Write_Char
  3821 ;; This function is called by:
  3822 ;;		_main
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           
  3827                           ;psect for function _Lcd_Write_String
  3828  04D8                     _Lcd_Write_String:
  3829  04D8                     l2163:	
  3830                           ;incstack = 0
  3831                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3832                           
  3833                           
  3834                           ;LCD8BIT.c: 75: int i;;LCD8BIT.c: 76: for(i=0;a[i]!='\0';i++)
  3835  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3836  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3837  04DA  01B3               	clrf	Lcd_Write_String@i
  3838  04DB  01B4               	clrf	Lcd_Write_String@i+1
  3839  04DC  2D01               	goto	l2169
  3840  04DD                     l2165:
  3841                           
  3842                           ;LCD8BIT.c: 77: Lcd_Write_Char(a[i]);
  3843  04DD  0833               	movf	Lcd_Write_String@i,w
  3844  04DE  0776               	addwf	Lcd_Write_String@a,w
  3845  04DF  00B1               	movwf	??_Lcd_Write_String+1
  3846  04E0  0877               	movf	Lcd_Write_String@a+1,w
  3847  04E1  00B0               	movwf	??_Lcd_Write_String
  3848  04E2  1803               	skipnc
  3849  04E3  0AB0               	incf	??_Lcd_Write_String,f
  3850  04E4  1FB3               	btfss	Lcd_Write_String@i,7
  3851  04E5  2CE7               	goto	u1110
  3852  04E6  03B0               	decf	??_Lcd_Write_String,f
  3853  04E7                     u1110:
  3854  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  3855  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  3856  04E9  0830               	movf	??_Lcd_Write_String,w
  3857  04EA  00B2               	movwf	??_Lcd_Write_String+2
  3858  04EB  0832               	movf	??_Lcd_Write_String+2,w
  3859  04EC  00FF               	movwf	btemp+1
  3860  04ED  0831               	movf	??_Lcd_Write_String+1,w
  3861  04EE  0084               	movwf	4
  3862  04EF  120A  118A  2717  120A  118A  	fcall	stringtab
  3863  04F4  120A  118A  277C  120A  118A  	fcall	_Lcd_Write_Char
  3864  04F9                     l2167:
  3865  04F9  3001               	movlw	1
  3866  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  3867  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  3868  04FC  07B3               	addwf	Lcd_Write_String@i,f
  3869  04FD  1803               	skipnc
  3870  04FE  0AB4               	incf	Lcd_Write_String@i+1,f
  3871  04FF  3000               	movlw	0
  3872  0500  07B4               	addwf	Lcd_Write_String@i+1,f
  3873  0501                     l2169:
  3874  0501  0833               	movf	Lcd_Write_String@i,w
  3875  0502  0776               	addwf	Lcd_Write_String@a,w
  3876  0503  00B1               	movwf	??_Lcd_Write_String+1
  3877  0504  0877               	movf	Lcd_Write_String@a+1,w
  3878  0505  00B0               	movwf	??_Lcd_Write_String
  3879  0506  1803               	skipnc
  3880  0507  0AB0               	incf	??_Lcd_Write_String,f
  3881  0508  1FB3               	btfss	Lcd_Write_String@i,7
  3882  0509  2D0B               	goto	u1120
  3883  050A  03B0               	decf	??_Lcd_Write_String,f
  3884  050B                     u1120:
  3885  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3886  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3887  050D  0830               	movf	??_Lcd_Write_String,w
  3888  050E  00B2               	movwf	??_Lcd_Write_String+2
  3889  050F  0832               	movf	??_Lcd_Write_String+2,w
  3890  0510  00FF               	movwf	btemp+1
  3891  0511  0831               	movf	??_Lcd_Write_String+1,w
  3892  0512  0084               	movwf	4
  3893  0513  120A  118A  2717  120A  118A  	fcall	stringtab
  3894  0518  3A00               	xorlw	0
  3895  0519  1D03               	skipz
  3896  051A  2D1C               	goto	u1131
  3897  051B  2D1D               	goto	u1130
  3898  051C                     u1131:
  3899  051C  2CDD               	goto	l2165
  3900  051D                     u1130:
  3901  051D                     l257:
  3902  051D  0008               	return
  3903  051E                     __end_of_Lcd_Write_String:
  3904                           
  3905                           	psect	text21
  3906  077C                     __ptext21:	
  3907 ;; *************** function _Lcd_Write_Char *****************
  3908 ;; Defined at:
  3909 ;;		line 63 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  a               1    wreg     unsigned char 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  a               1    5[COMMON] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0, pclath, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3923 ;;      Params:         0       0       0       0       0
  3924 ;;      Locals:         1       0       0       0       0
  3925 ;;      Temps:          1       0       0       0       0
  3926 ;;      Totals:         2       0       0       0       0
  3927 ;;Total ram usage:        2 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    3
  3930 ;; This function calls:
  3931 ;;		_Lcd_Port
  3932 ;; This function is called by:
  3933 ;;		_Lcd_Write_String
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           
  3938                           ;psect for function _Lcd_Write_Char
  3939  077C                     _Lcd_Write_Char:
  3940                           
  3941                           ;incstack = 0
  3942                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3943                           ;Lcd_Write_Char@a stored from wreg
  3944  077C  00F5               	movwf	Lcd_Write_Char@a
  3945  077D                     l2039:
  3946                           
  3947                           ;LCD8BIT.c: 65: PORTBbits.RB1 = 1;
  3948  077D  1283               	bcf	3,5	;RP0=0, select bank0
  3949  077E  1303               	bcf	3,6	;RP1=0, select bank0
  3950  077F  1486               	bsf	6,1	;volatile
  3951  0780                     l2041:
  3952                           
  3953                           ;LCD8BIT.c: 66: Lcd_Port(a);
  3954  0780  0875               	movf	Lcd_Write_Char@a,w
  3955  0781  120A  118A  27D9  120A  118A  	fcall	_Lcd_Port
  3956  0786                     l2043:
  3957                           
  3958                           ;LCD8BIT.c: 67: PORTBbits.RB0 = 1;
  3959  0786  1283               	bcf	3,5	;RP0=0, select bank0
  3960  0787  1303               	bcf	3,6	;RP1=0, select bank0
  3961  0788  1406               	bsf	6,0	;volatile
  3962  0789                     l2045:
  3963                           
  3964                           ;LCD8BIT.c: 68: _delay((unsigned long)((40)*(40000000/4000000.0)));
  3965  0789  3085               	movlw	133
  3966  078A  00F4               	movwf	??_Lcd_Write_Char
  3967  078B                     u1217:
  3968  078B  0BF4               	decfsz	??_Lcd_Write_Char,f
  3969  078C  2F8B               	goto	u1217
  3970  078D                     l2047:
  3971                           
  3972                           ;LCD8BIT.c: 69: PORTBbits.RB0 = 0;
  3973  078D  1283               	bcf	3,5	;RP0=0, select bank0
  3974  078E  1303               	bcf	3,6	;RP1=0, select bank0
  3975  078F  1006               	bcf	6,0	;volatile
  3976  0790                     l2049:
  3977                           
  3978                           ;LCD8BIT.c: 70: PORTBbits.RB1 = 0;
  3979  0790  1086               	bcf	6,1	;volatile
  3980  0791                     l251:
  3981  0791  0008               	return
  3982  0792                     __end_of_Lcd_Write_Char:
  3983                           
  3984                           	psect	text22
  3985  05CB                     __ptext22:	
  3986 ;; *************** function _Lcd_Set_Cursor *****************
  3987 ;; Defined at:
  3988 ;;		line 45 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  a               1    wreg     unsigned char 
  3991 ;;  b               1    7[COMMON] unsigned char 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  a               1    0[BANK0 ] unsigned char 
  3994 ;;  z               1    2[BANK0 ] unsigned char 
  3995 ;;  temp            1    1[BANK0 ] unsigned char 
  3996 ;;  y               1    0        unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4006 ;;      Params:         1       0       0       0       0
  4007 ;;      Locals:         0       3       0       0       0
  4008 ;;      Temps:          0       0       0       0       0
  4009 ;;      Totals:         1       3       0       0       0
  4010 ;;Total ram usage:        4 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    4
  4013 ;; This function calls:
  4014 ;;		_Lcd_Cmd
  4015 ;; This function is called by:
  4016 ;;		_main
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _Lcd_Set_Cursor
  4022  05CB                     _Lcd_Set_Cursor:
  4023                           
  4024                           ;incstack = 0
  4025                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4026                           ;Lcd_Set_Cursor@a stored from wreg
  4027  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  4028  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  4029  05CD  00A0               	movwf	Lcd_Set_Cursor@a
  4030  05CE                     l2147:
  4031                           
  4032                           ;LCD8BIT.c: 47: char temp,z,y;;LCD8BIT.c: 48: if(a == 1)
  4033  05CE  0320               	decf	Lcd_Set_Cursor@a,w
  4034  05CF  1D03               	btfss	3,2
  4035  05D0  2DD2               	goto	u1091
  4036  05D1  2DD3               	goto	u1090
  4037  05D2                     u1091:
  4038  05D2  2DE3               	goto	l2155
  4039  05D3                     u1090:
  4040  05D3                     l2149:
  4041                           
  4042                           ;LCD8BIT.c: 49: {;LCD8BIT.c: 50: temp = 0x80 + b - 1;
  4043  05D3  0877               	movf	Lcd_Set_Cursor@b,w
  4044  05D4  3E7F               	addlw	127
  4045  05D5  00FF               	movwf	btemp+1
  4046  05D6  087F               	movf	btemp+1,w
  4047  05D7  00A1               	movwf	Lcd_Set_Cursor@temp
  4048  05D8                     l2151:
  4049                           
  4050                           ;LCD8BIT.c: 51: z = temp;
  4051  05D8  0821               	movf	Lcd_Set_Cursor@temp,w
  4052  05D9  00FF               	movwf	btemp+1
  4053  05DA  087F               	movf	btemp+1,w
  4054  05DB  00A2               	movwf	Lcd_Set_Cursor@z
  4055  05DC                     l2153:
  4056                           
  4057                           ;LCD8BIT.c: 52: Lcd_Cmd(z);
  4058  05DC  0822               	movf	Lcd_Set_Cursor@z,w
  4059  05DD  120A  118A  2736  120A  118A  	fcall	_Lcd_Cmd
  4060                           
  4061                           ;LCD8BIT.c: 53: }
  4062  05E2  2DF8               	goto	l248
  4063  05E3                     l2155:
  4064                           
  4065                           ;LCD8BIT.c: 54: else if(a == 2)
  4066  05E3  3002               	movlw	2
  4067  05E4  0620               	xorwf	Lcd_Set_Cursor@a,w
  4068  05E5  1D03               	btfss	3,2
  4069  05E6  2DE8               	goto	u1101
  4070  05E7  2DE9               	goto	u1100
  4071  05E8                     u1101:
  4072  05E8  2DF8               	goto	l248
  4073  05E9                     u1100:
  4074  05E9                     l2157:
  4075                           
  4076                           ;LCD8BIT.c: 55: {;LCD8BIT.c: 56: temp = 0xC0 + b - 1;
  4077  05E9  0877               	movf	Lcd_Set_Cursor@b,w
  4078  05EA  3EBF               	addlw	191
  4079  05EB  00FF               	movwf	btemp+1
  4080  05EC  087F               	movf	btemp+1,w
  4081  05ED  00A1               	movwf	Lcd_Set_Cursor@temp
  4082  05EE                     l2159:
  4083                           
  4084                           ;LCD8BIT.c: 57: z = temp;
  4085  05EE  0821               	movf	Lcd_Set_Cursor@temp,w
  4086  05EF  00FF               	movwf	btemp+1
  4087  05F0  087F               	movf	btemp+1,w
  4088  05F1  00A2               	movwf	Lcd_Set_Cursor@z
  4089  05F2                     l2161:
  4090                           
  4091                           ;LCD8BIT.c: 58: Lcd_Cmd(z);
  4092  05F2  0822               	movf	Lcd_Set_Cursor@z,w
  4093  05F3  120A  118A  2736  120A  118A  	fcall	_Lcd_Cmd
  4094  05F8                     l248:
  4095  05F8  0008               	return
  4096  05F9                     __end_of_Lcd_Set_Cursor:
  4097                           
  4098                           	psect	text23
  4099  0473                     __ptext23:	
  4100 ;; *************** function _Lcd_Init *****************
  4101 ;; Defined at:
  4102 ;;		line 10 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;		None
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;		None
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      void 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0, pclath, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4116 ;;      Params:         0       0       0       0       0
  4117 ;;      Locals:         0       0       0       0       0
  4118 ;;      Temps:          0       3       0       0       0
  4119 ;;      Totals:         0       3       0       0       0
  4120 ;;Total ram usage:        3 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    4
  4123 ;; This function calls:
  4124 ;;		_Lcd_Cmd
  4125 ;;		_Lcd_Port
  4126 ;; This function is called by:
  4127 ;;		_main
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _Lcd_Init
  4133  0473                     _Lcd_Init:
  4134  0473                     l2125:	
  4135                           ;incstack = 0
  4136                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4137                           
  4138                           
  4139                           ;LCD8BIT.c: 12: _delay((unsigned long)((15)*(40000000/4000.0)));
  4140  0473  30C3               	movlw	195
  4141  0474  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0475  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0476  00A1               	movwf	??_Lcd_Init+1
  4144  0477  30CC               	movlw	204
  4145  0478  00A0               	movwf	??_Lcd_Init
  4146  0479                     u1227:
  4147  0479  0BA0               	decfsz	??_Lcd_Init,f
  4148  047A  2C79               	goto	u1227
  4149  047B  0BA1               	decfsz	??_Lcd_Init+1,f
  4150  047C  2C79               	goto	u1227
  4151  047D  0000               	nop
  4152  047E                     l2127:
  4153                           
  4154                           ;LCD8BIT.c: 13: Lcd_Port(0x00);
  4155  047E  3000               	movlw	0
  4156  047F  120A  118A  27D9  120A  118A  	fcall	_Lcd_Port
  4157  0484                     l2129:
  4158                           
  4159                           ;LCD8BIT.c: 14: _delay((unsigned long)((20)*(40000000/4000.0)));
  4160  0484  3002               	movlw	2
  4161  0485  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0486  1303               	bcf	3,6	;RP1=0, select bank0
  4163  0487  00A2               	movwf	??_Lcd_Init+2
  4164  0488  3004               	movlw	4
  4165  0489  00A1               	movwf	??_Lcd_Init+1
  4166  048A  30B9               	movlw	185
  4167  048B  00A0               	movwf	??_Lcd_Init
  4168  048C                     u1237:
  4169  048C  0BA0               	decfsz	??_Lcd_Init,f
  4170  048D  2C8C               	goto	u1237
  4171  048E  0BA1               	decfsz	??_Lcd_Init+1,f
  4172  048F  2C8C               	goto	u1237
  4173  0490  0BA2               	decfsz	??_Lcd_Init+2,f
  4174  0491  2C8C               	goto	u1237
  4175  0492  2C93               	nop2
  4176                           
  4177                           ;LCD8BIT.c: 15: Lcd_Cmd(0x30);
  4178  0493  3030               	movlw	48
  4179  0494  120A  118A  2736  120A  118A  	fcall	_Lcd_Cmd
  4180  0499                     l2131:
  4181                           
  4182                           ;LCD8BIT.c: 16: _delay((unsigned long)((5)*(40000000/4000.0)));
  4183  0499  3041               	movlw	65
  4184  049A  1283               	bcf	3,5	;RP0=0, select bank0
  4185  049B  1303               	bcf	3,6	;RP1=0, select bank0
  4186  049C  00A1               	movwf	??_Lcd_Init+1
  4187  049D  30ED               	movlw	237
  4188  049E  00A0               	movwf	??_Lcd_Init
  4189  049F                     u1247:
  4190  049F  0BA0               	decfsz	??_Lcd_Init,f
  4191  04A0  2C9F               	goto	u1247
  4192  04A1  0BA1               	decfsz	??_Lcd_Init+1,f
  4193  04A2  2C9F               	goto	u1247
  4194  04A3  2CA4               	nop2
  4195  04A4                     l2133:
  4196                           
  4197                           ;LCD8BIT.c: 17: Lcd_Cmd(0x30);
  4198  04A4  3030               	movlw	48
  4199  04A5  120A  118A  2736  120A  118A  	fcall	_Lcd_Cmd
  4200                           
  4201                           ;LCD8BIT.c: 18: _delay((unsigned long)((160)*(40000000/4000000.0)));
  4202  04AA  30E4               	movlw	228
  4203  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  4204  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  4205  04AD  00A0               	movwf	??_Lcd_Init
  4206  04AE                     u1257:
  4207  04AE  2CAF               	nop2
  4208  04AF  2CB0               	nop2
  4209  04B0  0BA0               	decfsz	??_Lcd_Init,f
  4210  04B1  2CAE               	goto	u1257
  4211  04B2  0000               	nop
  4212  04B3                     l2135:
  4213                           
  4214                           ;LCD8BIT.c: 19: Lcd_Cmd(0x30);
  4215  04B3  3030               	movlw	48
  4216  04B4  120A  118A  2736  120A  118A  	fcall	_Lcd_Cmd
  4217  04B9                     l2137:
  4218                           
  4219                           ;LCD8BIT.c: 21: Lcd_Cmd(0x38);
  4220  04B9  3038               	movlw	56
  4221  04BA  120A  118A  2736  120A  118A  	fcall	_Lcd_Cmd
  4222  04BF                     l2139:
  4223                           
  4224                           ;LCD8BIT.c: 22: Lcd_Cmd(0x10);
  4225  04BF  3010               	movlw	16
  4226  04C0  120A  118A  2736  120A  118A  	fcall	_Lcd_Cmd
  4227  04C5                     l2141:
  4228                           
  4229                           ;LCD8BIT.c: 23: Lcd_Cmd(0x01);
  4230  04C5  3001               	movlw	1
  4231  04C6  120A  118A  2736  120A  118A  	fcall	_Lcd_Cmd
  4232  04CB                     l2143:
  4233                           
  4234                           ;LCD8BIT.c: 24: Lcd_Cmd(0x06);
  4235  04CB  3006               	movlw	6
  4236  04CC  120A  118A  2736  120A  118A  	fcall	_Lcd_Cmd
  4237  04D1                     l2145:
  4238                           
  4239                           ;LCD8BIT.c: 26: Lcd_Cmd(0x0C);
  4240  04D1  300C               	movlw	12
  4241  04D2  120A  118A  2736  120A  118A  	fcall	_Lcd_Cmd
  4242  04D7                     l236:
  4243  04D7  0008               	return
  4244  04D8                     __end_of_Lcd_Init:
  4245                           
  4246                           	psect	text24
  4247  0736                     __ptext24:	
  4248 ;; *************** function _Lcd_Cmd *****************
  4249 ;; Defined at:
  4250 ;;		line 30 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  a               1    wreg     unsigned char 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  a               1    6[COMMON] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4264 ;;      Params:         0       0       0       0       0
  4265 ;;      Locals:         1       0       0       0       0
  4266 ;;      Temps:          2       0       0       0       0
  4267 ;;      Totals:         3       0       0       0       0
  4268 ;;Total ram usage:        3 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    3
  4271 ;; This function calls:
  4272 ;;		_Lcd_Port
  4273 ;; This function is called by:
  4274 ;;		_Lcd_Init
  4275 ;;		_Lcd_Set_Cursor
  4276 ;;		_Lcd_Clear
  4277 ;;		_Lcd_Shift_Right
  4278 ;;		_Lcd_Shift_Left
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           
  4283                           ;psect for function _Lcd_Cmd
  4284  0736                     _Lcd_Cmd:
  4285                           
  4286                           ;incstack = 0
  4287                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4288                           ;Lcd_Cmd@a stored from wreg
  4289  0736  00F6               	movwf	Lcd_Cmd@a
  4290  0737                     l2029:
  4291                           
  4292                           ;LCD8BIT.c: 32: PORTBbits.RB1 = 0;
  4293  0737  1283               	bcf	3,5	;RP0=0, select bank0
  4294  0738  1303               	bcf	3,6	;RP1=0, select bank0
  4295  0739  1086               	bcf	6,1	;volatile
  4296  073A                     l2031:
  4297                           
  4298                           ;LCD8BIT.c: 33: Lcd_Port(a);
  4299  073A  0876               	movf	Lcd_Cmd@a,w
  4300  073B  120A  118A  27D9  120A  118A  	fcall	_Lcd_Port
  4301  0740                     l2033:
  4302                           
  4303                           ;LCD8BIT.c: 34: PORTBbits.RB0 = 1;
  4304  0740  1283               	bcf	3,5	;RP0=0, select bank0
  4305  0741  1303               	bcf	3,6	;RP1=0, select bank0
  4306  0742  1406               	bsf	6,0	;volatile
  4307  0743                     l2035:
  4308                           
  4309                           ;LCD8BIT.c: 35: _delay((unsigned long)((10)*(40000000/4000.0)));
  4310  0743  3082               	movlw	130
  4311  0744  00F5               	movwf	??_Lcd_Cmd+1
  4312  0745  30DD               	movlw	221
  4313  0746  00F4               	movwf	??_Lcd_Cmd
  4314  0747                     u1267:
  4315  0747  0BF4               	decfsz	??_Lcd_Cmd,f
  4316  0748  2F47               	goto	u1267
  4317  0749  0BF5               	decfsz	??_Lcd_Cmd+1,f
  4318  074A  2F47               	goto	u1267
  4319  074B  2F4C               	nop2
  4320  074C                     l2037:
  4321                           
  4322                           ;LCD8BIT.c: 36: PORTBbits.RB0 = 0;
  4323  074C  1283               	bcf	3,5	;RP0=0, select bank0
  4324  074D  1303               	bcf	3,6	;RP1=0, select bank0
  4325  074E  1006               	bcf	6,0	;volatile
  4326  074F                     l239:
  4327  074F  0008               	return
  4328  0750                     __end_of_Lcd_Cmd:
  4329                           
  4330                           	psect	text25
  4331  07D9                     __ptext25:	
  4332 ;; *************** function _Lcd_Port *****************
  4333 ;; Defined at:
  4334 ;;		line 5 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  a               1    wreg     unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  a               1    3[COMMON] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       0       0       0       0
  4349 ;;      Locals:         1       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0
  4351 ;;      Totals:         1       0       0       0       0
  4352 ;;Total ram usage:        1 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    2
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_Lcd_Init
  4359 ;;		_Lcd_Cmd
  4360 ;;		_Lcd_Write_Char
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           
  4365                           ;psect for function _Lcd_Port
  4366  07D9                     _Lcd_Port:
  4367                           
  4368                           ;incstack = 0
  4369                           ; Regs used in _Lcd_Port: [wreg]
  4370                           ;Lcd_Port@a stored from wreg
  4371  07D9  00F3               	movwf	Lcd_Port@a
  4372  07DA                     l1955:
  4373                           
  4374                           ;LCD8BIT.c: 7: PORTD = a;
  4375  07DA  0873               	movf	Lcd_Port@a,w
  4376  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  4377  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  4378  07DD  0088               	movwf	8	;volatile
  4379  07DE                     l233:
  4380  07DE  0008               	return
  4381  07DF                     __end_of_Lcd_Port:
  4382                           
  4383                           	psect	text26
  4384  0599                     __ptext26:	
  4385 ;; *************** function _ISR *****************
  4386 ;; Defined at:
  4387 ;;		line 86 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4401 ;;      Params:         0       0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0
  4403 ;;      Temps:          3       0       0       0       0
  4404 ;;      Totals:         3       0       0       0       0
  4405 ;;Total ram usage:        3 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    1
  4408 ;; This function calls:
  4409 ;;		_envio
  4410 ;; This function is called by:
  4411 ;;		Interrupt level 1
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           
  4416                           ;psect for function _ISR
  4417  0599                     _ISR:
  4418  0599                     i1l1897:
  4419                           
  4420                           ;main.c: 87: if (PIR1bits.TXIF == 1){
  4421  0599  1E0C               	btfss	12,4	;volatile
  4422  059A  2D9C               	goto	u90_21
  4423  059B  2D9D               	goto	u90_20
  4424  059C                     u90_21:
  4425  059C  2DA9               	goto	i1l1905
  4426  059D                     u90_20:
  4427  059D                     i1l1899:
  4428                           
  4429                           ;main.c: 88: toggleTX++;
  4430  059D  3001               	movlw	1
  4431  059E  00FF               	movwf	btemp+1
  4432  059F  087F               	movf	btemp+1,w
  4433  05A0  07F8               	addwf	_toggleTX,f
  4434  05A1                     i1l1901:
  4435                           
  4436                           ;main.c: 89: envio();
  4437  05A1  120A  118A  2284  120A  118A  	fcall	_envio
  4438  05A6                     i1l1903:
  4439                           
  4440                           ;main.c: 90: PIE1bits.TXIE = 0;
  4441  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  4442  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  4443  05A8  120C               	bcf	12,4	;volatile
  4444  05A9                     i1l1905:
  4445                           
  4446                           ;main.c: 91: };main.c: 92: if (INTCONbits.TMR0IF == 1){
  4447  05A9  1D0B               	btfss	11,2	;volatile
  4448  05AA  2DAC               	goto	u91_21
  4449  05AB  2DAD               	goto	u91_20
  4450  05AC                     u91_21:
  4451  05AC  2DC1               	goto	i1l118
  4452  05AD                     u91_20:
  4453  05AD                     i1l1907:
  4454                           
  4455                           ;main.c: 93: INTCONbits.TMR0IF = 0;
  4456  05AD  110B               	bcf	11,2	;volatile
  4457  05AE                     i1l1909:
  4458                           
  4459                           ;main.c: 94: TMR0 = 100;
  4460  05AE  3064               	movlw	100
  4461  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  4462  05B0  0081               	movwf	1	;volatile
  4463  05B1                     i1l1911:
  4464                           
  4465                           ;main.c: 95: var++;
  4466  05B1  3001               	movlw	1
  4467  05B2  00FF               	movwf	btemp+1
  4468  05B3  087F               	movf	btemp+1,w
  4469  05B4  07C0               	addwf	_var,f
  4470  05B5                     i1l1913:
  4471                           
  4472                           ;main.c: 96: if(var == 2){
  4473  05B5  3002               	movlw	2
  4474  05B6  0640               	xorwf	_var,w
  4475  05B7  1D03               	btfss	3,2
  4476  05B8  2DBA               	goto	u92_21
  4477  05B9  2DBB               	goto	u92_20
  4478  05BA                     u92_21:
  4479  05BA  2DC1               	goto	i1l118
  4480  05BB                     u92_20:
  4481  05BB                     i1l1915:
  4482                           
  4483                           ;main.c: 97: PIE1bits.TXIE=1;
  4484  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  4485  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  4486  05BD  160C               	bsf	12,4	;volatile
  4487  05BE                     i1l1917:
  4488                           
  4489                           ;main.c: 98: var = 0;
  4490  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  4491  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  4492  05C0  01C0               	clrf	_var
  4493  05C1                     i1l118:
  4494  05C1  0872               	movf	??_ISR+2,w
  4495  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  4496  05C3  00FF               	movwf	btemp+1
  4497  05C4  0871               	movf	??_ISR+1,w
  4498  05C5  008A               	movwf	10
  4499  05C6  0E70               	swapf	??_ISR^(0+4294967168),w
  4500  05C7  0083               	movwf	3
  4501  05C8  0EFE               	swapf	btemp,f
  4502  05C9  0E7E               	swapf	btemp,w
  4503  05CA  0009               	retfie
  4504  05CB                     __end_of_ISR:
  4505                           
  4506                           	psect	intentry
  4507  0004                     __pintentry:	
  4508                           ;incstack = 0
  4509                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4510                           
  4511  0004                     interrupt_function:
  4512  007E                     saved_w	set	btemp
  4513  0004  00FE               	movwf	btemp
  4514  0005  0E03               	swapf	3,w
  4515  0006  00F0               	movwf	??_ISR
  4516  0007  080A               	movf	10,w
  4517  0008  00F1               	movwf	??_ISR+1
  4518  0009  1283               	bcf	3,5	;RP0=0, select bank0
  4519  000A  1303               	bcf	3,6	;RP1=0, select bank0
  4520  000B  087F               	movf	btemp+1,w
  4521  000C  00F2               	movwf	??_ISR+2
  4522  000D  120A  118A  2D99   	ljmp	_ISR
  4523                           
  4524                           	psect	text27
  4525  0284                     __ptext27:	
  4526 ;; *************** function _envio *****************
  4527 ;; Defined at:
  4528 ;;		line 307 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4542 ;;      Params:         0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0
  4545 ;;      Totals:         0       0       0       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_ISR
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           
  4556                           ;psect for function _envio
  4557  0284                     _envio:
  4558  0284                     i1l1659:	
  4559                           ;incstack = 0
  4560                           ; Regs used in _envio: [wreg+status,2+status,0]
  4561                           
  4562                           
  4563                           ;main.c: 308: if (toggleTX == 1){
  4564  0284  0378               	decf	_toggleTX,w
  4565  0285  1D03               	btfss	3,2
  4566  0286  2A88               	goto	u64_21
  4567  0287  2A89               	goto	u64_20
  4568  0288                     u64_21:
  4569  0288  2A8D               	goto	i1l1663
  4570  0289                     u64_20:
  4571  0289                     i1l1661:
  4572                           
  4573                           ;main.c: 309: TXREG = CONT_C;
  4574  0289  1283               	bcf	3,5	;RP0=0, select bank0
  4575  028A  1303               	bcf	3,6	;RP1=0, select bank0
  4576  028B  083B               	movf	_CONT_C,w
  4577  028C  0099               	movwf	25	;volatile
  4578  028D                     i1l1663:
  4579                           
  4580                           ;main.c: 310: };main.c: 311: if (toggleTX == 2){
  4581  028D  3002               	movlw	2
  4582  028E  0678               	xorwf	_toggleTX,w
  4583  028F  1D03               	btfss	3,2
  4584  0290  2A92               	goto	u65_21
  4585  0291  2A93               	goto	u65_20
  4586  0292                     u65_21:
  4587  0292  2A97               	goto	i1l1667
  4588  0293                     u65_20:
  4589  0293                     i1l1665:
  4590                           
  4591                           ;main.c: 312: TXREG = CONT_D;
  4592  0293  1283               	bcf	3,5	;RP0=0, select bank0
  4593  0294  1303               	bcf	3,6	;RP1=0, select bank0
  4594  0295  083C               	movf	_CONT_D,w
  4595  0296  0099               	movwf	25	;volatile
  4596  0297                     i1l1667:
  4597                           
  4598                           ;main.c: 313: };main.c: 314: if (toggleTX == 3){
  4599  0297  3003               	movlw	3
  4600  0298  0678               	xorwf	_toggleTX,w
  4601  0299  1D03               	btfss	3,2
  4602  029A  2A9C               	goto	u66_21
  4603  029B  2A9D               	goto	u66_20
  4604  029C                     u66_21:
  4605  029C  2AA1               	goto	i1l1671
  4606  029D                     u66_20:
  4607  029D                     i1l1669:
  4608                           
  4609                           ;main.c: 315: TXREG = CONT_U;
  4610  029D  1283               	bcf	3,5	;RP0=0, select bank0
  4611  029E  1303               	bcf	3,6	;RP1=0, select bank0
  4612  029F  083D               	movf	_CONT_U,w
  4613  02A0  0099               	movwf	25	;volatile
  4614  02A1                     i1l1671:
  4615                           
  4616                           ;main.c: 316: };main.c: 317: if (toggleTX == 4){
  4617  02A1  3004               	movlw	4
  4618  02A2  0678               	xorwf	_toggleTX,w
  4619  02A3  1D03               	btfss	3,2
  4620  02A4  2AA6               	goto	u67_21
  4621  02A5  2AA7               	goto	u67_20
  4622  02A6                     u67_21:
  4623  02A6  2AAB               	goto	i1l1675
  4624  02A7                     u67_20:
  4625  02A7                     i1l1673:
  4626                           
  4627                           ;main.c: 318: TXREG = 0x2C;
  4628  02A7  302C               	movlw	44
  4629  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  4630  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  4631  02AA  0099               	movwf	25	;volatile
  4632  02AB                     i1l1675:
  4633                           
  4634                           ;main.c: 319: };main.c: 320: if (toggleTX == 5){
  4635  02AB  3005               	movlw	5
  4636  02AC  0678               	xorwf	_toggleTX,w
  4637  02AD  1D03               	btfss	3,2
  4638  02AE  2AB0               	goto	u68_21
  4639  02AF  2AB1               	goto	u68_20
  4640  02B0                     u68_21:
  4641  02B0  2AB5               	goto	i1l1679
  4642  02B1                     u68_20:
  4643  02B1                     i1l1677:
  4644                           
  4645                           ;main.c: 321: TXREG = 0x20;
  4646  02B1  3020               	movlw	32
  4647  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  4648  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  4649  02B4  0099               	movwf	25	;volatile
  4650  02B5                     i1l1679:
  4651                           
  4652                           ;main.c: 322: };main.c: 323: if (toggleTX == 6){
  4653  02B5  3006               	movlw	6
  4654  02B6  0678               	xorwf	_toggleTX,w
  4655  02B7  1D03               	btfss	3,2
  4656  02B8  2ABA               	goto	u69_21
  4657  02B9  2ABB               	goto	u69_20
  4658  02BA                     u69_21:
  4659  02BA  2ABF               	goto	i1l1683
  4660  02BB                     u69_20:
  4661  02BB                     i1l1681:
  4662                           
  4663                           ;main.c: 324: TXREG = POT1_C;
  4664  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  4665  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  4666  02BD  0838               	movf	_POT1_C,w
  4667  02BE  0099               	movwf	25	;volatile
  4668  02BF                     i1l1683:
  4669                           
  4670                           ;main.c: 325: };main.c: 326: if (toggleTX == 7){
  4671  02BF  3007               	movlw	7
  4672  02C0  0678               	xorwf	_toggleTX,w
  4673  02C1  1D03               	btfss	3,2
  4674  02C2  2AC4               	goto	u70_21
  4675  02C3  2AC5               	goto	u70_20
  4676  02C4                     u70_21:
  4677  02C4  2AC9               	goto	i1l1687
  4678  02C5                     u70_20:
  4679  02C5                     i1l1685:
  4680                           
  4681                           ;main.c: 327: TXREG = 0x2E;
  4682  02C5  302E               	movlw	46
  4683  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  4684  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  4685  02C8  0099               	movwf	25	;volatile
  4686  02C9                     i1l1687:
  4687                           
  4688                           ;main.c: 328: };main.c: 329: if (toggleTX == 8){
  4689  02C9  3008               	movlw	8
  4690  02CA  0678               	xorwf	_toggleTX,w
  4691  02CB  1D03               	btfss	3,2
  4692  02CC  2ACE               	goto	u71_21
  4693  02CD  2ACF               	goto	u71_20
  4694  02CE                     u71_21:
  4695  02CE  2AD3               	goto	i1l1691
  4696  02CF                     u71_20:
  4697  02CF                     i1l1689:
  4698                           
  4699                           ;main.c: 330: TXREG = POT1_D;
  4700  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  4701  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  4702  02D1  0839               	movf	_POT1_D,w
  4703  02D2  0099               	movwf	25	;volatile
  4704  02D3                     i1l1691:
  4705                           
  4706                           ;main.c: 331: };main.c: 332: if (toggleTX == 9){
  4707  02D3  3009               	movlw	9
  4708  02D4  0678               	xorwf	_toggleTX,w
  4709  02D5  1D03               	btfss	3,2
  4710  02D6  2AD8               	goto	u72_21
  4711  02D7  2AD9               	goto	u72_20
  4712  02D8                     u72_21:
  4713  02D8  2ADD               	goto	i1l1695
  4714  02D9                     u72_20:
  4715  02D9                     i1l1693:
  4716                           
  4717                           ;main.c: 333: TXREG = POT1_U;
  4718  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  4719  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  4720  02DB  083A               	movf	_POT1_U,w
  4721  02DC  0099               	movwf	25	;volatile
  4722  02DD                     i1l1695:
  4723                           
  4724                           ;main.c: 334: };main.c: 335: if (toggleTX == 10){
  4725  02DD  300A               	movlw	10
  4726  02DE  0678               	xorwf	_toggleTX,w
  4727  02DF  1D03               	btfss	3,2
  4728  02E0  2AE2               	goto	u73_21
  4729  02E1  2AE3               	goto	u73_20
  4730  02E2                     u73_21:
  4731  02E2  2AE7               	goto	i1l1699
  4732  02E3                     u73_20:
  4733  02E3                     i1l1697:
  4734                           
  4735                           ;main.c: 336: TXREG = 0x2C;
  4736  02E3  302C               	movlw	44
  4737  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  4738  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  4739  02E6  0099               	movwf	25	;volatile
  4740  02E7                     i1l1699:
  4741                           
  4742                           ;main.c: 337: };main.c: 338: if (toggleTX == 11){
  4743  02E7  300B               	movlw	11
  4744  02E8  0678               	xorwf	_toggleTX,w
  4745  02E9  1D03               	btfss	3,2
  4746  02EA  2AEC               	goto	u74_21
  4747  02EB  2AED               	goto	u74_20
  4748  02EC                     u74_21:
  4749  02EC  2AF1               	goto	i1l1703
  4750  02ED                     u74_20:
  4751  02ED                     i1l1701:
  4752                           
  4753                           ;main.c: 339: TXREG = 0x20;
  4754  02ED  3020               	movlw	32
  4755  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  4756  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  4757  02F0  0099               	movwf	25	;volatile
  4758  02F1                     i1l1703:
  4759                           
  4760                           ;main.c: 340: };main.c: 341: if (toggleTX == 12){
  4761  02F1  300C               	movlw	12
  4762  02F2  0678               	xorwf	_toggleTX,w
  4763  02F3  1D03               	btfss	3,2
  4764  02F4  2AF6               	goto	u75_21
  4765  02F5  2AF7               	goto	u75_20
  4766  02F6                     u75_21:
  4767  02F6  2AFB               	goto	i1l1707
  4768  02F7                     u75_20:
  4769  02F7                     i1l1705:
  4770                           
  4771                           ;main.c: 342: TXREG = SIGN;
  4772  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  4773  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  4774  02F9  0835               	movf	_SIGN,w
  4775  02FA  0099               	movwf	25	;volatile
  4776  02FB                     i1l1707:
  4777                           
  4778                           ;main.c: 343: };main.c: 344: if (toggleTX == 13){
  4779  02FB  300D               	movlw	13
  4780  02FC  0678               	xorwf	_toggleTX,w
  4781  02FD  1D03               	btfss	3,2
  4782  02FE  2B00               	goto	u76_21
  4783  02FF  2B01               	goto	u76_20
  4784  0300                     u76_21:
  4785  0300  2B05               	goto	i1l1711
  4786  0301                     u76_20:
  4787  0301                     i1l1709:
  4788                           
  4789                           ;main.c: 345: TXREG = POT2_C;
  4790  0301  087A               	movf	_POT2_C,w
  4791  0302  1283               	bcf	3,5	;RP0=0, select bank0
  4792  0303  1303               	bcf	3,6	;RP1=0, select bank0
  4793  0304  0099               	movwf	25	;volatile
  4794  0305                     i1l1711:
  4795                           
  4796                           ;main.c: 346: };main.c: 347: if (toggleTX == 14){
  4797  0305  300E               	movlw	14
  4798  0306  0678               	xorwf	_toggleTX,w
  4799  0307  1D03               	btfss	3,2
  4800  0308  2B0A               	goto	u77_21
  4801  0309  2B0B               	goto	u77_20
  4802  030A                     u77_21:
  4803  030A  2B0F               	goto	i1l1715
  4804  030B                     u77_20:
  4805  030B                     i1l1713:
  4806                           
  4807                           ;main.c: 348: TXREG = POT2_D;
  4808  030B  1283               	bcf	3,5	;RP0=0, select bank0
  4809  030C  1303               	bcf	3,6	;RP1=0, select bank0
  4810  030D  0836               	movf	_POT2_D,w
  4811  030E  0099               	movwf	25	;volatile
  4812  030F                     i1l1715:
  4813                           
  4814                           ;main.c: 349: };main.c: 350: if (toggleTX == 15){
  4815  030F  300F               	movlw	15
  4816  0310  0678               	xorwf	_toggleTX,w
  4817  0311  1D03               	btfss	3,2
  4818  0312  2B14               	goto	u78_21
  4819  0313  2B15               	goto	u78_20
  4820  0314                     u78_21:
  4821  0314  2B19               	goto	i1l1719
  4822  0315                     u78_20:
  4823  0315                     i1l1717:
  4824                           
  4825                           ;main.c: 351: TXREG = POT2_U;
  4826  0315  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0316  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0317  0837               	movf	_POT2_U,w
  4829  0318  0099               	movwf	25	;volatile
  4830  0319                     i1l1719:
  4831                           
  4832                           ;main.c: 352: };main.c: 353: if (toggleTX == 16){
  4833  0319  3010               	movlw	16
  4834  031A  0678               	xorwf	_toggleTX,w
  4835  031B  1D03               	btfss	3,2
  4836  031C  2B1E               	goto	u79_21
  4837  031D  2B1F               	goto	u79_20
  4838  031E                     u79_21:
  4839  031E  2B24               	goto	i1l177
  4840  031F                     u79_20:
  4841  031F                     i1l1721:
  4842                           
  4843                           ;main.c: 354: TXREG = 13;
  4844  031F  300D               	movlw	13
  4845  0320  1283               	bcf	3,5	;RP0=0, select bank0
  4846  0321  1303               	bcf	3,6	;RP1=0, select bank0
  4847  0322  0099               	movwf	25	;volatile
  4848  0323                     i1l1723:
  4849                           
  4850                           ;main.c: 355: toggleTX = 0;
  4851  0323  01F8               	clrf	_toggleTX
  4852  0324                     i1l177:
  4853  0324  0008               	return
  4854  0325                     __end_of_envio:
  4855  007E                     btemp	set	126	;btemp
  4856  007E                     wtemp0	set	126
  4857                           
  4858                           	psect	config
  4859                           
  4860                           ;Config register CONFIG1 @ 0x2007
  4861                           ;	Oscillator Selection bits
  4862                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4863                           ;	Watchdog Timer Enable bit
  4864                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4865                           ;	Power-up Timer Enable bit
  4866                           ;	PWRTE = OFF, PWRT disabled
  4867                           ;	RE3/MCLR pin function select bit
  4868                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4869                           ;	Code Protection bit
  4870                           ;	CP = OFF, Program memory code protection is disabled
  4871                           ;	Data Code Protection bit
  4872                           ;	CPD = OFF, Data memory code protection is disabled
  4873                           ;	Brown Out Reset Selection bits
  4874                           ;	BOREN = OFF, BOR disabled
  4875                           ;	Internal External Switchover bit
  4876                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4877                           ;	Fail-Safe Clock Monitor Enabled bit
  4878                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4879                           ;	Low Voltage Programming Enable bit
  4880                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4881                           ;	In-Circuit Debugger Mode bit
  4882                           ;	DEBUG = 0x1, unprogrammed default
  4883  2007                     	org	8199
  4884  2007  20D4               	dw	8404
  4885                           
  4886                           ;Config register CONFIG2 @ 0x2008
  4887                           ;	Brown-out Reset Selection bit
  4888                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4889                           ;	Flash Program Memory Self Write Enable bits
  4890                           ;	WRT = OFF, Write protection off
  4891  2008                     	org	8200
  4892  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        10
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     21      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> conver@temporal(BANK0[16]), STR_1(CODE[15]), 

    sp__conver	PTR const unsigned char  size(1) Largest target is 16
		 -> conver@temporal(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _slaveT->_slave1
    _slaveT->_slave2
    _slaveT->_slave3
    _slave3->_spiWrite
    _slave2->_spiWrite
    _slave1->_spiWrite
    _map_pot2->___wmul
    _map_pot1->___wmul
    _map_cont->___wmul
    ___awdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _map_pot2->___awdiv
    _map_pot1->___awdiv
    _map_cont->___awdiv
    ___awdiv->___wmul
    _Lcd_Write_String->_conver

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18152
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _Setup
                          _USARTconf
                             _conver
                            _initOsc
                           _map_cont
                           _map_pot1
                           _map_pot2
                             _slaveT
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _slaveT                                               0     0      0      66
                             _slave1
                             _slave2
                             _slave3
 ---------------------------------------------------------------------------------
 (2) _slave3                                               2     2      0      22
                                              4 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _slave2                                               2     2      0      22
                                              4 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _slave1                                               2     2      0      22
                                              4 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _map_pot2                                             2     2      0    5428
                                             10 BANK0      2     2      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _map_pot1                                             8     8      0    5496
                                             10 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _map_cont                                             2     2      0    5428
                                             10 BANK0      2     2      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1756
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     856
                                              3 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2785
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conver                                              16    16      0     385
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _USARTconf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     372
                                              6 COMMON     2     0      2
                                             16 BANK0      5     5      0
                     _Lcd_Write_Char
                             _conver (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     502
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0      93
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                              _envio
 ---------------------------------------------------------------------------------
 (6) _envio                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     _conver (ARG)
   _Setup
   _USARTconf
   _conver
   _initOsc
   _map_cont
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _map_pot1
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _map_pot2
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _slaveT
     _slave1
       _spiRead
         _spiReceiveWait
       _spiWrite
     _slave2
       _spiRead
         _spiReceiveWait
       _spiWrite
     _slave3
       _spiRead
         _spiReceiveWait
       _spiWrite
   _spiInit

 _ISR (ROOT)
   _envio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31      12        0.0%
ABS                  0      0      31       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Feb 16 00:19:55 2021

                        pc 0002             ___bmul@product 0074                _SSPSTATbits 0094  
             ___awdiv@sign 0027                         fsr 0004        ___wmul@multiplicand 0075  
                      l211 0598                        l132 06C8                        l141 0283  
                      l310 07D2                        l135 0676                        l303 0760  
                      l152 0561                        l304 0765                        l233 07DE  
                      l129 0716                        l321 07CB                        l313 07D8  
                      l146 018E                        l138 069F                        l251 0791  
                      l307 07CC                        l236 04D7                        l149 03A4  
                      l270 06EE                        l158 064D                        l239 074F  
                      l271 06D1                        l407 0609                        l248 05F8  
                      l272 06D7                        l257 051D                        l273 06DD  
                      l433 07A6                        l409 0623                        l274 06EF  
                      l269 06CB                        l287 077B                        l560 040D  
                      _ISR 0599                        u470 07D2                        u471 07D1  
                      u800 0758                        u801 0757                        u930 0601  
                      u931 0600                        u870 062B                        u871 062A  
                      u960 061D                        u880 0638                        u961 061C  
                      u945 060A                        u881 0637                        u970 0798  
                      u890 0645                        u971 0797                        u955 0611  
                      u891 0644                        u980 07A5                        u981 07A4  
                      u990 03AC                        u991 03AB                        _var 0040  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
                     l2001 0570                       l2101 03CB                       l2013 0574  
                     l2031 073A                       l2111 03F1                       l2103 03D2  
                     l2007 0572                       l2033 0740                       l2041 0780  
                     l2121 0409                       l2113 03F2                       l2105 03D6  
                     l2201 0041                       l2035 0743                       l2131 0499  
                     l2043 0786                       l2115 03F9                       l2107 03DA  
                     l2051 05F9                       l2019 0576                       l2027 0578  
                     l2203 00C2                       l2211 00E8                       l2037 074C  
                     l2029 0737                       l2141 04C5                       l2133 04A4  
                     l2125 0473                       l2045 0789                       l2109 03EB  
                     l2117 03FF                       l2061 061D                       l2053 05FD  
                     l2213 0169                       l2205 00CB                       l2221 040E  
                     l2143 04CB                       l2135 04B3                       l2127 047E  
                     l2151 05D8                       l2047 078D                       l2039 077D  
                     l2119 0404                       l2071 079C                       l2055 0601  
                     l2215 0172                       l2207 00D8                       l2231 042A  
                     l2223 0411                       l2145 04D1                       l2137 04B9  
                     l2129 0484                       l2161 05F2                       l2153 05DC  
                     l2049 0790                       l2081 03A5                       l2073 079E  
                     l2065 0793                       l2057 0610                       l2217 017F  
                     l2209 00E3                       l2241 044E                       l2233 042F  
                     l2225 0417                       l2139 04BF                       l2155 05E3  
                     l2147 05CE                       l2163 04D8                       l2091 03B7  
                     l2083 03A8                       l2075 07A0                       l2067 0794  
                     l2059 0617                       l2171 018F                       l2219 018A  
                     l1443 07CC                       l2243 045B                       l2235 0435  
                     l2227 041C                       l2157 05E9                       l2149 05D3  
                     l2165 04DD                       l2093 03BC                       l2085 03AC  
                     l2077 07A5                       l2069 0798                       l2181 021F  
                     l2173 0195                       l1445 07D4                       l1461 06B2  
                     l2245 0460                       l2237 043D                       l2229 0421  
                     l2159 05EE                       l2167 04F9                       l2095 03C0  
                     l2087 03B1                       l2191 0383                       l2183 0262  
                     l2175 01BA                       l1447 07C3                       l1463 06BC  
                     l1455 06A0                       l1471 065A                       l2247 0465  
                     l2239 0446                       l2169 0501                       l2097 03C2  
                     l2089 03B3                       l2193 038E                       l2185 026D  
                     l2177 01CD                       l1449 07C8                       l1465 06C5  
                     l1457 06A3                       l1481 067A                       l1473 0660  
                     l2249 046A                       l1731 06F0                       l2099 03C8  
                     l2195 0399                       l2187 0278                       l2179 020C  
                     l1459 06AC                       l1483 0683                       l1475 066A  
                     l1467 064E                       l1741 0706                       l1733 06F9  
                     l1725 06CA                       l2189 0325                       l2197 0035  
                     l1485 0689                       l1477 0673                       l1469 0651  
                     l1751 070E                       l1743 0707                       l1735 0700  
                     l2199 003B                       l1487 0693                       l1479 0677  
                     l1753 070F                       l1745 0708                       l1737 0702  
                     l1761 0771                       l1729 06E3                       l1489 069C  
                     l1755 0713                       l1747 070C                       l1739 0705  
                     l1763 0773                       l1827 051E                       l1771 0751  
                     l1749 070D                       l1765 0776                       l1757 0766  
                     l1829 0560                       l1773 0758                       l1767 0777  
                     l1759 076E                       l1775 075A                       l1769 0778  
                     l1777 075C                       l1955 07DA                       l1971 0566  
                     l1891 063D                       l1883 0624                       l1779 075F  
                     l1957 0563                       l1893 0645                       l1885 062B  
                     l1983 056A                       l1959 0564                       l1895 064A  
                     l1887 0630                       l1977 0568                       l1889 0638  
                     l1995 056E                       l1989 056C                       STR_1 0727  
                     u1000 03B7                       u1001 03B6                       u1010 03C8  
                     u1011 03C7                       u1100 05E9                       u1101 05E8  
                     u1110 04E7                       u1030 03DA                       u1031 03D9  
                     u1120 050B                       u1025 03CC                       u1130 051D  
                     u1050 03EB                       u1131 051C                       u1051 03EA  
                     u1140 0041                       _CONT 0043                       u1045 03DB  
                     u1141 0040                       u1070 03FF                       u1071 03FE  
                     u1055 03E7                       u1207 06C0                       u1080 0404  
                     u1217 078B                       u1081 0403                       u1065 03F3  
                     u1090 05D3                       u1227 0479                       u1091 05D2  
                     u1237 048C                       u1157 0655                       u1247 049F  
                     u1167 066E                       u1257 04AE                       u1177 067E  
                     u1267 0747                       u1187 0697                       u1197 06A7  
                     _SIGN 0035                       _TMR0 0001          ?_Lcd_Write_String 0076  
                     _main 040E                       _pot2 0041                       btemp 007E  
                     start 0010         ??_Lcd_Write_String 0030            __end_of_Lcd_Cmd 0750  
        ___bmul@multiplier 0075                      ??_ISR 0070                      ?_main 0070  
          __end_of___awdiv 040E                      _ANSEL 0188            ___awdiv@divisor 0022  
                    i1l118 05C1                      i1l177 0324            ___awdiv@counter 0026  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      u70_20 02C5  
                    u70_21 02C4                      u71_20 02CF                      u71_21 02CE  
                    u72_20 02D9                      u64_20 0289                      u72_21 02D8  
                    u64_21 0288                      u73_20 02E3                      u65_20 0293  
                    u73_21 02E2                      u65_21 0292    __size_of_Lcd_Set_Cursor 002E  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      u74_20 02ED                      u66_20 029D  
                    u90_20 059D                      u74_21 02EC                      u66_21 029C  
                    u90_21 059C                      u75_20 02F7                      u67_20 02A7  
                    u91_20 05AD                      u75_21 02F6                      u67_21 02A6  
                    u91_21 05AC                      u76_20 0301                      u68_20 02B1  
                    u92_20 05BB                      u76_21 0300                      u68_21 02B0  
                    u92_21 05BA                      u77_20 030B                      u69_20 02BB  
                    u77_21 030A                      u69_21 02BA                      u78_20 0315  
                    u78_21 0314                      u79_20 031F                      u79_21 031E  
                    _TXREG 0019                      _Setup 06F0            __end_of_initOsc 06F0  
                    _envio 0284                      _temp2 0042                      _temp3 0079  
            _map_pot1$1355 0030                      pclath 000A            __end_of_spiInit 0766  
          __end_of_spiRead 07CC                      status 0003         __size_of_USARTconf 0016  
                    wtemp0 007E           __end_of_Lcd_Init 04D8           __end_of_Lcd_Port 07DF  
          __initialization 0013               __end_of_main 0473                     ??_main 0078  
                   ?_Setup 0070                     _ADCON1 009F                     ?_envio 0070  
         ___awdiv@dividend 0024                     _ANSELH 0189                     _CONT_C 003B  
                   _CONT_D 003C                     _CONT_U 003D                     i1l1701 02ED  
                   i1l1711 0305                     i1l1703 02F1                     i1l1721 031F  
                   i1l1713 030B                     i1l1705 02F7                     i1l1723 0323  
                   i1l1715 030F                     i1l1707 02FB                     i1l1717 0315  
                   i1l1709 0301                     i1l1661 0289                     i1l1901 05A1  
                   i1l1719 0319                     i1l1671 02A1                     i1l1663 028D  
                   i1l1911 05B1                     i1l1903 05A6                     i1l1681 02BB  
                   i1l1673 02A7                     i1l1665 0293                     i1l1913 05B5  
                   i1l1905 05A9                     i1l1691 02D3                     i1l1683 02BF  
                   i1l1675 02AB                     i1l1667 0297                     i1l1659 0284  
                   i1l1915 05BB                     i1l1907 05AD                     i1l1693 02D9  
                   i1l1685 02C5                     i1l1677 02B1                     i1l1669 029D  
                   i1l1917 05BE                     i1l1909 05AE                     i1l1695 02DD  
                   i1l1687 02C9                     i1l1679 02B5                     i1l1697 02E3  
                   i1l1689 02CF                     i1l1699 02E7                     i1l1897 0599  
                   i1l1899 059D                initOsc@frec 0073                  ??_Lcd_Cmd 0074  
                   _POT1_C 0038                     _POT1_D 0039                     _POT2_C 007A  
                   _POT2_D 0036                     _POT1_U 003A                     _POT2_U 0037  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0016                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
                   ___bmul 0792                     ___wmul 05F9                  ??___awdiv 0077  
         __end_of_map_cont 03A5                     _basura 0044           __end_of_map_pot1 0284  
         __end_of_map_pot2 018F                     _go_adc 0045                     _conver 051E  
         ___awdiv@quotient 0028                     _slave1 06A0                     _slave2 0677  
                   _slave3 064E                     _slaveT 0624          __end_of_USARTconf 077C  
                ??_initOsc 0073               __pdataCOMMON 007A                     saved_w 007E  
         __end_of_spiWrite 07D9                  ??_spiInit 0076                  ??_spiRead 0073  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@z 0022  
  __end_of__initialization 0031        ___bmul@multiplicand 0073             __pcstackCOMMON 0070  
            __end_of_Setup 0717               __pidataBANK0 07BA              __end_of_envio 0325  
           _Lcd_Set_Cursor 05CB                    ??_Setup 0073                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_envio 0070                 __pbssBANK0 003E  
               __pmaintext 040E                    ?___bmul 0073                    ?___wmul 0073  
               __pintentry 0004                    ?_conver 0070    __size_of_spiReceiveWait 0007  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 05F9                    ?_slave1 0070  
                  ?_slave2 0070                    ?_slave3 0070                    ?_slaveT 0070  
       __size_of_num_ascii 0037                 ??_Lcd_Init 0020                 ??_Lcd_Port 0073  
                  _SSPSTAT 0094                 __stringtab 0717                  ?_map_cont 0070  
                ?_map_pot1 0070                  ?_map_pot2 0070             _Lcd_Write_Char 077C  
                  _Lcd_Cmd 0736                  ?_spiWrite 0070            __size_of___bmul 0015  
                  ___awdiv 03A5            __size_of___wmul 002B            __size_of_conver 0044  
                _ANSELbits 0188                    _lec_ADC 003F            ?_Lcd_Set_Cursor 0077  
          __size_of_slave1 0029            __size_of_slave2 0029            __size_of_slave3 0029  
                  __ptext1 0750                    __ptext2 0624                    __ptext3 064E  
                  __ptext4 0677                    __ptext5 06A0                    __ptext6 07D3  
                  __ptext7 07C3                    __ptext8 07CC                    __ptext9 0035  
          __size_of_slaveT 002A               __size_of_ISR 0032                    _initOsc 06C9  
                  _spiInit 0750                    _spiRead 07C3                    _toggleS 003E  
   __end_of_Lcd_Write_Char 0792       end_of_initialization 0031                 ??_map_cont 002A  
               ??_map_pot1 002A                 ??_map_pot2 002A          __end_of_num_ascii 0599  
                _RCSTAbits 0018                 ??_spiWrite 0073                  Lcd_Port@a 0073  
                _PORTBbits 0006                  _PORTCbits 0007                  _USARTconf 0766  
              spiWrite@dat 0073            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076  
        Lcd_Write_String@i 0033                  _TXSTAbits 0098             _spiReceiveWait 07CC  
           __end_of___bmul 07A7             __end_of___wmul 0624           _Lcd_Write_String 04D8  
            __pidataCOMMON 07DF                _BAUDCTLbits 0187             __end_of_conver 0562  
           __end_of_slave1 06C9             __end_of_slave2 06A0             __end_of_slave3 0677  
           __end_of_slaveT 064E        start_initialization 0013                __end_of_ISR 05CB  
               ?_USARTconf 0070          __size_of_Lcd_Init 0065          __size_of_Lcd_Port 0006  
   __end_of_spiReceiveWait 07D3                   ??___bmul 0074                   ??___wmul 0077  
               init_fetch0 07A7                __pdataBANK0 0035                   ??_conver 0073  
          Lcd_Write_Char@a 0075                   ??_slave1 0074                   ??_slave2 0074  
                 ??_slave3 0074                   ??_slaveT 0076                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
        __size_of_map_cont 0080          __size_of_map_pot1 00F5          __size_of_map_pot2 015A  
          ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0078                   ?___awdiv 0022  
        __size_of_spiWrite 0006                  __pstrings 0717                   ?_initOsc 0070  
                 ?_spiInit 0073                   ?_spiRead 0070                ??_USARTconf 0073  
           __size_of_Setup 0027             conver@temporal 0020             __size_of_envio 00A1  
     spiInit@sTransmitEdge 0075          interrupt_function 0004             ___wmul@product 0020  
                 _PIE1bits 008C         spiInit@sDataSample 0073                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C                  _num_ascii 0562                 _ADCON0bits 001F  
              __stringbase 0726          ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 0473                   _Lcd_Port 07D9   __end_of_Lcd_Write_String 051E  
         __size_of_Lcd_Cmd 001A                 ?_num_ascii 0070           __size_of___awdiv 0069  
       __end_of__stringtab 0727           __size_of_initOsc 0027                   __ptext10 018F  
                 __ptext11 0325                   __ptext20 04D8                   __ptext12 0562  
                 __ptext21 077C                   __ptext13 05F9                   __ptext22 05CB  
                 __ptext14 0792                   __ptext23 0473                   __ptext15 03A5  
                 __ptext24 0736                   __ptext16 06C9                   __ptext25 07D9  
                 __ptext17 051E                   __ptext26 0599                   __ptext18 0766  
                 __ptext27 0284                   __ptext19 06F0           __size_of_spiInit 0016  
         __size_of_spiRead 0009                   _map_cont 0325                   _map_pot1 018F  
                 _map_pot2 0035              __size_of_main 0065                   _spiWrite 07D3  
                 _toggleTX 0078               spiInit@sType 0076          spiInit@sClockIdle 0074  
               _INTCONbits 000B                   init_ram0 07AB                   intlevel1 0000  
         ??_spiReceiveWait 0073               num_ascii@num 0073                  stringcode 0721  
               _OSCCONbits 008F                ??_num_ascii 0073         Lcd_Set_Cursor@temp 0021  
               _OPTION_REG 0081                   stringdir 0721                   stringtab 0717  
