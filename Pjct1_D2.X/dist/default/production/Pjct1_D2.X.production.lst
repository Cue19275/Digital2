

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Feb 12 01:30:36 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 09/04/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0105                     	;# 
   448  0107                     	;# 
   449  0108                     	;# 
   450  0109                     	;# 
   451  010C                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0187                     	;# 
   458  0188                     	;# 
   459  0189                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0000                     	;# 
   463  0001                     	;# 
   464  0002                     	;# 
   465  0003                     	;# 
   466  0004                     	;# 
   467  0005                     	;# 
   468  0006                     	;# 
   469  0007                     	;# 
   470  0008                     	;# 
   471  0009                     	;# 
   472  000A                     	;# 
   473  000B                     	;# 
   474  000C                     	;# 
   475  000D                     	;# 
   476  000E                     	;# 
   477  000E                     	;# 
   478  000F                     	;# 
   479  0010                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0013                     	;# 
   483  0014                     	;# 
   484  0015                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0017                     	;# 
   488  0018                     	;# 
   489  0019                     	;# 
   490  001A                     	;# 
   491  001B                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  001D                     	;# 
   495  001E                     	;# 
   496  001F                     	;# 
   497  0081                     	;# 
   498  0085                     	;# 
   499  0086                     	;# 
   500  0087                     	;# 
   501  0088                     	;# 
   502  0089                     	;# 
   503  008C                     	;# 
   504  008D                     	;# 
   505  008E                     	;# 
   506  008F                     	;# 
   507  0090                     	;# 
   508  0091                     	;# 
   509  0092                     	;# 
   510  0093                     	;# 
   511  0093                     	;# 
   512  0093                     	;# 
   513  0094                     	;# 
   514  0095                     	;# 
   515  0096                     	;# 
   516  0097                     	;# 
   517  0098                     	;# 
   518  0099                     	;# 
   519  009A                     	;# 
   520  009B                     	;# 
   521  009C                     	;# 
   522  009D                     	;# 
   523  009E                     	;# 
   524  009F                     	;# 
   525  0105                     	;# 
   526  0107                     	;# 
   527  0108                     	;# 
   528  0109                     	;# 
   529  010C                     	;# 
   530  010C                     	;# 
   531  010D                     	;# 
   532  010E                     	;# 
   533  010F                     	;# 
   534  0185                     	;# 
   535  0187                     	;# 
   536  0188                     	;# 
   537  0189                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  000E                     	;# 
   555  000E                     	;# 
   556  000F                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001D                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  0081                     	;# 
   576  0085                     	;# 
   577  0086                     	;# 
   578  0087                     	;# 
   579  0088                     	;# 
   580  0089                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  008E                     	;# 
   584  008F                     	;# 
   585  0090                     	;# 
   586  0091                     	;# 
   587  0092                     	;# 
   588  0093                     	;# 
   589  0093                     	;# 
   590  0093                     	;# 
   591  0094                     	;# 
   592  0095                     	;# 
   593  0096                     	;# 
   594  0097                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  009F                     	;# 
   603  0105                     	;# 
   604  0107                     	;# 
   605  0108                     	;# 
   606  0109                     	;# 
   607  010C                     	;# 
   608  010C                     	;# 
   609  010D                     	;# 
   610  010E                     	;# 
   611  010F                     	;# 
   612  0185                     	;# 
   613  0187                     	;# 
   614  0188                     	;# 
   615  0189                     	;# 
   616  018C                     	;# 
   617  018D                     	;# 
   618  0000                     	;# 
   619  0001                     	;# 
   620  0002                     	;# 
   621  0003                     	;# 
   622  0004                     	;# 
   623  0005                     	;# 
   624  0006                     	;# 
   625  0007                     	;# 
   626  0008                     	;# 
   627  0009                     	;# 
   628  000A                     	;# 
   629  000B                     	;# 
   630  000C                     	;# 
   631  000D                     	;# 
   632  000E                     	;# 
   633  000E                     	;# 
   634  000F                     	;# 
   635  0010                     	;# 
   636  0011                     	;# 
   637  0012                     	;# 
   638  0013                     	;# 
   639  0014                     	;# 
   640  0015                     	;# 
   641  0015                     	;# 
   642  0016                     	;# 
   643  0017                     	;# 
   644  0018                     	;# 
   645  0019                     	;# 
   646  001A                     	;# 
   647  001B                     	;# 
   648  001B                     	;# 
   649  001C                     	;# 
   650  001D                     	;# 
   651  001E                     	;# 
   652  001F                     	;# 
   653  0081                     	;# 
   654  0085                     	;# 
   655  0086                     	;# 
   656  0087                     	;# 
   657  0088                     	;# 
   658  0089                     	;# 
   659  008C                     	;# 
   660  008D                     	;# 
   661  008E                     	;# 
   662  008F                     	;# 
   663  0090                     	;# 
   664  0091                     	;# 
   665  0092                     	;# 
   666  0093                     	;# 
   667  0093                     	;# 
   668  0093                     	;# 
   669  0094                     	;# 
   670  0095                     	;# 
   671  0096                     	;# 
   672  0097                     	;# 
   673  0098                     	;# 
   674  0099                     	;# 
   675  009A                     	;# 
   676  009B                     	;# 
   677  009C                     	;# 
   678  009D                     	;# 
   679  009E                     	;# 
   680  009F                     	;# 
   681  0105                     	;# 
   682  0107                     	;# 
   683  0108                     	;# 
   684  0109                     	;# 
   685  010C                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010E                     	;# 
   689  010F                     	;# 
   690  0185                     	;# 
   691  0187                     	;# 
   692  0188                     	;# 
   693  0189                     	;# 
   694  018C                     	;# 
   695  018D                     	;# 
   696                           
   697                           	psect	idataBANK0
   698  0409                     __pidataBANK0:
   699                           
   700                           ;initializer for _POT2_C
   701  0409  3430               	retlw	48
   702                           
   703                           ;initializer for _POT2_D
   704  040A  3430               	retlw	48
   705                           
   706                           ;initializer for _POT2_U
   707  040B  3430               	retlw	48
   708                           
   709                           ;initializer for _POT1_C
   710  040C  3430               	retlw	48
   711                           
   712                           ;initializer for _POT1_D
   713  040D  3430               	retlw	48
   714                           
   715                           ;initializer for _POT1_U
   716  040E  3430               	retlw	48
   717                           
   718                           ;initializer for _CONT_C
   719  040F  3430               	retlw	48
   720                           
   721                           ;initializer for _CONT_D
   722  0410  3430               	retlw	48
   723                           
   724                           ;initializer for _CONT_U
   725  0411  3430               	retlw	48
   726  0013                     _SSPBUF	set	19
   727  0014                     _SSPCON	set	20
   728  0018                     _RCSTAbits	set	24
   729  0006                     _PORTBbits	set	6
   730  001F                     _ADCON0bits	set	31
   731  0001                     _TMR0	set	1
   732  000C                     _PIR1bits	set	12
   733  000B                     _INTCONbits	set	11
   734  0007                     _PORTCbits	set	7
   735  0008                     _PORTD	set	8
   736  0007                     _PORTC	set	7
   737  0006                     _PORTB	set	6
   738  0005                     _PORTA	set	5
   739  0094                     _SSPSTATbits	set	148
   740  0094                     _SSPSTAT	set	148
   741  0099                     _SPBRG	set	153
   742  009A                     _SPBRGH	set	154
   743  0098                     _TXSTAbits	set	152
   744  008F                     _OSCCONbits	set	143
   745  009F                     _ADCON1	set	159
   746  008C                     _PIE1bits	set	140
   747  0081                     _OPTION_REG	set	129
   748  0087                     _TRISC	set	135
   749  0086                     _TRISB	set	134
   750  0085                     _TRISA	set	133
   751  0088                     _TRISD	set	136
   752  043B                     _TRISC3	set	1083
   753  043D                     _TRISC5	set	1085
   754  0187                     _BAUDCTLbits	set	391
   755  0189                     _ANSELH	set	393
   756  0188                     _ANSELbits	set	392
   757  0188                     _ANSEL	set	392
   758                           
   759                           	psect	strings
   760  0365                     __pstrings:
   761  0365                     stringtab:
   762  0365                     __stringtab:
   763                           
   764                           ;	String table - string pointers are 1 byte each
   765  0365  1BFF               	btfsc	btemp+1,7
   766  0366  2B6F               	ljmp	stringcode
   767  0367  1383               	bcf	3,7
   768  0368  187F               	btfsc	btemp+1,0
   769  0369  1783               	bsf	3,7
   770  036A  0800               	movf	0,w
   771  036B  0A84               	incf	4,f
   772  036C  1903               	skipnz
   773  036D  0AFF               	incf	btemp+1,f
   774  036E  0008               	return
   775  036F                     stringcode:
   776  036F                     stringdir:
   777  036F  3003               	movlw	high stringdir
   778  0370  008A               	movwf	10
   779  0371  0804               	movf	4,w
   780  0372  0A84               	incf	4,f
   781  0373  0782               	addwf	2,f
   782  0374                     __stringbase:
   783  0374  3400               	retlw	0
   784  0375                     __end_of__stringtab:
   785  0375                     STR_1:
   786  0375  3453               	retlw	83	;'S'
   787  0376  3431               	retlw	49	;'1'
   788  0377  3420               	retlw	32	;' '
   789  0378  3420               	retlw	32	;' '
   790  0379  3420               	retlw	32	;' '
   791  037A  3420               	retlw	32	;' '
   792  037B  3453               	retlw	83	;'S'
   793  037C  3432               	retlw	50	;'2'
   794  037D  3420               	retlw	32	;' '
   795  037E  3420               	retlw	32	;' '
   796  037F  3420               	retlw	32	;' '
   797  0380  3420               	retlw	32	;' '
   798  0381  3453               	retlw	83	;'S'
   799  0382  3433               	retlw	51	;'3'
   800  0383  3400               	retlw	0
   801                           
   802                           	psect	cinit
   803  000F                     start_initialization:	
   804                           ; #config settings
   805                           
   806  000F                     __initialization:
   807                           
   808                           ; Initialize objects allocated to BANK0
   809  000F  1383               	bcf	3,7	;select IRP bank0
   810  0010  303B               	movlw	low (__pdataBANK0+9)
   811  0011  00FD               	movwf	btemp+-1
   812  0012  3004               	movlw	high __pidataBANK0
   813  0013  00FE               	movwf	btemp
   814  0014  3009               	movlw	low __pidataBANK0
   815  0015  00FF               	movwf	btemp+1
   816  0016  3032               	movlw	low __pdataBANK0
   817  0017  0084               	movwf	4
   818  0018  120A  118A  23FA  120A  118A  	fcall	init_ram0
   819                           
   820                           ; Clear objects allocated to BANK0
   821  001D  01BB               	clrf	__pbssBANK0& (0+127)
   822  001E  01BC               	clrf	(__pbssBANK0+1)& (0+127)
   823                           
   824                           ; Clear objects allocated to COMMON
   825  001F  01FA               	clrf	__pbssCOMMON& (0+127)
   826  0020  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   827  0021                     end_of_initialization:	
   828                           ;End of C runtime variable initialization code
   829                           
   830  0021                     __end_of__initialization:
   831  0021  0183               	clrf	3
   832  0022  120A  118A  2983   	ljmp	_main	;jump to C main() function
   833                           
   834                           	psect	bssCOMMON
   835  007A                     __pbssCOMMON:
   836  007A                     _basura:
   837  007A                     	ds	1
   838  007B                     _go_adc:
   839  007B                     	ds	1
   840                           
   841                           	psect	bssBANK0
   842  003B                     __pbssBANK0:
   843  003B                     _lec_ADC:
   844  003B                     	ds	1
   845  003C                     _temp2:
   846  003C                     	ds	1
   847                           
   848                           	psect	dataBANK0
   849  0032                     __pdataBANK0:
   850  0032                     _POT2_C:
   851  0032                     	ds	1
   852  0033                     _POT2_D:
   853  0033                     	ds	1
   854  0034                     _POT2_U:
   855  0034                     	ds	1
   856  0035                     _POT1_C:
   857  0035                     	ds	1
   858  0036                     _POT1_D:
   859  0036                     	ds	1
   860  0037                     _POT1_U:
   861  0037                     	ds	1
   862  0038                     _CONT_C:
   863  0038                     	ds	1
   864  0039                     _CONT_D:
   865  0039                     	ds	1
   866  003A                     _CONT_U:
   867  003A                     	ds	1
   868                           
   869                           	psect	inittext
   870  03F6                     init_fetch0:	
   871                           ;	Called with low address in FSR and high address in W
   872                           
   873  03F6  087E               	movf	btemp,w
   874  03F7  008A               	movwf	10
   875  03F8  087F               	movf	btemp+1,w
   876  03F9  0082               	movwf	2
   877  03FA                     init_ram0:	
   878                           ;Called with:
   879                           ;	high address of idata address in btemp 
   880                           ;	low address of idata address in btemp+1 
   881                           ;	low address of data in FSR
   882                           ;	high address + 1 of data in btemp-1
   883                           
   884  03FA  120A  118A  23F6  120A  118A  	fcall	init_fetch0
   885  03FF  0080               	movwf	0
   886  0400  0A84               	incf	4,f
   887  0401  0804               	movf	4,w
   888  0402  067D               	xorwf	btemp+-1,w
   889  0403  1903               	btfsc	3,2
   890  0404  3400               	retlw	0
   891  0405  0AFF               	incf	btemp+1,f
   892  0406  1903               	btfsc	3,2
   893  0407  0AFE               	incf	btemp,f
   894  0408  2BFA               	goto	init_ram0
   895                           
   896                           	psect	cstackCOMMON
   897  0070                     __pcstackCOMMON:
   898  0070                     ?_initOsc:
   899  0070                     ?_Setup:	
   900                           ; 1 bytes @ 0x0
   901                           
   902  0070                     ?_Lcd_Init:	
   903                           ; 1 bytes @ 0x0
   904                           
   905  0070                     ?_Lcd_Cmd:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ?_conver:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_map_pot1:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_slave1:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_spiWrite:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_spiRead:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_num_ascii:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_ISR:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ??_ISR:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_main:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_Lcd_Port:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_Lcd_Write_Char:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_spiReceiveWait:	
   942                           ; 1 bytes @ 0x0
   943                           
   944                           
   945                           ; 1 bytes @ 0x0
   946  0070                     	ds	2
   947  0072                     ??_initOsc:
   948  0072                     ??_Setup:	
   949                           ; 1 bytes @ 0x2
   950                           
   951  0072                     ?_spiInit:	
   952                           ; 1 bytes @ 0x2
   953                           
   954  0072                     ??_conver:	
   955                           ; 1 bytes @ 0x2
   956                           
   957  0072                     ??_spiWrite:	
   958                           ; 1 bytes @ 0x2
   959                           
   960  0072                     ??_spiRead:	
   961                           ; 1 bytes @ 0x2
   962                           
   963  0072                     ??_num_ascii:	
   964                           ; 1 bytes @ 0x2
   965                           
   966  0072                     ??_Lcd_Port:	
   967                           ; 1 bytes @ 0x2
   968                           
   969  0072                     ??_spiReceiveWait:	
   970                           ; 1 bytes @ 0x2
   971                           
   972  0072                     ?___bmul:	
   973                           ; 1 bytes @ 0x2
   974                           
   975  0072                     ?___wmul:	
   976                           ; 1 bytes @ 0x2
   977                           
   978  0072                     num_ascii@num:	
   979                           ; 2 bytes @ 0x2
   980                           
   981  0072                     Lcd_Port@a:	
   982                           ; 1 bytes @ 0x2
   983                           
   984  0072                     initOsc@frec:	
   985                           ; 1 bytes @ 0x2
   986                           
   987  0072                     spiInit@sDataSample:	
   988                           ; 1 bytes @ 0x2
   989                           
   990  0072                     spiWrite@dat:	
   991                           ; 1 bytes @ 0x2
   992                           
   993  0072                     ___bmul@multiplicand:	
   994                           ; 1 bytes @ 0x2
   995                           
   996  0072                     ___wmul@multiplier:	
   997                           ; 1 bytes @ 0x2
   998                           
   999                           
  1000                           ; 2 bytes @ 0x2
  1001  0072                     	ds	1
  1002  0073                     ??_Lcd_Cmd:
  1003  0073                     ??_slave1:	
  1004                           ; 1 bytes @ 0x3
  1005                           
  1006  0073                     ??_Lcd_Write_Char:	
  1007                           ; 1 bytes @ 0x3
  1008                           
  1009  0073                     ??___bmul:	
  1010                           ; 1 bytes @ 0x3
  1011                           
  1012  0073                     spiInit@sClockIdle:	
  1013                           ; 1 bytes @ 0x3
  1014                           
  1015  0073                     ___bmul@product:	
  1016                           ; 1 bytes @ 0x3
  1017                           
  1018                           
  1019                           ; 1 bytes @ 0x3
  1020  0073                     	ds	1
  1021  0074                     Lcd_Write_Char@a:
  1022  0074                     spiInit@sTransmitEdge:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025  0074                     ___bmul@multiplier:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028  0074                     ___wmul@multiplicand:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031                           
  1032                           ; 2 bytes @ 0x4
  1033  0074                     	ds	1
  1034  0075                     ??_spiInit:
  1035  0075                     ?_Lcd_Write_String:	
  1036                           ; 1 bytes @ 0x5
  1037                           
  1038  0075                     Lcd_Cmd@a:	
  1039                           ; 1 bytes @ 0x5
  1040                           
  1041  0075                     spiInit@sType:	
  1042                           ; 1 bytes @ 0x5
  1043                           
  1044  0075                     Lcd_Write_String@a:	
  1045                           ; 1 bytes @ 0x5
  1046                           
  1047                           
  1048                           ; 2 bytes @ 0x5
  1049  0075                     	ds	1
  1050  0076                     ??_Lcd_Init:
  1051  0076                     ?_Lcd_Set_Cursor:	
  1052                           ; 1 bytes @ 0x6
  1053                           
  1054  0076                     ??___wmul:	
  1055                           ; 1 bytes @ 0x6
  1056                           
  1057  0076                     Lcd_Set_Cursor@b:	
  1058                           ; 1 bytes @ 0x6
  1059                           
  1060  0076                     ___wmul@product:	
  1061                           ; 1 bytes @ 0x6
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0x6
  1065  0076                     	ds	1
  1066  0077                     ??_Lcd_Set_Cursor:
  1067  0077                     ??_Lcd_Write_String:	
  1068                           ; 1 bytes @ 0x7
  1069                           
  1070  0077                     Lcd_Set_Cursor@a:	
  1071                           ; 1 bytes @ 0x7
  1072                           
  1073                           
  1074                           ; 1 bytes @ 0x7
  1075  0077                     	ds	1
  1076  0078                     ??___awdiv:
  1077  0078                     Lcd_Set_Cursor@temp:	
  1078                           ; 1 bytes @ 0x8
  1079                           
  1080  0078                     _map_pot1$1320:	
  1081                           ; 1 bytes @ 0x8
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0x8
  1085  0078                     	ds	1
  1086  0079                     Lcd_Set_Cursor@z:
  1087                           
  1088                           ; 1 bytes @ 0x9
  1089  0079                     	ds	1
  1090  007A                     ??_main:
  1091                           
  1092                           	psect	cstackBANK0
  1093  0020                     __pcstackBANK0:	
  1094                           ; 1 bytes @ 0xA
  1095                           
  1096  0020                     ?___awdiv:
  1097  0020                     ___awdiv@divisor:	
  1098                           ; 2 bytes @ 0x0
  1099                           
  1100  0020                     conver@temporal:	
  1101                           ; 2 bytes @ 0x0
  1102                           
  1103                           
  1104                           ; 16 bytes @ 0x0
  1105  0020                     	ds	2
  1106  0022                     ___awdiv@dividend:
  1107                           
  1108                           ; 2 bytes @ 0x2
  1109  0022                     	ds	2
  1110  0024                     ___awdiv@counter:
  1111                           
  1112                           ; 1 bytes @ 0x4
  1113  0024                     	ds	1
  1114  0025                     ___awdiv@sign:
  1115                           
  1116                           ; 1 bytes @ 0x5
  1117  0025                     	ds	1
  1118  0026                     ___awdiv@quotient:
  1119                           
  1120                           ; 2 bytes @ 0x6
  1121  0026                     	ds	2
  1122  0028                     ??_map_pot1:
  1123                           
  1124                           ; 1 bytes @ 0x8
  1125  0028                     	ds	8
  1126  0030                     Lcd_Write_String@i:
  1127                           
  1128                           ; 2 bytes @ 0x10
  1129  0030                     	ds	2
  1130                           
  1131                           	psect	maintext
  1132  0183                     __pmaintext:	
  1133 ;;
  1134 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1135 ;;
  1136 ;; *************** function _main *****************
  1137 ;; Defined at:
  1138 ;;		line 81 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : B00/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0
  1155 ;;      Totals:         0       0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels required when called:    4
  1158 ;; This function calls:
  1159 ;;		_Lcd_Cmd
  1160 ;;		_Lcd_Init
  1161 ;;		_Lcd_Set_Cursor
  1162 ;;		_Lcd_Write_String
  1163 ;;		_Setup
  1164 ;;		_conver
  1165 ;;		_initOsc
  1166 ;;		_map_pot1
  1167 ;;		_slave1
  1168 ;;		_spiInit
  1169 ;; This function is called by:
  1170 ;;		Startup code after reset
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _main
  1176  0183                     _main:
  1177  0183                     l1665:	
  1178                           ;incstack = 0
  1179                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1180                           
  1181                           
  1182                           ;main.c: 82: TRISD = 0x00;
  1183  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1184  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1185  0185  0188               	clrf	8	;volatile
  1186  0186                     l1667:
  1187                           
  1188                           ;main.c: 83: initOsc(20);
  1189  0186  3014               	movlw	20
  1190  0187  120A  118A  2319  120A  118A  	fcall	_initOsc
  1191  018C                     l1669:
  1192                           
  1193                           ;main.c: 84: Setup();
  1194  018C  120A  118A  22C6  120A  118A  	fcall	_Setup
  1195  0191                     l1671:
  1196                           
  1197                           ;main.c: 85: spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
  1198  0191  01F2               	clrf	spiInit@sDataSample
  1199  0192  01F3               	clrf	spiInit@sClockIdle
  1200  0193  01F4               	clrf	spiInit@sTransmitEdge
  1201  0194  3020               	movlw	32
  1202  0195  120A  118A  23B5  120A  118A  	fcall	_spiInit
  1203  019A                     l1673:
  1204                           
  1205                           ;main.c: 87: Lcd_Init();
  1206  019A  120A  118A  2384  120A  118A  	fcall	_Lcd_Init
  1207  019F                     l1675:
  1208                           
  1209                           ;main.c: 88: Lcd_Cmd(0x8A);
  1210  019F  308A               	movlw	138
  1211  01A0  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  1212  01A5                     l1677:
  1213                           
  1214                           ;main.c: 90: Lcd_Set_Cursor(1,1);
  1215  01A5  01F6               	clrf	Lcd_Set_Cursor@b
  1216  01A6  0AF6               	incf	Lcd_Set_Cursor@b,f
  1217  01A7  3001               	movlw	1
  1218  01A8  120A  118A  229A  120A  118A  	fcall	_Lcd_Set_Cursor
  1219  01AD                     l1679:
  1220                           
  1221                           ;main.c: 91: Lcd_Write_String("S1    S2    S3");
  1222  01AD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1223  01AE  00F5               	movwf	Lcd_Write_String@a
  1224  01AF  3080               	movlw	128
  1225  01B0  00F6               	movwf	Lcd_Write_String@a+1
  1226  01B1  120A  118A  21D9  120A  118A  	fcall	_Lcd_Write_String
  1227  01B6                     l1681:
  1228                           
  1229                           ;main.c: 92: Lcd_Set_Cursor(2,1);
  1230  01B6  01F6               	clrf	Lcd_Set_Cursor@b
  1231  01B7  0AF6               	incf	Lcd_Set_Cursor@b,f
  1232  01B8  3002               	movlw	2
  1233  01B9  120A  118A  229A  120A  118A  	fcall	_Lcd_Set_Cursor
  1234  01BE                     l1683:
  1235                           
  1236                           ;main.c: 93: Lcd_Write_String(conver());
  1237  01BE  120A  118A  221F  120A  118A  	fcall	_conver
  1238  01C3  00F5               	movwf	Lcd_Write_String@a
  1239  01C4  3000               	movlw	0
  1240  01C5  00F6               	movwf	Lcd_Write_String@a+1
  1241  01C6  120A  118A  21D9  120A  118A  	fcall	_Lcd_Write_String
  1242  01CB                     l1685:
  1243                           
  1244                           ;main.c: 94: map_pot1();
  1245  01CB  120A  118A  2025  120A  118A  	fcall	_map_pot1
  1246  01D0                     l1687:
  1247                           
  1248                           ;main.c: 95: slave1();
  1249  01D0  120A  118A  22F0  120A  118A  	fcall	_slave1
  1250  01D5  29A5               	goto	l1677
  1251  01D6  120A  118A  280C   	ljmp	start
  1252  01D9                     __end_of_main:
  1253                           
  1254                           	psect	text1
  1255  03B5                     __ptext1:	
  1256 ;; *************** function _spiInit *****************
  1257 ;; Defined at:
  1258 ;;		line 12 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  sType           1    wreg     enum E1265
  1261 ;;  sDataSample     1    2[COMMON] enum E1273
  1262 ;;  sClockIdle      1    3[COMMON] enum E1277
  1263 ;;  sTransmitEdg    1    4[COMMON] enum E1281
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  sType           1    5[COMMON] enum E1265
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         3       0       0       0       0
  1276 ;;      Locals:         1       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0
  1278 ;;      Totals:         4       0       0       0       0
  1279 ;;Total ram usage:        4 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    1
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _spiInit
  1291  03B5                     _spiInit:
  1292                           
  1293                           ;incstack = 0
  1294                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1295                           ;spiInit@sType stored from wreg
  1296  03B5  00F5               	movwf	spiInit@sType
  1297  03B6                     l1357:
  1298                           
  1299                           ;SPI.c: 14: TRISC5 = 0;
  1300  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  1301  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  1302  03B8  1287               	bcf	7,5	;volatile
  1303                           
  1304                           ;SPI.c: 15: if(sType & 0b00000100)
  1305  03B9  1D75               	btfss	spiInit@sType,2
  1306  03BA  2BBC               	goto	u411
  1307  03BB  2BBD               	goto	u410
  1308  03BC                     u411:
  1309  03BC  2BC1               	goto	l1363
  1310  03BD                     u410:
  1311  03BD                     l1359:
  1312                           
  1313                           ;SPI.c: 16: {;SPI.c: 17: SSPSTAT = sTransmitEdge;
  1314  03BD  0874               	movf	spiInit@sTransmitEdge,w
  1315  03BE  0094               	movwf	20	;volatile
  1316  03BF                     l1361:
  1317                           
  1318                           ;SPI.c: 18: TRISC3 = 1;
  1319  03BF  1587               	bsf	7,3	;volatile
  1320                           
  1321                           ;SPI.c: 19: }
  1322  03C0  2BC5               	goto	l239
  1323  03C1                     l1363:
  1324                           
  1325                           ;SPI.c: 20: else;SPI.c: 21: {;SPI.c: 22: SSPSTAT = sDataSample | sTransmitEdge;
  1326  03C1  0872               	movf	spiInit@sDataSample,w
  1327  03C2  0474               	iorwf	spiInit@sTransmitEdge,w
  1328  03C3  0094               	movwf	20	;volatile
  1329  03C4                     l1365:
  1330                           
  1331                           ;SPI.c: 23: TRISC3 = 0;
  1332  03C4  1187               	bcf	7,3	;volatile
  1333  03C5                     l239:
  1334                           
  1335                           ;SPI.c: 24: };SPI.c: 26: SSPCON = sType | sClockIdle;
  1336  03C5  0875               	movf	spiInit@sType,w
  1337  03C6  0473               	iorwf	spiInit@sClockIdle,w
  1338  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1339  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1340  03C9  0094               	movwf	20	;volatile
  1341  03CA                     l240:
  1342  03CA  0008               	return
  1343  03CB                     __end_of_spiInit:
  1344                           
  1345                           	psect	text2
  1346  02F0                     __ptext2:	
  1347 ;; *************** function _slave1 *****************
  1348 ;; Defined at:
  1349 ;;		line 143 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0
  1365 ;;      Temps:          2       0       0       0       0
  1366 ;;      Totals:         2       0       0       0       0
  1367 ;;Total ram usage:        2 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    3
  1370 ;; This function calls:
  1371 ;;		_spiRead
  1372 ;;		_spiWrite
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           
  1379                           ;psect for function _slave1
  1380  02F0                     _slave1:
  1381  02F0                     l1415:	
  1382                           ;incstack = 0
  1383                           ; Regs used in _slave1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1384                           
  1385                           
  1386                           ;main.c: 144: PORTCbits.RC2 = 0;
  1387  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  1388  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  1389  02F2  1107               	bcf	7,2	;volatile
  1390  02F3                     l1417:
  1391                           
  1392                           ;main.c: 145: _delay((unsigned long)((1)*(40000000/4000.0)));
  1393  02F3  300D               	movlw	13
  1394  02F4  00F4               	movwf	??_slave1+1
  1395  02F5  30FB               	movlw	251
  1396  02F6  00F3               	movwf	??_slave1
  1397  02F7                     u687:
  1398  02F7  0BF3               	decfsz	??_slave1,f
  1399  02F8  2AF7               	goto	u687
  1400  02F9  0BF4               	decfsz	??_slave1+1,f
  1401  02FA  2AF7               	goto	u687
  1402  02FB  2AFC               	nop2
  1403  02FC                     l1419:
  1404                           
  1405                           ;main.c: 147: spiWrite(basura);
  1406  02FC  3000               	movlw	0
  1407  02FD  120A  118A  2429  120A  118A  	fcall	_spiWrite
  1408  0302                     l1421:
  1409                           
  1410                           ;main.c: 148: lec_ADC = spiRead();
  1411  0302  120A  118A  2412  120A  118A  	fcall	_spiRead
  1412  0307  00FF               	movwf	btemp+1
  1413  0308  087F               	movf	btemp+1,w
  1414  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1415  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1416  030B  00BB               	movwf	_lec_ADC
  1417  030C                     l1423:
  1418                           
  1419                           ;main.c: 150: _delay((unsigned long)((1)*(40000000/4000.0)));
  1420  030C  300D               	movlw	13
  1421  030D  00F4               	movwf	??_slave1+1
  1422  030E  30FB               	movlw	251
  1423  030F  00F3               	movwf	??_slave1
  1424  0310                     u697:
  1425  0310  0BF3               	decfsz	??_slave1,f
  1426  0311  2B10               	goto	u697
  1427  0312  0BF4               	decfsz	??_slave1+1,f
  1428  0313  2B10               	goto	u697
  1429  0314  2B15               	nop2
  1430  0315                     l1425:
  1431                           
  1432                           ;main.c: 151: PORTCbits.RC2 = 1;
  1433  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0317  1507               	bsf	7,2	;volatile
  1436  0318                     l107:
  1437  0318  0008               	return
  1438  0319                     __end_of_slave1:
  1439                           
  1440                           	psect	text3
  1441  0429                     __ptext3:	
  1442 ;; *************** function _spiWrite *****************
  1443 ;; Defined at:
  1444 ;;		line 34 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  dat             1    wreg     unsigned char 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  dat             1    2[COMMON] unsigned char 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         1       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0
  1461 ;;      Totals:         1       0       0       0       0
  1462 ;;Total ram usage:        1 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_slave1
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           
  1473                           ;psect for function _spiWrite
  1474  0429                     _spiWrite:
  1475                           
  1476                           ;incstack = 0
  1477                           ; Regs used in _spiWrite: [wreg]
  1478                           ;spiWrite@dat stored from wreg
  1479  0429  00F2               	movwf	spiWrite@dat
  1480  042A                     l1203:
  1481                           
  1482                           ;SPI.c: 36: SSPBUF = dat;
  1483  042A  0872               	movf	spiWrite@dat,w
  1484  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1485  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1486  042D  0093               	movwf	19	;volatile
  1487  042E                     l249:
  1488  042E  0008               	return
  1489  042F                     __end_of_spiWrite:
  1490                           
  1491                           	psect	text4
  1492  0412                     __ptext4:	
  1493 ;; *************** function _spiRead *****************
  1494 ;; Defined at:
  1495 ;;		line 49 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      unsigned char 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0
  1512 ;;      Totals:         0       0       0       0       0
  1513 ;;Total ram usage:        0 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    2
  1516 ;; This function calls:
  1517 ;;		_spiReceiveWait
  1518 ;; This function is called by:
  1519 ;;		_slave1
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function _spiRead
  1525  0412                     _spiRead:
  1526  0412                     l1205:	
  1527                           ;incstack = 0
  1528                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1529                           
  1530                           
  1531                           ;SPI.c: 51: spiReceiveWait();
  1532  0412  120A  118A  241B  120A  118A  	fcall	_spiReceiveWait
  1533  0417                     l1207:
  1534                           
  1535                           ;SPI.c: 52: return(SSPBUF);
  1536  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0419  0813               	movf	19,w	;volatile
  1539  041A                     l257:
  1540  041A  0008               	return
  1541  041B                     __end_of_spiRead:
  1542                           
  1543                           	psect	text5
  1544  041B                     __ptext5:	
  1545 ;; *************** function _spiReceiveWait *****************
  1546 ;; Defined at:
  1547 ;;		line 29 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		None
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_spiRead
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           
  1576                           ;psect for function _spiReceiveWait
  1577  041B                     _spiReceiveWait:
  1578  041B                     l1201:	
  1579                           ;incstack = 0
  1580                           ; Regs used in _spiReceiveWait: []
  1581                           
  1582  041B                     l243:	
  1583                           ;SPI.c: 31: while ( !SSPSTATbits.BF );
  1584                           
  1585  041B  1683               	bsf	3,5	;RP0=1, select bank1
  1586  041C  1303               	bcf	3,6	;RP1=0, select bank1
  1587  041D  1C14               	btfss	20,0	;volatile
  1588  041E  2C20               	goto	u241
  1589  041F  2C21               	goto	u240
  1590  0420                     u241:
  1591  0420  2C1B               	goto	l243
  1592  0421                     u240:
  1593  0421                     l246:
  1594  0421  0008               	return
  1595  0422                     __end_of_spiReceiveWait:
  1596                           
  1597                           	psect	text6
  1598  0025                     __ptext6:	
  1599 ;; *************** function _map_pot1 *****************
  1600 ;; Defined at:
  1601 ;;		line 156 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         0       0       0       0       0
  1616 ;;      Locals:         2       0       0       0       0
  1617 ;;      Temps:          0       6       0       0       0
  1618 ;;      Totals:         2       6       0       0       0
  1619 ;;Total ram usage:        8 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    2
  1622 ;; This function calls:
  1623 ;;		___awdiv
  1624 ;;		___bmul
  1625 ;;		___wmul
  1626 ;;		_num_ascii
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _map_pot1
  1634  0025                     _map_pot1:
  1635  0025                     l1647:	
  1636                           ;incstack = 0
  1637                           ; Regs used in _map_pot1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1638                           
  1639                           
  1640                           ;main.c: 157: temp2 = lec_ADC;
  1641  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0027  083B               	movf	_lec_ADC,w
  1644  0028  00FF               	movwf	btemp+1
  1645  0029  087F               	movf	btemp+1,w
  1646  002A  00BC               	movwf	_temp2
  1647  002B                     l1649:
  1648                           
  1649                           ;main.c: 158: POT1_C = ((temp2*100)/51)/100;
  1650  002B  3033               	movlw	51
  1651  002C  00A0               	movwf	___awdiv@divisor
  1652  002D  3000               	movlw	0
  1653  002E  00A1               	movwf	___awdiv@divisor+1
  1654  002F  083C               	movf	_temp2,w
  1655  0030  00A8               	movwf	??_map_pot1
  1656  0031  01A9               	clrf	??_map_pot1+1
  1657  0032  0828               	movf	??_map_pot1,w
  1658  0033  00F2               	movwf	___wmul@multiplier
  1659  0034  0829               	movf	??_map_pot1+1,w
  1660  0035  00F3               	movwf	___wmul@multiplier+1
  1661  0036  3064               	movlw	100
  1662  0037  00F4               	movwf	___wmul@multiplicand
  1663  0038  3000               	movlw	0
  1664  0039  00F5               	movwf	___wmul@multiplicand+1
  1665  003A  120A  118A  2340  120A  118A  	fcall	___wmul
  1666  003F  0873               	movf	?___wmul+1,w
  1667  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0042  00A3               	movwf	___awdiv@dividend+1
  1670  0043  0872               	movf	?___wmul,w
  1671  0044  00A2               	movwf	___awdiv@dividend
  1672  0045  120A  118A  211A  120A  118A  	fcall	___awdiv
  1673  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1674  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1675  004C  0821               	movf	?___awdiv+1,w
  1676  004D  00F9               	movwf	_map_pot1$1320+1
  1677  004E  0820               	movf	?___awdiv,w
  1678  004F  00F8               	movwf	_map_pot1$1320
  1679  0050                     l1651:
  1680                           
  1681                           ;main.c: 158: POT1_C = ((temp2*100)/51)/100;
  1682  0050  3064               	movlw	100
  1683  0051  00A0               	movwf	___awdiv@divisor
  1684  0052  3000               	movlw	0
  1685  0053  00A1               	movwf	___awdiv@divisor+1
  1686  0054  0879               	movf	_map_pot1$1320+1,w
  1687  0055  00A3               	movwf	___awdiv@dividend+1
  1688  0056  0878               	movf	_map_pot1$1320,w
  1689  0057  00A2               	movwf	___awdiv@dividend
  1690  0058  120A  118A  211A  120A  118A  	fcall	___awdiv
  1691  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1692  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1693  005F  0820               	movf	?___awdiv,w
  1694  0060  00FF               	movwf	btemp+1
  1695  0061  087F               	movf	btemp+1,w
  1696  0062  00B5               	movwf	_POT1_C
  1697  0063                     l1653:
  1698                           
  1699                           ;main.c: 159: POT1_D = (((temp2*100)/51)-(POT1_C*100))/10;
  1700  0063  3033               	movlw	51
  1701  0064  00A0               	movwf	___awdiv@divisor
  1702  0065  3000               	movlw	0
  1703  0066  00A1               	movwf	___awdiv@divisor+1
  1704  0067  083C               	movf	_temp2,w
  1705  0068  00A8               	movwf	??_map_pot1
  1706  0069  01A9               	clrf	??_map_pot1+1
  1707  006A  0828               	movf	??_map_pot1,w
  1708  006B  00F2               	movwf	___wmul@multiplier
  1709  006C  0829               	movf	??_map_pot1+1,w
  1710  006D  00F3               	movwf	___wmul@multiplier+1
  1711  006E  3064               	movlw	100
  1712  006F  00F4               	movwf	___wmul@multiplicand
  1713  0070  3000               	movlw	0
  1714  0071  00F5               	movwf	___wmul@multiplicand+1
  1715  0072  120A  118A  2340  120A  118A  	fcall	___wmul
  1716  0077  0873               	movf	?___wmul+1,w
  1717  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1719  007A  00A3               	movwf	___awdiv@dividend+1
  1720  007B  0872               	movf	?___wmul,w
  1721  007C  00A2               	movwf	___awdiv@dividend
  1722  007D  120A  118A  211A  120A  118A  	fcall	___awdiv
  1723  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0084  0820               	movf	?___awdiv,w
  1726  0085  00AA               	movwf	??_map_pot1+2
  1727  0086  0821               	movf	?___awdiv+1,w
  1728  0087  00AB               	movwf	??_map_pot1+3
  1729  0088  0835               	movf	_POT1_C,w
  1730  0089  00AC               	movwf	??_map_pot1+4
  1731  008A  01AD               	clrf	??_map_pot1+5
  1732  008B  082C               	movf	??_map_pot1+4,w
  1733  008C  00F2               	movwf	___wmul@multiplier
  1734  008D  082D               	movf	??_map_pot1+5,w
  1735  008E  00F3               	movwf	___wmul@multiplier+1
  1736  008F  309C               	movlw	156
  1737  0090  00F4               	movwf	___wmul@multiplicand
  1738  0091  30FF               	movlw	255
  1739  0092  00F5               	movwf	___wmul@multiplicand+1
  1740  0093  120A  118A  2340  120A  118A  	fcall	___wmul
  1741  0098  0872               	movf	?___wmul,w
  1742  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1743  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1744  009B  072A               	addwf	??_map_pot1+2,w
  1745  009C  00F8               	movwf	_map_pot1$1320
  1746  009D  0873               	movf	?___wmul+1,w
  1747  009E  1803               	skipnc
  1748  009F  0A73               	incf	?___wmul+1,w
  1749  00A0  072B               	addwf	??_map_pot1+3,w
  1750  00A1  00F9               	movwf	_map_pot1$1320+1
  1751  00A2                     l1655:
  1752                           
  1753                           ;main.c: 159: POT1_D = (((temp2*100)/51)-(POT1_C*100))/10;
  1754  00A2  300A               	movlw	10
  1755  00A3  00A0               	movwf	___awdiv@divisor
  1756  00A4  3000               	movlw	0
  1757  00A5  00A1               	movwf	___awdiv@divisor+1
  1758  00A6  0879               	movf	_map_pot1$1320+1,w
  1759  00A7  00A3               	movwf	___awdiv@dividend+1
  1760  00A8  0878               	movf	_map_pot1$1320,w
  1761  00A9  00A2               	movwf	___awdiv@dividend
  1762  00AA  120A  118A  211A  120A  118A  	fcall	___awdiv
  1763  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1764  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1765  00B1  0820               	movf	?___awdiv,w
  1766  00B2  00FF               	movwf	btemp+1
  1767  00B3  087F               	movf	btemp+1,w
  1768  00B4  00B6               	movwf	_POT1_D
  1769  00B5                     l1657:
  1770                           
  1771                           ;main.c: 160: POT1_U = (((temp2*100)/51)-(POT1_C*100)-(POT1_D*10));
  1772  00B5  3033               	movlw	51
  1773  00B6  00A0               	movwf	___awdiv@divisor
  1774  00B7  3000               	movlw	0
  1775  00B8  00A1               	movwf	___awdiv@divisor+1
  1776  00B9  083C               	movf	_temp2,w
  1777  00BA  00A8               	movwf	??_map_pot1
  1778  00BB  01A9               	clrf	??_map_pot1+1
  1779  00BC  0828               	movf	??_map_pot1,w
  1780  00BD  00F2               	movwf	___wmul@multiplier
  1781  00BE  0829               	movf	??_map_pot1+1,w
  1782  00BF  00F3               	movwf	___wmul@multiplier+1
  1783  00C0  3064               	movlw	100
  1784  00C1  00F4               	movwf	___wmul@multiplicand
  1785  00C2  3000               	movlw	0
  1786  00C3  00F5               	movwf	___wmul@multiplicand+1
  1787  00C4  120A  118A  2340  120A  118A  	fcall	___wmul
  1788  00C9  0873               	movf	?___wmul+1,w
  1789  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1790  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1791  00CC  00A3               	movwf	___awdiv@dividend+1
  1792  00CD  0872               	movf	?___wmul,w
  1793  00CE  00A2               	movwf	___awdiv@dividend
  1794  00CF  120A  118A  211A  120A  118A  	fcall	___awdiv
  1795  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1796  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1797  00D6  0820               	movf	?___awdiv,w
  1798  00D7  00AA               	movwf	??_map_pot1+2
  1799  00D8  0821               	movf	?___awdiv+1,w
  1800  00D9  00AB               	movwf	??_map_pot1+3
  1801  00DA  309C               	movlw	156
  1802  00DB  00FF               	movwf	btemp+1
  1803  00DC  087F               	movf	btemp+1,w
  1804  00DD  00F2               	movwf	___bmul@multiplicand
  1805  00DE  0835               	movf	_POT1_C,w
  1806  00DF  120A  118A  23E1  120A  118A  	fcall	___bmul
  1807  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1808  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1809  00E6  00AC               	movwf	??_map_pot1+4
  1810  00E7  30F6               	movlw	246
  1811  00E8  00FF               	movwf	btemp+1
  1812  00E9  087F               	movf	btemp+1,w
  1813  00EA  00F2               	movwf	___bmul@multiplicand
  1814  00EB  0836               	movf	_POT1_D,w
  1815  00EC  120A  118A  23E1  120A  118A  	fcall	___bmul
  1816  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1817  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1818  00F3  072C               	addwf	??_map_pot1+4,w
  1819  00F4  072A               	addwf	??_map_pot1+2,w
  1820  00F5  00FF               	movwf	btemp+1
  1821  00F6  087F               	movf	btemp+1,w
  1822  00F7  00B7               	movwf	_POT1_U
  1823  00F8                     l1659:
  1824                           
  1825                           ;main.c: 161: POT1_C = num_ascii(POT1_C);
  1826  00F8  0835               	movf	_POT1_C,w
  1827  00F9  120A  118A  2263  120A  118A  	fcall	_num_ascii
  1828  00FE  00FF               	movwf	btemp+1
  1829  00FF  087F               	movf	btemp+1,w
  1830  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1831  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1832  0102  00B5               	movwf	_POT1_C
  1833  0103                     l1661:
  1834                           
  1835                           ;main.c: 162: POT1_D = num_ascii(POT1_D);
  1836  0103  0836               	movf	_POT1_D,w
  1837  0104  120A  118A  2263  120A  118A  	fcall	_num_ascii
  1838  0109  00FF               	movwf	btemp+1
  1839  010A  087F               	movf	btemp+1,w
  1840  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1841  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1842  010D  00B6               	movwf	_POT1_D
  1843  010E                     l1663:
  1844                           
  1845                           ;main.c: 163: POT1_U = num_ascii(POT1_U);
  1846  010E  0837               	movf	_POT1_U,w
  1847  010F  120A  118A  2263  120A  118A  	fcall	_num_ascii
  1848  0114  00FF               	movwf	btemp+1
  1849  0115  087F               	movf	btemp+1,w
  1850  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0118  00B7               	movwf	_POT1_U
  1853  0119                     l110:
  1854  0119  0008               	return
  1855  011A                     __end_of_map_pot1:
  1856                           
  1857                           	psect	text7
  1858  0263                     __ptext7:	
  1859 ;; *************** function _num_ascii *****************
  1860 ;; Defined at:
  1861 ;;		line 3 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/ASCII_NUM.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  num             1    wreg     unsigned char 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  num             1    2[COMMON] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      unsigned char 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         0       0       0       0       0
  1876 ;;      Locals:         1       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0
  1878 ;;      Totals:         1       0       0       0       0
  1879 ;;Total ram usage:        1 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    1
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_map_pot1
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           
  1890                           ;psect for function _num_ascii
  1891  0263                     _num_ascii:
  1892                           
  1893                           ;incstack = 0
  1894                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  1895                           ;num_ascii@num stored from wreg
  1896  0263  00F2               	movwf	num_ascii@num
  1897  0264                     l1463:
  1898                           
  1899                           ;ASCII_NUM.c: 4: switch(num){
  1900  0264  2A79               	goto	l1533
  1901  0265                     l1465:
  1902                           
  1903                           ;ASCII_NUM.c: 6: return 0x30;
  1904  0265  3030               	movlw	48
  1905  0266  2A99               	goto	l147
  1906  0267                     l1477:
  1907                           
  1908                           ;ASCII_NUM.c: 14: return 0x31;
  1909  0267  3031               	movlw	49
  1910  0268  2A99               	goto	l147
  1911  0269                     l1483:
  1912                           
  1913                           ;ASCII_NUM.c: 18: return 0x32;
  1914  0269  3032               	movlw	50
  1915  026A  2A99               	goto	l147
  1916  026B                     l1489:
  1917                           
  1918                           ;ASCII_NUM.c: 22: return 0x33;
  1919  026B  3033               	movlw	51
  1920  026C  2A99               	goto	l147
  1921  026D                     l1495:
  1922                           
  1923                           ;ASCII_NUM.c: 26: return 0x34;
  1924  026D  3034               	movlw	52
  1925  026E  2A99               	goto	l147
  1926  026F                     l1501:
  1927                           
  1928                           ;ASCII_NUM.c: 30: return 0x35;
  1929  026F  3035               	movlw	53
  1930  0270  2A99               	goto	l147
  1931  0271                     l1507:
  1932                           
  1933                           ;ASCII_NUM.c: 34: return 0x36;
  1934  0271  3036               	movlw	54
  1935  0272  2A99               	goto	l147
  1936  0273                     l1513:
  1937                           
  1938                           ;ASCII_NUM.c: 38: return 0x37;
  1939  0273  3037               	movlw	55
  1940  0274  2A99               	goto	l147
  1941  0275                     l1519:
  1942                           
  1943                           ;ASCII_NUM.c: 42: return 0x38;
  1944  0275  3038               	movlw	56
  1945  0276  2A99               	goto	l147
  1946  0277                     l1525:
  1947                           
  1948                           ;ASCII_NUM.c: 46: return 0x39;
  1949  0277  3039               	movlw	57
  1950  0278  2A99               	goto	l147
  1951  0279                     l1533:
  1952  0279  0872               	movf	num_ascii@num,w
  1953                           
  1954                           ; Switch size 1, requested type "simple"
  1955                           ; Number of cases is 10, Range of values is 0 to 9
  1956                           ; switch strategies available:
  1957                           ; Name         Instructions Cycles
  1958                           ; simple_byte           31    16 (average)
  1959                           ; direct_byte           38     8 (fixed)
  1960                           ; jumptable            260     6 (fixed)
  1961                           ;	Chosen strategy is simple_byte
  1962  027A  3A00               	xorlw	0	; case 0
  1963  027B  1903               	skipnz
  1964  027C  2A65               	goto	l1465
  1965  027D  3A01               	xorlw	1	; case 1
  1966  027E  1903               	skipnz
  1967  027F  2A67               	goto	l1477
  1968  0280  3A03               	xorlw	3	; case 2
  1969  0281  1903               	skipnz
  1970  0282  2A69               	goto	l1483
  1971  0283  3A01               	xorlw	1	; case 3
  1972  0284  1903               	skipnz
  1973  0285  2A6B               	goto	l1489
  1974  0286  3A07               	xorlw	7	; case 4
  1975  0287  1903               	skipnz
  1976  0288  2A6D               	goto	l1495
  1977  0289  3A01               	xorlw	1	; case 5
  1978  028A  1903               	skipnz
  1979  028B  2A6F               	goto	l1501
  1980  028C  3A03               	xorlw	3	; case 6
  1981  028D  1903               	skipnz
  1982  028E  2A71               	goto	l1507
  1983  028F  3A01               	xorlw	1	; case 7
  1984  0290  1903               	skipnz
  1985  0291  2A73               	goto	l1513
  1986  0292  3A0F               	xorlw	15	; case 8
  1987  0293  1903               	skipnz
  1988  0294  2A75               	goto	l1519
  1989  0295  3A01               	xorlw	1	; case 9
  1990  0296  1903               	skipnz
  1991  0297  2A77               	goto	l1525
  1992  0298  2A65               	goto	l1465
  1993  0299                     l147:
  1994  0299  0008               	return
  1995  029A                     __end_of_num_ascii:
  1996                           
  1997                           	psect	text8
  1998  0340                     __ptext8:	
  1999 ;; *************** function ___wmul *****************
  2000 ;; Defined at:
  2001 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  multiplier      2    2[COMMON] unsigned int 
  2004 ;;  multiplicand    2    4[COMMON] unsigned int 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  product         2    6[COMMON] unsigned int 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  2    2[COMMON] unsigned int 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         4       0       0       0       0
  2017 ;;      Locals:         2       0       0       0       0
  2018 ;;      Temps:          0       0       0       0       0
  2019 ;;      Totals:         6       0       0       0       0
  2020 ;;Total ram usage:        6 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_map_pot1
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function ___wmul
  2032  0340                     ___wmul:
  2033  0340                     l1547:	
  2034                           ;incstack = 0
  2035                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2036                           
  2037  0340  01F6               	clrf	___wmul@product
  2038  0341  01F7               	clrf	___wmul@product+1
  2039  0342                     l1549:
  2040  0342  1C72               	btfss	___wmul@multiplier,0
  2041  0343  2B45               	goto	u471
  2042  0344  2B46               	goto	u470
  2043  0345                     u471:
  2044  0345  2B4C               	goto	l343
  2045  0346                     u470:
  2046  0346                     l1551:
  2047  0346  0874               	movf	___wmul@multiplicand,w
  2048  0347  07F6               	addwf	___wmul@product,f
  2049  0348  1803               	skipnc
  2050  0349  0AF7               	incf	___wmul@product+1,f
  2051  034A  0875               	movf	___wmul@multiplicand+1,w
  2052  034B  07F7               	addwf	___wmul@product+1,f
  2053  034C                     l343:
  2054  034C  3001               	movlw	1
  2055  034D                     u485:
  2056  034D  1003               	clrc
  2057  034E  0DF4               	rlf	___wmul@multiplicand,f
  2058  034F  0DF5               	rlf	___wmul@multiplicand+1,f
  2059  0350  3EFF               	addlw	-1
  2060  0351  1D03               	skipz
  2061  0352  2B4D               	goto	u485
  2062  0353                     l1553:
  2063  0353  3001               	movlw	1
  2064  0354                     u495:
  2065  0354  1003               	clrc
  2066  0355  0CF3               	rrf	___wmul@multiplier+1,f
  2067  0356  0CF2               	rrf	___wmul@multiplier,f
  2068  0357  3EFF               	addlw	-1
  2069  0358  1D03               	skipz
  2070  0359  2B54               	goto	u495
  2071  035A                     l1555:
  2072  035A  0872               	movf	___wmul@multiplier,w
  2073  035B  0473               	iorwf	___wmul@multiplier+1,w
  2074  035C  1D03               	btfss	3,2
  2075  035D  2B5F               	goto	u501
  2076  035E  2B60               	goto	u500
  2077  035F                     u501:
  2078  035F  2B42               	goto	l1549
  2079  0360                     u500:
  2080  0360                     l1557:
  2081  0360  0877               	movf	___wmul@product+1,w
  2082  0361  00F3               	movwf	?___wmul+1
  2083  0362  0876               	movf	___wmul@product,w
  2084  0363  00F2               	movwf	?___wmul
  2085  0364                     l345:
  2086  0364  0008               	return
  2087  0365                     __end_of___wmul:
  2088                           
  2089                           	psect	text9
  2090  03E1                     __ptext9:	
  2091 ;; *************** function ___bmul *****************
  2092 ;; Defined at:
  2093 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  multiplier      1    wreg     unsigned char 
  2096 ;;  multiplicand    1    2[COMMON] unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  multiplier      1    4[COMMON] unsigned char 
  2099 ;;  product         1    3[COMMON] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      unsigned char 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0, btemp+1
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2109 ;;      Params:         1       0       0       0       0
  2110 ;;      Locals:         2       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0
  2112 ;;      Totals:         3       0       0       0       0
  2113 ;;Total ram usage:        3 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    1
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_map_pot1
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           
  2124                           ;psect for function ___bmul
  2125  03E1                     ___bmul:
  2126                           
  2127                           ;incstack = 0
  2128                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2129                           ;___bmul@multiplier stored from wreg
  2130  03E1  00F4               	movwf	___bmul@multiplier
  2131  03E2                     l1561:
  2132  03E2  01F3               	clrf	___bmul@product
  2133  03E3                     l1563:
  2134  03E3  1C74               	btfss	___bmul@multiplier,0
  2135  03E4  2BE6               	goto	u511
  2136  03E5  2BE7               	goto	u510
  2137  03E6                     u511:
  2138  03E6  2BEB               	goto	l1567
  2139  03E7                     u510:
  2140  03E7                     l1565:
  2141  03E7  0872               	movf	___bmul@multiplicand,w
  2142  03E8  00FF               	movwf	btemp+1
  2143  03E9  087F               	movf	btemp+1,w
  2144  03EA  07F3               	addwf	___bmul@product,f
  2145  03EB                     l1567:
  2146  03EB  1003               	clrc
  2147  03EC  0DF2               	rlf	___bmul@multiplicand,f
  2148  03ED                     l1569:
  2149  03ED  1003               	clrc
  2150  03EE  0CF4               	rrf	___bmul@multiplier,f
  2151  03EF                     l1571:
  2152  03EF  0874               	movf	___bmul@multiplier,w
  2153  03F0  1D03               	btfss	3,2
  2154  03F1  2BF3               	goto	u521
  2155  03F2  2BF4               	goto	u520
  2156  03F3                     u521:
  2157  03F3  2BE3               	goto	l1563
  2158  03F4                     u520:
  2159  03F4                     l1573:
  2160  03F4  0873               	movf	___bmul@product,w
  2161  03F5                     l369:
  2162  03F5  0008               	return
  2163  03F6                     __end_of___bmul:
  2164                           
  2165                           	psect	text10
  2166  011A                     __ptext10:	
  2167 ;; *************** function ___awdiv *****************
  2168 ;; Defined at:
  2169 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  divisor         2    0[BANK0 ] int 
  2172 ;;  dividend        2    2[BANK0 ] int 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  quotient        2    6[BANK0 ] int 
  2175 ;;  sign            1    5[BANK0 ] unsigned char 
  2176 ;;  counter         1    4[BANK0 ] unsigned char 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  2    0[BANK0 ] int 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0, btemp+1
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         0       4       0       0       0
  2187 ;;      Locals:         0       4       0       0       0
  2188 ;;      Temps:          0       0       0       0       0
  2189 ;;      Totals:         0       8       0       0       0
  2190 ;;Total ram usage:        8 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_map_pot1
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function ___awdiv
  2202  011A                     ___awdiv:
  2203  011A                     l1577:	
  2204                           ;incstack = 0
  2205                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2206                           
  2207  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2208  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2209  011C  01A5               	clrf	___awdiv@sign
  2210  011D                     l1579:
  2211  011D  1FA1               	btfss	___awdiv@divisor+1,7
  2212  011E  2920               	goto	u531
  2213  011F  2921               	goto	u530
  2214  0120                     u531:
  2215  0120  2928               	goto	l1585
  2216  0121                     u530:
  2217  0121                     l1581:
  2218  0121  09A0               	comf	___awdiv@divisor,f
  2219  0122  09A1               	comf	___awdiv@divisor+1,f
  2220  0123  0AA0               	incf	___awdiv@divisor,f
  2221  0124  1903               	skipnz
  2222  0125  0AA1               	incf	___awdiv@divisor+1,f
  2223  0126                     l1583:
  2224  0126  01A5               	clrf	___awdiv@sign
  2225  0127  0AA5               	incf	___awdiv@sign,f
  2226  0128                     l1585:
  2227  0128  1FA3               	btfss	___awdiv@dividend+1,7
  2228  0129  292B               	goto	u541
  2229  012A  292C               	goto	u540
  2230  012B                     u541:
  2231  012B  2935               	goto	l1591
  2232  012C                     u540:
  2233  012C                     l1587:
  2234  012C  09A2               	comf	___awdiv@dividend,f
  2235  012D  09A3               	comf	___awdiv@dividend+1,f
  2236  012E  0AA2               	incf	___awdiv@dividend,f
  2237  012F  1903               	skipnz
  2238  0130  0AA3               	incf	___awdiv@dividend+1,f
  2239  0131                     l1589:
  2240  0131  3001               	movlw	1
  2241  0132  00FF               	movwf	btemp+1
  2242  0133  087F               	movf	btemp+1,w
  2243  0134  06A5               	xorwf	___awdiv@sign,f
  2244  0135                     l1591:
  2245  0135  01A6               	clrf	___awdiv@quotient
  2246  0136  01A7               	clrf	___awdiv@quotient+1
  2247  0137                     l1593:
  2248  0137  0820               	movf	___awdiv@divisor,w
  2249  0138  0421               	iorwf	___awdiv@divisor+1,w
  2250  0139  1903               	btfsc	3,2
  2251  013A  293C               	goto	u551
  2252  013B  293D               	goto	u550
  2253  013C                     u551:
  2254  013C  2974               	goto	l1613
  2255  013D                     u550:
  2256  013D                     l1595:
  2257  013D  01A4               	clrf	___awdiv@counter
  2258  013E  0AA4               	incf	___awdiv@counter,f
  2259  013F  294B               	goto	l1601
  2260  0140                     l1597:
  2261  0140  3001               	movlw	1
  2262  0141                     u565:
  2263  0141  1003               	clrc
  2264  0142  0DA0               	rlf	___awdiv@divisor,f
  2265  0143  0DA1               	rlf	___awdiv@divisor+1,f
  2266  0144  3EFF               	addlw	-1
  2267  0145  1D03               	skipz
  2268  0146  2941               	goto	u565
  2269  0147                     l1599:
  2270  0147  3001               	movlw	1
  2271  0148  00FF               	movwf	btemp+1
  2272  0149  087F               	movf	btemp+1,w
  2273  014A  07A4               	addwf	___awdiv@counter,f
  2274  014B                     l1601:
  2275  014B  1FA1               	btfss	___awdiv@divisor+1,7
  2276  014C  294E               	goto	u571
  2277  014D  294F               	goto	u570
  2278  014E                     u571:
  2279  014E  2940               	goto	l1597
  2280  014F                     u570:
  2281  014F                     l1603:
  2282  014F  3001               	movlw	1
  2283  0150                     u585:
  2284  0150  1003               	clrc
  2285  0151  0DA6               	rlf	___awdiv@quotient,f
  2286  0152  0DA7               	rlf	___awdiv@quotient+1,f
  2287  0153  3EFF               	addlw	-1
  2288  0154  1D03               	skipz
  2289  0155  2950               	goto	u585
  2290  0156  0821               	movf	___awdiv@divisor+1,w
  2291  0157  0223               	subwf	___awdiv@dividend+1,w
  2292  0158  1D03               	skipz
  2293  0159  295C               	goto	u595
  2294  015A  0820               	movf	___awdiv@divisor,w
  2295  015B  0222               	subwf	___awdiv@dividend,w
  2296  015C                     u595:
  2297  015C  1C03               	skipc
  2298  015D  295F               	goto	u591
  2299  015E  2960               	goto	u590
  2300  015F                     u591:
  2301  015F  2967               	goto	l1609
  2302  0160                     u590:
  2303  0160                     l1605:
  2304  0160  0820               	movf	___awdiv@divisor,w
  2305  0161  02A2               	subwf	___awdiv@dividend,f
  2306  0162  0821               	movf	___awdiv@divisor+1,w
  2307  0163  1C03               	skipc
  2308  0164  03A3               	decf	___awdiv@dividend+1,f
  2309  0165  02A3               	subwf	___awdiv@dividend+1,f
  2310  0166                     l1607:
  2311  0166  1426               	bsf	___awdiv@quotient,0
  2312  0167                     l1609:
  2313  0167  3001               	movlw	1
  2314  0168                     u605:
  2315  0168  1003               	clrc
  2316  0169  0CA1               	rrf	___awdiv@divisor+1,f
  2317  016A  0CA0               	rrf	___awdiv@divisor,f
  2318  016B  3EFF               	addlw	-1
  2319  016C  1D03               	skipz
  2320  016D  2968               	goto	u605
  2321  016E                     l1611:
  2322  016E  3001               	movlw	1
  2323  016F  02A4               	subwf	___awdiv@counter,f
  2324  0170  1D03               	btfss	3,2
  2325  0171  2973               	goto	u611
  2326  0172  2974               	goto	u610
  2327  0173                     u611:
  2328  0173  294F               	goto	l1603
  2329  0174                     u610:
  2330  0174                     l1613:
  2331  0174  0825               	movf	___awdiv@sign,w
  2332  0175  1903               	btfsc	3,2
  2333  0176  2978               	goto	u621
  2334  0177  2979               	goto	u620
  2335  0178                     u621:
  2336  0178  297E               	goto	l1617
  2337  0179                     u620:
  2338  0179                     l1615:
  2339  0179  09A6               	comf	___awdiv@quotient,f
  2340  017A  09A7               	comf	___awdiv@quotient+1,f
  2341  017B  0AA6               	incf	___awdiv@quotient,f
  2342  017C  1903               	skipnz
  2343  017D  0AA7               	incf	___awdiv@quotient+1,f
  2344  017E                     l1617:
  2345  017E  0827               	movf	___awdiv@quotient+1,w
  2346  017F  00A1               	movwf	?___awdiv+1
  2347  0180  0826               	movf	___awdiv@quotient,w
  2348  0181  00A0               	movwf	?___awdiv
  2349  0182                     l496:
  2350  0182  0008               	return
  2351  0183                     __end_of___awdiv:
  2352                           
  2353                           	psect	text11
  2354  0319                     __ptext11:	
  2355 ;; *************** function _initOsc *****************
  2356 ;; Defined at:
  2357 ;;		line 7 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/Osc.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  frec            1    wreg     unsigned char 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  frec            1    2[COMMON] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         1       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0
  2374 ;;      Totals:         1       0       0       0       0
  2375 ;;Total ram usage:        1 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    1
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _initOsc
  2387  0319                     _initOsc:
  2388                           
  2389                           ;incstack = 0
  2390                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2391                           ;initOsc@frec stored from wreg
  2392  0319  00F2               	movwf	initOsc@frec
  2393  031A                     l1029:
  2394                           
  2395                           ;Osc.c: 8: switch(frec){
  2396  031A  2B33               	goto	l1033
  2397  031B                     l205:	
  2398                           ;Osc.c: 9: case 0:
  2399                           
  2400                           
  2401                           ;Osc.c: 10: OSCCONbits.IRCF0 = 0;
  2402  031B  1683               	bsf	3,5	;RP0=1, select bank1
  2403  031C  1303               	bcf	3,6	;RP1=0, select bank1
  2404  031D  120F               	bcf	15,4	;volatile
  2405                           
  2406                           ;Osc.c: 11: OSCCONbits.IRCF1 = 0;
  2407  031E  128F               	bcf	15,5	;volatile
  2408                           
  2409                           ;Osc.c: 12: OSCCONbits.IRCF2 = 0;
  2410  031F  130F               	bcf	15,6	;volatile
  2411                           
  2412                           ;Osc.c: 13: break;
  2413  0320  2B3E               	goto	l206
  2414  0321                     l207:	
  2415                           ;Osc.c: 14: case 1:
  2416                           
  2417                           
  2418                           ;Osc.c: 15: OSCCONbits.IRCF0 = 1;
  2419  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2420  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2421  0323  160F               	bsf	15,4	;volatile
  2422                           
  2423                           ;Osc.c: 16: OSCCONbits.IRCF1 = 0;
  2424  0324  128F               	bcf	15,5	;volatile
  2425                           
  2426                           ;Osc.c: 17: OSCCONbits.IRCF2 = 0;
  2427  0325  130F               	bcf	15,6	;volatile
  2428                           
  2429                           ;Osc.c: 18: break;
  2430  0326  2B3E               	goto	l206
  2431  0327                     l208:	
  2432                           ;Osc.c: 26: case 7:
  2433                           
  2434                           
  2435                           ;Osc.c: 27: OSCCONbits.IRCF0 = 1;
  2436  0327  1683               	bsf	3,5	;RP0=1, select bank1
  2437  0328  1303               	bcf	3,6	;RP1=0, select bank1
  2438  0329  160F               	bsf	15,4	;volatile
  2439                           
  2440                           ;Osc.c: 28: OSCCONbits.IRCF1 = 1;
  2441  032A  168F               	bsf	15,5	;volatile
  2442                           
  2443                           ;Osc.c: 29: OSCCONbits.IRCF2 = 1;
  2444  032B  170F               	bsf	15,6	;volatile
  2445                           
  2446                           ;Osc.c: 30: break;
  2447  032C  2B3E               	goto	l206
  2448  032D                     l209:	
  2449                           ;Osc.c: 31: default:
  2450                           
  2451                           
  2452                           ;Osc.c: 32: OSCCONbits.IRCF0 = 0;
  2453  032D  1683               	bsf	3,5	;RP0=1, select bank1
  2454  032E  1303               	bcf	3,6	;RP1=0, select bank1
  2455  032F  120F               	bcf	15,4	;volatile
  2456                           
  2457                           ;Osc.c: 33: OSCCONbits.IRCF1 = 1;
  2458  0330  168F               	bsf	15,5	;volatile
  2459                           
  2460                           ;Osc.c: 34: OSCCONbits.IRCF2 = 1;
  2461  0331  170F               	bsf	15,6	;volatile
  2462                           
  2463                           ;Osc.c: 35: break;
  2464  0332  2B3E               	goto	l206
  2465  0333                     l1033:
  2466  0333  0872               	movf	initOsc@frec,w
  2467                           
  2468                           ; Switch size 1, requested type "simple"
  2469                           ; Number of cases is 3, Range of values is 0 to 7
  2470                           ; switch strategies available:
  2471                           ; Name         Instructions Cycles
  2472                           ; simple_byte           10     6 (average)
  2473                           ; direct_byte           32     8 (fixed)
  2474                           ; jumptable            260     6 (fixed)
  2475                           ;	Chosen strategy is simple_byte
  2476  0334  3A00               	xorlw	0	; case 0
  2477  0335  1903               	skipnz
  2478  0336  2B1B               	goto	l205
  2479  0337  3A01               	xorlw	1	; case 1
  2480  0338  1903               	skipnz
  2481  0339  2B21               	goto	l207
  2482  033A  3A06               	xorlw	6	; case 7
  2483  033B  1903               	skipnz
  2484  033C  2B27               	goto	l208
  2485  033D  2B2D               	goto	l209
  2486  033E                     l206:
  2487                           
  2488                           ;Osc.c: 38: OSCCONbits.SCS = 1;
  2489  033E  140F               	bsf	15,0	;volatile
  2490  033F                     l210:
  2491  033F  0008               	return
  2492  0340                     __end_of_initOsc:
  2493                           
  2494                           	psect	text12
  2495  021F                     __ptext12:	
  2496 ;; *************** function _conver *****************
  2497 ;; Defined at:
  2498 ;;		line 171 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  temporal       16    0[BANK0 ] unsigned char [16]
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      PTR const unsigned char 
  2505 ;; Registers used:
  2506 ;;		wreg, btemp+1
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2512 ;;      Params:         0       0       0       0       0
  2513 ;;      Locals:         0      16       0       0       0
  2514 ;;      Temps:          0       0       0       0       0
  2515 ;;      Totals:         0      16       0       0       0
  2516 ;;Total ram usage:       16 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    1
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _conver
  2528  021F                     _conver:
  2529  021F                     l1391:	
  2530                           ;incstack = 0
  2531                           ; Regs used in _conver: [wreg+btemp+1]
  2532                           
  2533                           
  2534                           ;main.c: 172: char temporal[16];;main.c: 173: temporal[0] = CONT_C;
  2535  021F  3030               	movlw	48
  2536  0220  00FF               	movwf	btemp+1
  2537  0221  087F               	movf	btemp+1,w
  2538  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0224  00A0               	movwf	conver@temporal
  2541                           
  2542                           ;main.c: 174: temporal[1] = CONT_D;
  2543  0225  3030               	movlw	48
  2544  0226  00FF               	movwf	btemp+1
  2545  0227  087F               	movf	btemp+1,w
  2546  0228  00A1               	movwf	conver@temporal+1
  2547                           
  2548                           ;main.c: 175: temporal[2] = CONT_U;
  2549  0229  3030               	movlw	48
  2550  022A  00FF               	movwf	btemp+1
  2551  022B  087F               	movf	btemp+1,w
  2552  022C  00A2               	movwf	conver@temporal+2
  2553                           
  2554                           ;main.c: 176: temporal[3] = 0x20;
  2555  022D  3020               	movlw	32
  2556  022E  00FF               	movwf	btemp+1
  2557  022F  087F               	movf	btemp+1,w
  2558  0230  00A3               	movwf	conver@temporal+3
  2559                           
  2560                           ;main.c: 177: temporal[4] = 0x20;
  2561  0231  3020               	movlw	32
  2562  0232  00FF               	movwf	btemp+1
  2563  0233  087F               	movf	btemp+1,w
  2564  0234  00A4               	movwf	conver@temporal+4
  2565                           
  2566                           ;main.c: 178: temporal[5] = POT1_C;
  2567  0235  0835               	movf	_POT1_C,w
  2568  0236  00FF               	movwf	btemp+1
  2569  0237  087F               	movf	btemp+1,w
  2570  0238  00A5               	movwf	conver@temporal+5
  2571                           
  2572                           ;main.c: 179: temporal[6] = 0x2E;
  2573  0239  302E               	movlw	46
  2574  023A  00FF               	movwf	btemp+1
  2575  023B  087F               	movf	btemp+1,w
  2576  023C  00A6               	movwf	conver@temporal+6
  2577                           
  2578                           ;main.c: 180: temporal[7] = POT1_D;
  2579  023D  0836               	movf	_POT1_D,w
  2580  023E  00FF               	movwf	btemp+1
  2581  023F  087F               	movf	btemp+1,w
  2582  0240  00A7               	movwf	conver@temporal+7
  2583                           
  2584                           ;main.c: 181: temporal[8] = POT1_U;
  2585  0241  0837               	movf	_POT1_U,w
  2586  0242  00FF               	movwf	btemp+1
  2587  0243  087F               	movf	btemp+1,w
  2588  0244  00A8               	movwf	conver@temporal+8
  2589                           
  2590                           ;main.c: 182: temporal[9] = 0x76;
  2591  0245  3076               	movlw	118
  2592  0246  00FF               	movwf	btemp+1
  2593  0247  087F               	movf	btemp+1,w
  2594  0248  00A9               	movwf	conver@temporal+9
  2595                           
  2596                           ;main.c: 183: temporal[10] = 0x20;
  2597  0249  3020               	movlw	32
  2598  024A  00FF               	movwf	btemp+1
  2599  024B  087F               	movf	btemp+1,w
  2600  024C  00AA               	movwf	conver@temporal+10
  2601                           
  2602                           ;main.c: 184: temporal[11] = POT2_C;
  2603  024D  3030               	movlw	48
  2604  024E  00FF               	movwf	btemp+1
  2605  024F  087F               	movf	btemp+1,w
  2606  0250  00AB               	movwf	conver@temporal+11
  2607                           
  2608                           ;main.c: 185: temporal[12] = 0x2E;
  2609  0251  302E               	movlw	46
  2610  0252  00FF               	movwf	btemp+1
  2611  0253  087F               	movf	btemp+1,w
  2612  0254  00AC               	movwf	conver@temporal+12
  2613                           
  2614                           ;main.c: 186: temporal[13] = POT2_D;
  2615  0255  3030               	movlw	48
  2616  0256  00FF               	movwf	btemp+1
  2617  0257  087F               	movf	btemp+1,w
  2618  0258  00AD               	movwf	conver@temporal+13
  2619                           
  2620                           ;main.c: 187: temporal[14] = POT2_U;
  2621  0259  3030               	movlw	48
  2622  025A  00FF               	movwf	btemp+1
  2623  025B  087F               	movf	btemp+1,w
  2624  025C  00AE               	movwf	conver@temporal+14
  2625                           
  2626                           ;main.c: 188: temporal[15] = 0x76;
  2627  025D  3076               	movlw	118
  2628  025E  00FF               	movwf	btemp+1
  2629  025F  087F               	movf	btemp+1,w
  2630  0260  00AF               	movwf	conver@temporal+15
  2631  0261                     l1393:
  2632                           
  2633                           ;main.c: 189: return temporal;
  2634  0261  3020               	movlw	(low (conver@temporal| 0))& (0+255)
  2635  0262                     l113:
  2636  0262  0008               	return
  2637  0263                     __end_of_conver:
  2638                           
  2639                           	psect	text13
  2640  02C6                     __ptext13:	
  2641 ;; *************** function _Setup *****************
  2642 ;; Defined at:
  2643 ;;		line 105 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       0       0       0       0
  2658 ;;      Locals:         0       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0
  2660 ;;      Totals:         0       0       0       0       0
  2661 ;;Total ram usage:        0 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _Setup
  2673  02C6                     _Setup:
  2674  02C6                     l1035:	
  2675                           ;incstack = 0
  2676                           ; Regs used in _Setup: [wreg+status,2]
  2677                           
  2678                           
  2679                           ;main.c: 107: PORTA = 0;
  2680  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2681  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2682  02C8  0185               	clrf	5	;volatile
  2683                           
  2684                           ;main.c: 108: PORTB = 0;
  2685  02C9  0186               	clrf	6	;volatile
  2686                           
  2687                           ;main.c: 109: PORTC = 0;
  2688  02CA  0187               	clrf	7	;volatile
  2689                           
  2690                           ;main.c: 110: PORTD = 0;
  2691  02CB  0188               	clrf	8	;volatile
  2692                           
  2693                           ;main.c: 111: ANSEL = 0;
  2694  02CC  1683               	bsf	3,5	;RP0=1, select bank3
  2695  02CD  1703               	bsf	3,6	;RP1=1, select bank3
  2696  02CE  0188               	clrf	8	;volatile
  2697  02CF                     l1037:
  2698                           
  2699                           ;main.c: 112: ANSELbits.ANS0 = 1;
  2700  02CF  1408               	bsf	8,0	;volatile
  2701                           
  2702                           ;main.c: 113: ANSELH = 0;
  2703  02D0  0189               	clrf	9	;volatile
  2704                           
  2705                           ;main.c: 114: TRISA = 0b00000000;
  2706  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2707  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2708  02D3  0185               	clrf	5	;volatile
  2709                           
  2710                           ;main.c: 115: TRISB = 0b00000000;
  2711  02D4  0186               	clrf	6	;volatile
  2712                           
  2713                           ;main.c: 116: TRISD = 0;
  2714  02D5  0188               	clrf	8	;volatile
  2715  02D6                     l1039:
  2716                           
  2717                           ;main.c: 117: TRISC = 0b00010000;
  2718  02D6  3010               	movlw	16
  2719  02D7  0087               	movwf	7	;volatile
  2720  02D8                     l1041:
  2721                           
  2722                           ;main.c: 118: PORTCbits.RC2 = 1;
  2723  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2724  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2725  02DA  1507               	bsf	7,2	;volatile
  2726  02DB                     l1043:
  2727                           
  2728                           ;main.c: 119: INTCONbits.TMR0IF = 0;
  2729  02DB  110B               	bcf	11,2	;volatile
  2730  02DC                     l1045:
  2731                           
  2732                           ;main.c: 120: PIR1bits.ADIF = 0;
  2733  02DC  130C               	bcf	12,6	;volatile
  2734  02DD                     l1047:
  2735                           
  2736                           ;main.c: 121: INTCONbits.RBIF = 0;
  2737  02DD  100B               	bcf	11,0	;volatile
  2738  02DE                     l1049:
  2739                           
  2740                           ;main.c: 124: OPTION_REG = 0b11010111;
  2741  02DE  30D7               	movlw	215
  2742  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  2743  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  2744  02E1  0081               	movwf	1	;volatile
  2745  02E2                     l1051:
  2746                           
  2747                           ;main.c: 127: INTCONbits.GIE = 0;
  2748  02E2  138B               	bcf	11,7	;volatile
  2749  02E3                     l1053:
  2750                           
  2751                           ;main.c: 128: INTCONbits.PEIE = 0;
  2752  02E3  130B               	bcf	11,6	;volatile
  2753  02E4                     l1055:
  2754                           
  2755                           ;main.c: 130: INTCONbits.RBIE = 0;
  2756  02E4  118B               	bcf	11,3	;volatile
  2757  02E5                     l1057:
  2758                           
  2759                           ;main.c: 131: PIE1bits.ADIE = 1;
  2760  02E5  170C               	bsf	12,6	;volatile
  2761  02E6                     l1059:
  2762                           
  2763                           ;main.c: 132: INTCONbits.T0IE = 1;
  2764  02E6  168B               	bsf	11,5	;volatile
  2765  02E7                     l1061:
  2766                           
  2767                           ;main.c: 133: TMR0 = 236;
  2768  02E7  30EC               	movlw	236
  2769  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2770  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2771  02EA  0081               	movwf	1	;volatile
  2772  02EB                     l1063:
  2773                           
  2774                           ;main.c: 135: PIE1bits.TXIE = 1;
  2775  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2776  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2777  02ED  160C               	bsf	12,4	;volatile
  2778  02EE                     l1065:
  2779                           
  2780                           ;main.c: 137: PIE1bits.SSPIE = 1;
  2781  02EE  158C               	bsf	12,3	;volatile
  2782  02EF                     l104:
  2783  02EF  0008               	return
  2784  02F0                     __end_of_Setup:
  2785                           
  2786                           	psect	text14
  2787  01D9                     __ptext14:	
  2788 ;; *************** function _Lcd_Write_String *****************
  2789 ;; Defined at:
  2790 ;;		line 63 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  a               2    5[COMMON] PTR unsigned char 
  2793 ;;		 -> conver@temporal(16), STR_1(15), 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  i               2   16[BANK0 ] int 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2805 ;;      Params:         2       0       0       0       0
  2806 ;;      Locals:         0       2       0       0       0
  2807 ;;      Temps:          3       0       0       0       0
  2808 ;;      Totals:         5       2       0       0       0
  2809 ;;Total ram usage:        7 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    3
  2812 ;; This function calls:
  2813 ;;		_Lcd_Write_Char
  2814 ;; This function is called by:
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           
  2820                           ;psect for function _Lcd_Write_String
  2821  01D9                     _Lcd_Write_String:
  2822  01D9                     l1639:	
  2823                           ;incstack = 0
  2824                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2825                           
  2826                           
  2827                           ;LCD8BIT.c: 65: int i;;LCD8BIT.c: 66: for(i=0;a[i]!='\0';i++)
  2828  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2829  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  2830  01DB  01B0               	clrf	Lcd_Write_String@i
  2831  01DC  01B1               	clrf	Lcd_Write_String@i+1
  2832  01DD  2A02               	goto	l1645
  2833  01DE                     l1641:
  2834                           
  2835                           ;LCD8BIT.c: 67: Lcd_Write_Char(a[i]);
  2836  01DE  0830               	movf	Lcd_Write_String@i,w
  2837  01DF  0775               	addwf	Lcd_Write_String@a,w
  2838  01E0  00F8               	movwf	??_Lcd_Write_String+1
  2839  01E1  0876               	movf	Lcd_Write_String@a+1,w
  2840  01E2  00F7               	movwf	??_Lcd_Write_String
  2841  01E3  1803               	skipnc
  2842  01E4  0AF7               	incf	??_Lcd_Write_String,f
  2843  01E5  1FB0               	btfss	Lcd_Write_String@i,7
  2844  01E6  29E8               	goto	u650
  2845  01E7  03F7               	decf	??_Lcd_Write_String,f
  2846  01E8                     u650:
  2847  01E8  0877               	movf	??_Lcd_Write_String,w
  2848  01E9  00F9               	movwf	??_Lcd_Write_String+2
  2849  01EA  0879               	movf	??_Lcd_Write_String+2,w
  2850  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2851  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2852  01ED  00FF               	movwf	btemp+1
  2853  01EE  0878               	movf	??_Lcd_Write_String+1,w
  2854  01EF  0084               	movwf	4
  2855  01F0  120A  118A  2365  120A  118A  	fcall	stringtab
  2856  01F5  120A  118A  23CB  120A  118A  	fcall	_Lcd_Write_Char
  2857  01FA                     l1643:
  2858  01FA  3001               	movlw	1
  2859  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2860  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2861  01FD  07B0               	addwf	Lcd_Write_String@i,f
  2862  01FE  1803               	skipnc
  2863  01FF  0AB1               	incf	Lcd_Write_String@i+1,f
  2864  0200  3000               	movlw	0
  2865  0201  07B1               	addwf	Lcd_Write_String@i+1,f
  2866  0202                     l1645:
  2867  0202  0830               	movf	Lcd_Write_String@i,w
  2868  0203  0775               	addwf	Lcd_Write_String@a,w
  2869  0204  00F8               	movwf	??_Lcd_Write_String+1
  2870  0205  0876               	movf	Lcd_Write_String@a+1,w
  2871  0206  00F7               	movwf	??_Lcd_Write_String
  2872  0207  1803               	skipnc
  2873  0208  0AF7               	incf	??_Lcd_Write_String,f
  2874  0209  1FB0               	btfss	Lcd_Write_String@i,7
  2875  020A  2A0C               	goto	u660
  2876  020B  03F7               	decf	??_Lcd_Write_String,f
  2877  020C                     u660:
  2878  020C  0877               	movf	??_Lcd_Write_String,w
  2879  020D  00F9               	movwf	??_Lcd_Write_String+2
  2880  020E  0879               	movf	??_Lcd_Write_String+2,w
  2881  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0211  00FF               	movwf	btemp+1
  2884  0212  0878               	movf	??_Lcd_Write_String+1,w
  2885  0213  0084               	movwf	4
  2886  0214  120A  118A  2365  120A  118A  	fcall	stringtab
  2887  0219  3A00               	xorlw	0
  2888  021A  1D03               	skipz
  2889  021B  2A1D               	goto	u671
  2890  021C  2A1E               	goto	u670
  2891  021D                     u671:
  2892  021D  29DE               	goto	l1641
  2893  021E                     u670:
  2894  021E                     l193:
  2895  021E  0008               	return
  2896  021F                     __end_of_Lcd_Write_String:
  2897                           
  2898                           	psect	text15
  2899  03CB                     __ptext15:	
  2900 ;; *************** function _Lcd_Write_Char *****************
  2901 ;; Defined at:
  2902 ;;		line 53 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  a               1    wreg     unsigned char 
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  a               1    4[COMMON] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      void 
  2909 ;; Registers used:
  2910 ;;		wreg, status,2, status,0, pclath, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2916 ;;      Params:         0       0       0       0       0
  2917 ;;      Locals:         1       0       0       0       0
  2918 ;;      Temps:          1       0       0       0       0
  2919 ;;      Totals:         2       0       0       0       0
  2920 ;;Total ram usage:        2 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    2
  2923 ;; This function calls:
  2924 ;;		_Lcd_Port
  2925 ;; This function is called by:
  2926 ;;		_Lcd_Write_String
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           
  2931                           ;psect for function _Lcd_Write_Char
  2932  03CB                     _Lcd_Write_Char:
  2933                           
  2934                           ;incstack = 0
  2935                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2936                           ;Lcd_Write_Char@a stored from wreg
  2937  03CB  00F4               	movwf	Lcd_Write_Char@a
  2938  03CC                     l1535:
  2939                           
  2940                           ;LCD8BIT.c: 55: PORTBbits.RB1 = 1;
  2941  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2942  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2943  03CE  1486               	bsf	6,1	;volatile
  2944  03CF                     l1537:
  2945                           
  2946                           ;LCD8BIT.c: 56: Lcd_Port(a);
  2947  03CF  0874               	movf	Lcd_Write_Char@a,w
  2948  03D0  120A  118A  242F  120A  118A  	fcall	_Lcd_Port
  2949  03D5                     l1539:
  2950                           
  2951                           ;LCD8BIT.c: 57: PORTBbits.RB0 = 1;
  2952  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2953  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2954  03D7  1406               	bsf	6,0	;volatile
  2955  03D8                     l1541:
  2956                           
  2957                           ;LCD8BIT.c: 58: _delay((unsigned long)((40)*(40000000/4000000.0)));
  2958  03D8  3085               	movlw	133
  2959  03D9  00F3               	movwf	??_Lcd_Write_Char
  2960  03DA                     u707:
  2961  03DA  0BF3               	decfsz	??_Lcd_Write_Char,f
  2962  03DB  2BDA               	goto	u707
  2963  03DC                     l1543:
  2964                           
  2965                           ;LCD8BIT.c: 59: PORTBbits.RB0 = 0;
  2966  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2967  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2968  03DE  1006               	bcf	6,0	;volatile
  2969  03DF                     l1545:
  2970                           
  2971                           ;LCD8BIT.c: 60: PORTBbits.RB1 = 0;
  2972  03DF  1086               	bcf	6,1	;volatile
  2973  03E0                     l187:
  2974  03E0  0008               	return
  2975  03E1                     __end_of_Lcd_Write_Char:
  2976                           
  2977                           	psect	text16
  2978  029A                     __ptext16:	
  2979 ;; *************** function _Lcd_Set_Cursor *****************
  2980 ;; Defined at:
  2981 ;;		line 35 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  a               1    wreg     unsigned char 
  2984 ;;  b               1    6[COMMON] unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  a               1    7[COMMON] unsigned char 
  2987 ;;  z               1    9[COMMON] unsigned char 
  2988 ;;  temp            1    8[COMMON] unsigned char 
  2989 ;;  y               1    0        unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         1       0       0       0       0
  3000 ;;      Locals:         3       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0
  3002 ;;      Totals:         4       0       0       0       0
  3003 ;;Total ram usage:        4 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    3
  3006 ;; This function calls:
  3007 ;;		_Lcd_Cmd
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           
  3014                           ;psect for function _Lcd_Set_Cursor
  3015  029A                     _Lcd_Set_Cursor:
  3016                           
  3017                           ;incstack = 0
  3018                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3019                           ;Lcd_Set_Cursor@a stored from wreg
  3020  029A  00F7               	movwf	Lcd_Set_Cursor@a
  3021  029B                     l1623:
  3022                           
  3023                           ;LCD8BIT.c: 37: char temp,z,y;;LCD8BIT.c: 38: if(a == 1)
  3024  029B  0377               	decf	Lcd_Set_Cursor@a,w
  3025  029C  1D03               	btfss	3,2
  3026  029D  2A9F               	goto	u631
  3027  029E  2AA0               	goto	u630
  3028  029F                     u631:
  3029  029F  2AB0               	goto	l1631
  3030  02A0                     u630:
  3031  02A0                     l1625:
  3032                           
  3033                           ;LCD8BIT.c: 39: {;LCD8BIT.c: 40: temp = 0x80 + b - 1;
  3034  02A0  0876               	movf	Lcd_Set_Cursor@b,w
  3035  02A1  3E7F               	addlw	127
  3036  02A2  00FF               	movwf	btemp+1
  3037  02A3  087F               	movf	btemp+1,w
  3038  02A4  00F8               	movwf	Lcd_Set_Cursor@temp
  3039  02A5                     l1627:
  3040                           
  3041                           ;LCD8BIT.c: 41: z = temp;
  3042  02A5  0878               	movf	Lcd_Set_Cursor@temp,w
  3043  02A6  00FF               	movwf	btemp+1
  3044  02A7  087F               	movf	btemp+1,w
  3045  02A8  00F9               	movwf	Lcd_Set_Cursor@z
  3046  02A9                     l1629:
  3047                           
  3048                           ;LCD8BIT.c: 42: Lcd_Cmd(z);
  3049  02A9  0879               	movf	Lcd_Set_Cursor@z,w
  3050  02AA  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  3051                           
  3052                           ;LCD8BIT.c: 43: }
  3053  02AF  2AC5               	goto	l184
  3054  02B0                     l1631:
  3055                           
  3056                           ;LCD8BIT.c: 44: else if(a == 2)
  3057  02B0  3002               	movlw	2
  3058  02B1  0677               	xorwf	Lcd_Set_Cursor@a,w
  3059  02B2  1D03               	btfss	3,2
  3060  02B3  2AB5               	goto	u641
  3061  02B4  2AB6               	goto	u640
  3062  02B5                     u641:
  3063  02B5  2AC5               	goto	l184
  3064  02B6                     u640:
  3065  02B6                     l1633:
  3066                           
  3067                           ;LCD8BIT.c: 45: {;LCD8BIT.c: 46: temp = 0xC0 + b - 1;
  3068  02B6  0876               	movf	Lcd_Set_Cursor@b,w
  3069  02B7  3EBF               	addlw	191
  3070  02B8  00FF               	movwf	btemp+1
  3071  02B9  087F               	movf	btemp+1,w
  3072  02BA  00F8               	movwf	Lcd_Set_Cursor@temp
  3073  02BB                     l1635:
  3074                           
  3075                           ;LCD8BIT.c: 47: z = temp;
  3076  02BB  0878               	movf	Lcd_Set_Cursor@temp,w
  3077  02BC  00FF               	movwf	btemp+1
  3078  02BD  087F               	movf	btemp+1,w
  3079  02BE  00F9               	movwf	Lcd_Set_Cursor@z
  3080  02BF                     l1637:
  3081                           
  3082                           ;LCD8BIT.c: 48: Lcd_Cmd(z);
  3083  02BF  0879               	movf	Lcd_Set_Cursor@z,w
  3084  02C0  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  3085  02C5                     l184:
  3086  02C5  0008               	return
  3087  02C6                     __end_of_Lcd_Set_Cursor:
  3088                           
  3089                           	psect	text17
  3090  0384                     __ptext17:	
  3091 ;; *************** function _Lcd_Init *****************
  3092 ;; Defined at:
  3093 ;;		line 10 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;		None
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         0       0       0       0       0
  3108 ;;      Locals:         0       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0
  3110 ;;      Totals:         0       0       0       0       0
  3111 ;;Total ram usage:        0 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    3
  3114 ;; This function calls:
  3115 ;;		_Lcd_Cmd
  3116 ;; This function is called by:
  3117 ;;		_main
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function _Lcd_Init
  3123  0384                     _Lcd_Init:
  3124  0384                     l1621:	
  3125                           ;incstack = 0
  3126                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3127                           
  3128                           
  3129                           ;LCD8BIT.c: 12: Lcd_Cmd(0x38);
  3130  0384  3038               	movlw	56
  3131  0385  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  3132                           
  3133                           ;LCD8BIT.c: 13: Lcd_Cmd(0x0c);
  3134  038A  300C               	movlw	12
  3135  038B  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  3136                           
  3137                           ;LCD8BIT.c: 14: Lcd_Cmd(0x06);
  3138  0390  3006               	movlw	6
  3139  0391  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  3140                           
  3141                           ;LCD8BIT.c: 15: Lcd_Cmd(0x80);
  3142  0396  3080               	movlw	128
  3143  0397  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  3144  039C                     l172:
  3145  039C  0008               	return
  3146  039D                     __end_of_Lcd_Init:
  3147                           
  3148                           	psect	text18
  3149  039D                     __ptext18:	
  3150 ;; *************** function _Lcd_Cmd *****************
  3151 ;; Defined at:
  3152 ;;		line 19 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  a               1    wreg     unsigned char 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  a               1    5[COMMON] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0, pclath, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3166 ;;      Params:         0       0       0       0       0
  3167 ;;      Locals:         1       0       0       0       0
  3168 ;;      Temps:          2       0       0       0       0
  3169 ;;      Totals:         3       0       0       0       0
  3170 ;;Total ram usage:        3 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    2
  3173 ;; This function calls:
  3174 ;;		_Lcd_Port
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;;		_Lcd_Init
  3178 ;;		_Lcd_Set_Cursor
  3179 ;;		_Lcd_Clear
  3180 ;;		_Lcd_Shift_Right
  3181 ;;		_Lcd_Shift_Left
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _Lcd_Cmd
  3187  039D                     _Lcd_Cmd:
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3191                           ;Lcd_Cmd@a stored from wreg
  3192  039D  00F5               	movwf	Lcd_Cmd@a
  3193  039E                     l1453:
  3194                           
  3195                           ;LCD8BIT.c: 22: Lcd_Port(a);
  3196  039E  0875               	movf	Lcd_Cmd@a,w
  3197  039F  120A  118A  242F  120A  118A  	fcall	_Lcd_Port
  3198  03A4                     l1455:
  3199                           
  3200                           ;LCD8BIT.c: 23: PORTBbits.RB1 = 0;
  3201  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  3202  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  3203  03A6  1086               	bcf	6,1	;volatile
  3204  03A7                     l1457:
  3205                           
  3206                           ;LCD8BIT.c: 24: PORTBbits.RB0 = 1;
  3207  03A7  1406               	bsf	6,0	;volatile
  3208  03A8                     l1459:
  3209                           
  3210                           ;LCD8BIT.c: 25: _delay((unsigned long)((5)*(40000000/4000.0)));
  3211  03A8  3041               	movlw	65
  3212  03A9  00F4               	movwf	??_Lcd_Cmd+1
  3213  03AA  30EE               	movlw	238
  3214  03AB  00F3               	movwf	??_Lcd_Cmd
  3215  03AC                     u717:
  3216  03AC  0BF3               	decfsz	??_Lcd_Cmd,f
  3217  03AD  2BAC               	goto	u717
  3218  03AE  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3219  03AF  2BAC               	goto	u717
  3220  03B0  0000               	nop
  3221  03B1                     l1461:
  3222                           
  3223                           ;LCD8BIT.c: 26: PORTBbits.RB0 = 0;
  3224  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3225  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3226  03B3  1006               	bcf	6,0	;volatile
  3227  03B4                     l175:
  3228  03B4  0008               	return
  3229  03B5                     __end_of_Lcd_Cmd:
  3230                           
  3231                           	psect	text19
  3232  042F                     __ptext19:	
  3233 ;; *************** function _Lcd_Port *****************
  3234 ;; Defined at:
  3235 ;;		line 5 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  a               1    wreg     unsigned char 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  a               1    2[COMMON] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         0       0       0       0       0
  3250 ;;      Locals:         1       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0
  3252 ;;      Totals:         1       0       0       0       0
  3253 ;;Total ram usage:        1 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    1
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_Lcd_Cmd
  3260 ;;		_Lcd_Write_Char
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           
  3265                           ;psect for function _Lcd_Port
  3266  042F                     _Lcd_Port:
  3267                           
  3268                           ;incstack = 0
  3269                           ; Regs used in _Lcd_Port: [wreg]
  3270                           ;Lcd_Port@a stored from wreg
  3271  042F  00F2               	movwf	Lcd_Port@a
  3272  0430                     l1451:
  3273                           
  3274                           ;LCD8BIT.c: 7: PORTD = a;
  3275  0430  0872               	movf	Lcd_Port@a,w
  3276  0431  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0432  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0433  0088               	movwf	8	;volatile
  3279  0434                     l169:
  3280  0434  0008               	return
  3281  0435                     __end_of_Lcd_Port:
  3282                           
  3283                           	psect	text20
  3284  0422                     __ptext20:	
  3285 ;; *************** function _ISR *****************
  3286 ;; Defined at:
  3287 ;;		line 73 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		None
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0
  3303 ;;      Temps:          2       0       0       0       0
  3304 ;;      Totals:         2       0       0       0       0
  3305 ;;Total ram usage:        2 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		Interrupt level 1
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function _ISR
  3316  0422                     _ISR:
  3317  0422                     i1l93:
  3318  0422  0871               	movf	??_ISR+1,w
  3319  0423  008A               	movwf	10
  3320  0424  0E70               	swapf	??_ISR^(0+4294967168),w
  3321  0425  0083               	movwf	3
  3322  0426  0EFE               	swapf	btemp,f
  3323  0427  0E7E               	swapf	btemp,w
  3324  0428  0009               	retfie
  3325  0429                     __end_of_ISR:
  3326  007E                     btemp	set	126	;btemp
  3327  007E                     wtemp0	set	126
  3328                           
  3329                           	psect	intentry
  3330  0004                     __pintentry:	
  3331                           ;incstack = 0
  3332                           ; Regs used in _ISR: []
  3333                           
  3334  0004                     interrupt_function:
  3335  007E                     saved_w	set	btemp
  3336  0004  00FE               	movwf	btemp
  3337  0005  0E03               	swapf	3,w
  3338  0006  00F0               	movwf	??_ISR
  3339  0007  080A               	movf	10,w
  3340  0008  00F1               	movwf	??_ISR+1
  3341  0009  120A  118A  2C22   	ljmp	_ISR
  3342                           
  3343                           	psect	config
  3344                           
  3345                           ;Config register CONFIG1 @ 0x2007
  3346                           ;	Oscillator Selection bits
  3347                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3348                           ;	Watchdog Timer Enable bit
  3349                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3350                           ;	Power-up Timer Enable bit
  3351                           ;	PWRTE = OFF, PWRT disabled
  3352                           ;	RE3/MCLR pin function select bit
  3353                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3354                           ;	Code Protection bit
  3355                           ;	CP = OFF, Program memory code protection is disabled
  3356                           ;	Data Code Protection bit
  3357                           ;	CPD = OFF, Data memory code protection is disabled
  3358                           ;	Brown Out Reset Selection bits
  3359                           ;	BOREN = OFF, BOR disabled
  3360                           ;	Internal External Switchover bit
  3361                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3362                           ;	Fail-Safe Clock Monitor Enabled bit
  3363                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3364                           ;	Low Voltage Programming Enable bit
  3365                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3366                           ;	In-Circuit Debugger Mode bit
  3367                           ;	DEBUG = 0x1, unprogrammed default
  3368  2007                     	org	8199
  3369  2007  20D4               	dw	8404
  3370                           
  3371                           ;Config register CONFIG2 @ 0x2008
  3372                           ;	Brown-out Reset Selection bit
  3373                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3374                           ;	Flash Program Memory Self Write Enable bits
  3375                           ;	WRT = OFF, Write protection off
  3376  2008                     	org	8200
  3377  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        9
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     18      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> conver@temporal(BANK0[16]), STR_1(CODE[15]), 

    sp__conver	PTR const unsigned char  size(1) Largest target is 16
		 -> conver@temporal(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _main->_map_pot1
    _slave1->_spiWrite
    _map_pot1->___wmul
    ___awdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _map_pot1->___awdiv
    _Lcd_Write_String->_conver

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4324
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _Setup
                             _conver
                            _initOsc
                           _map_pot1
                             _slave1
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _slave1                                               2     2      0      22
                                              3 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _map_pot1                                             8     8      0    2616
                                              8 COMMON     2     2      0
                                              8 BANK0      6     6      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     856
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     316
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1345
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conver                                              16    16      0     385
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     354
                                              5 COMMON     5     3      2
                                             16 BANK0      2     2      0
                     _Lcd_Write_Char
                             _conver (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     484
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
     _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     _conver (ARG)
   _Setup
   _conver
   _initOsc
   _map_pot1
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _slave1
     _spiRead
       _spiReceiveWait
     _spiWrite
   _spiInit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      1D       5       36.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      29      12        0.0%
ABS                  0      0      29       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Feb 12 01:30:36 2021

                        pc 0002             ___bmul@product 0073                _SSPSTATbits 0094  
             ___awdiv@sign 0025                         fsr 0004        ___wmul@multiplicand 0074  
                      l110 0119                        l104 02EF                        l113 0262  
                      l210 033F                        l107 0318                        l205 031B  
                      l206 033E                        l207 0321                        l208 0327  
                      l240 03CA                        l209 032D                        l147 0299  
                      l243 041B                        l172 039C                        l246 0421  
                      l175 03B4                        l343 034C                        l239 03C5  
                      l184 02C5                        l169 0434                        l193 021E  
                      l345 0364                        l257 041A                        l249 042E  
                      l187 03E0                        l369 03F5                        l496 0182  
                      u240 0421                        u241 0420                        u410 03BD  
                      u411 03BC                        u500 0360                        u501 035F  
                      u510 03E7                        u511 03E6                        u520 03F4  
                      u521 03F3                        u610 0174                        u530 0121  
                      u611 0173                        u531 0120                        u620 0179  
                      u540 012C                        _ISR 0422                        u621 0178  
                      u605 0168                        u541 012B                        u630 02A0  
                      u550 013D                        u470 0346                        u631 029F  
                      u551 013C                        u471 0345                        u640 02B6  
                      u641 02B5                        u650 01E8                        u570 014F  
                      u707 03DA                        u571 014E                        u660 020C  
                      u717 03AC                        u565 0141                        u485 034D  
                      u670 021E                        u590 0160                        u671 021D  
                      u591 015F                        u495 0354                        u585 0150  
                      u595 015C                        u687 02F7                        u697 0310  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
                     l1041 02D8                       l1033 0333                       l1201 041B  
                     l1051 02E2                       l1043 02DB                       l1035 02C6  
                     l1203 042A                       l1061 02E7                       l1053 02E3  
                     l1045 02DC                       l1037 02CF                       l1029 031A  
                     l1205 0412                       l1063 02EB                       l1055 02E4  
                     l1047 02DD                       l1039 02D6                       l1207 0417  
                     l1065 02EE                       l1057 02E5                       l1049 02DE  
                     l1059 02E6                       l1501 026F                       l1421 0302  
                     l1423 030C                       l1415 02F0                       l1601 014B  
                     l1513 0273                       l1425 0315                       l1417 02F3  
                     l1361 03BF                       l1451 0430                       l1611 016E  
                     l1603 014F                       l1507 0271                       l1419 02FC  
                     l1363 03C1                       l1461 03B1                       l1453 039E  
                     l1621 0384                       l1541 03D8                       l1605 0160  
                     l1613 0174                       l1525 0277                       l1533 0279  
                     l1365 03C4                       l1357 03B6                       l1455 03A4  
                     l1631 02B0                       l1623 029B                       l1543 03DC  
                     l1535 03CC                       l1391 021F                       l1615 0179  
                     l1607 0166                       l1551 0346                       l1519 0275  
                     l1463 0264                       l1359 03BD                       l1457 03A7  
                     l1633 02B6                       l1625 02A0                       l1545 03DF  
                     l1537 03CF                       l1641 01DE                       l1393 0261  
                     l1617 017E                       l1609 0167                       l1561 03E2  
                     l1553 0353                       l1465 0265                       l1459 03A8  
                     l1635 02BB                       l1627 02A5                       l1539 03D5  
                     l1643 01FA                       l1571 03EF                       l1563 03E3  
                     l1555 035A                       l1547 0340                       l1483 0269  
                     l1651 0050                       l1637 02BF                       l1629 02A9  
                     l1645 0202                       l1581 0121                       l1573 03F4  
                     l1565 03E7                       l1557 0360                       l1549 0342  
                     l1477 0267                       l1661 0103                       l1653 0063  
                     l1639 01D9                       l1591 0135                       l1583 0126  
                     l1567 03EB                       l1495 026D                       l1663 010E  
                     l1655 00A2                       l1647 0025                       l1671 0191  
                     l1593 0137                       l1585 0128                       l1577 011A  
                     l1569 03ED                       l1489 026B                       l1657 00B5  
                     l1649 002B                       l1681 01B6                       l1673 019A  
                     l1665 0183                       l1595 013D                       l1587 012C  
                     l1579 011D                       l1659 00F8                       l1683 01BE  
                     l1675 019F                       l1667 0186                       l1597 0140  
                     l1589 0131                       l1685 01CB                       l1677 01A5  
                     l1669 018C                       l1599 0147                       l1687 01D0  
                     l1679 01AD                       STR_1 0375                       i1l93 0422  
                     _TMR0 0001          ?_Lcd_Write_String 0075                       _main 0183  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0077  
          __end_of_Lcd_Cmd 03B5          ___bmul@multiplier 0074                      ??_ISR 0070  
                    ?_main 0070            __end_of___awdiv 0183                      _ANSEL 0188  
          ___awdiv@divisor 0020            ___awdiv@counter 0024                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 002C                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _Setup 02C6            __end_of_initOsc 0340                      _temp2 003C  
            _map_pot1$1320 0078                      pclath 000A            __end_of_spiInit 03CB  
          __end_of_spiRead 041B                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 039D           __end_of_Lcd_Port 0435            __initialization 000F  
             __end_of_main 01D9                     ??_main 007A                     ?_Setup 0070  
                   _ADCON1 009F           ___awdiv@dividend 0022                     _ANSELH 0189  
                   _CONT_C 0038                     _CONT_D 0039                     _CONT_U 003A  
              initOsc@frec 0072                  ??_Lcd_Cmd 0073                     _POT1_C 0035  
                   _POT1_D 0036                     _POT2_C 0032                     _POT2_D 0033  
                   _POT1_U 0037                     _POT2_U 0034                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0016                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPCON 0014                     _SSPBUF 0013                     ___bmul 03E1  
                   ___wmul 0340                  ??___awdiv 0078                     _basura 007A  
         __end_of_map_pot1 011A                     _go_adc 007B                     _conver 021F  
         ___awdiv@quotient 0026                     _slave1 02F0                  ??_initOsc 0072  
                   saved_w 007E           __end_of_spiWrite 042F                  ??_spiInit 0075  
                ??_spiRead 0072            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0076  
          Lcd_Set_Cursor@z 0079    __end_of__initialization 0021        ___bmul@multiplicand 0072  
           __pcstackCOMMON 0070              __end_of_Setup 02F0               __pidataBANK0 0409  
           _Lcd_Set_Cursor 029A                    ??_Setup 0072                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 003B                 __pmaintext 0183  
                  ?___bmul 0072                    ?___wmul 0072                 __pintentry 0004  
                  ?_conver 0070    __size_of_spiReceiveWait 0007  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 02C6                    ?_slave1 0070         __size_of_num_ascii 0037  
               ??_Lcd_Init 0076                 ??_Lcd_Port 0072                    _SSPSTAT 0094  
               __stringtab 0365                  ?_map_pot1 0070             _Lcd_Write_Char 03CB  
                  _Lcd_Cmd 039D                  ?_spiWrite 0070            __size_of___bmul 0015  
                  ___awdiv 011A            __size_of___wmul 0025            __size_of_conver 0044  
                _ANSELbits 0188                    _lec_ADC 003B            ?_Lcd_Set_Cursor 0076  
          __size_of_slave1 0029                    __ptext1 03B5                    __ptext2 02F0  
                  __ptext3 0429                    __ptext4 0412                    __ptext5 041B  
                  __ptext6 0025                    __ptext7 0263                    __ptext8 0340  
                  __ptext9 03E1               __size_of_ISR 0007                    _initOsc 0319  
                  _spiInit 03B5                    _spiRead 0412     __end_of_Lcd_Write_Char 03E1  
     end_of_initialization 0021                 ??_map_pot1 0028          __end_of_num_ascii 029A  
                _RCSTAbits 0018                 ??_spiWrite 0072                  Lcd_Port@a 0072  
                _PORTBbits 0006                  _PORTCbits 0007                spiWrite@dat 0072  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075          Lcd_Write_String@i 0030  
                _TXSTAbits 0098             _spiReceiveWait 041B             __end_of___bmul 03F6  
           __end_of___wmul 0365           _Lcd_Write_String 01D9                _BAUDCTLbits 0187  
           __end_of_conver 0263             __end_of_slave1 0319        start_initialization 000F  
              __end_of_ISR 0429          __size_of_Lcd_Init 0019          __size_of_Lcd_Port 0006  
   __end_of_spiReceiveWait 0422                   ??___bmul 0073                   ??___wmul 0076  
               init_fetch0 03F6                __pdataBANK0 0032                   ??_conver 0072  
          Lcd_Write_Char@a 0074                   ??_slave1 0073                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
        __size_of_map_pot1 00F5            ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0077  
                 ?___awdiv 0020          __size_of_spiWrite 0006                  __pstrings 0365  
                 ?_initOsc 0070                   ?_spiInit 0072                   ?_spiRead 0070  
           __size_of_Setup 002A             conver@temporal 0020       spiInit@sTransmitEdge 0074  
        interrupt_function 0004             ___wmul@product 0076                   _PIE1bits 008C  
       spiInit@sDataSample 0072                   Lcd_Cmd@a 0075                   _PIR1bits 000C  
                _num_ascii 0263                 _ADCON0bits 001F                __stringbase 0374  
        ___wmul@multiplier 0072           ??_Lcd_Write_Char 0073                   _Lcd_Init 0384  
                 _Lcd_Port 042F   __end_of_Lcd_Write_String 021F           __size_of_Lcd_Cmd 0018  
               ?_num_ascii 0070           __size_of___awdiv 0069         __end_of__stringtab 0375  
         __size_of_initOsc 0027                   __ptext10 011A                   __ptext11 0319  
                 __ptext20 0422                   __ptext12 021F                   __ptext13 02C6  
                 __ptext14 01D9                   __ptext15 03CB                   __ptext16 029A  
                 __ptext17 0384                   __ptext18 039D                   __ptext19 042F  
         __size_of_spiInit 0016           __size_of_spiRead 0009                   _map_pot1 0025  
            __size_of_main 0056                   _spiWrite 0429               spiInit@sType 0075  
        spiInit@sClockIdle 0073                 _INTCONbits 000B                   init_ram0 03FA  
                 intlevel1 0000           ??_spiReceiveWait 0072               num_ascii@num 0072  
                stringcode 036F                 _OSCCONbits 008F                ??_num_ascii 0072  
       Lcd_Set_Cursor@temp 0078                 _OPTION_REG 0081                   stringdir 036F  
                 stringtab 0365  
