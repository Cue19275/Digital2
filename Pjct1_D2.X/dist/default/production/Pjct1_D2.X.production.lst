

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Feb 12 00:59:27 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 09/04/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  000E                     	;# 
   389  000F                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001D                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  0081                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0087                     	;# 
   412  0088                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  008F                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  0105                     	;# 
   437  0107                     	;# 
   438  0108                     	;# 
   439  0109                     	;# 
   440  010C                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  010F                     	;# 
   445  0185                     	;# 
   446  0187                     	;# 
   447  0188                     	;# 
   448  0189                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000D                     	;# 
   465  000E                     	;# 
   466  000E                     	;# 
   467  000F                     	;# 
   468  0010                     	;# 
   469  0011                     	;# 
   470  0012                     	;# 
   471  0013                     	;# 
   472  0014                     	;# 
   473  0015                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0017                     	;# 
   477  0018                     	;# 
   478  0019                     	;# 
   479  001A                     	;# 
   480  001B                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  001D                     	;# 
   484  001E                     	;# 
   485  001F                     	;# 
   486  0081                     	;# 
   487  0085                     	;# 
   488  0086                     	;# 
   489  0087                     	;# 
   490  0088                     	;# 
   491  0089                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  008F                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  0105                     	;# 
   515  0107                     	;# 
   516  0108                     	;# 
   517  0109                     	;# 
   518  010C                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0187                     	;# 
   525  0188                     	;# 
   526  0189                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  0000                     	;# 
   530  0001                     	;# 
   531  0002                     	;# 
   532  0003                     	;# 
   533  0004                     	;# 
   534  0005                     	;# 
   535  0006                     	;# 
   536  0007                     	;# 
   537  0008                     	;# 
   538  0009                     	;# 
   539  000A                     	;# 
   540  000B                     	;# 
   541  000C                     	;# 
   542  000D                     	;# 
   543  000E                     	;# 
   544  000E                     	;# 
   545  000F                     	;# 
   546  0010                     	;# 
   547  0011                     	;# 
   548  0012                     	;# 
   549  0013                     	;# 
   550  0014                     	;# 
   551  0015                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001D                     	;# 
   562  001E                     	;# 
   563  001F                     	;# 
   564  0081                     	;# 
   565  0085                     	;# 
   566  0086                     	;# 
   567  0087                     	;# 
   568  0088                     	;# 
   569  0089                     	;# 
   570  008C                     	;# 
   571  008D                     	;# 
   572  008E                     	;# 
   573  008F                     	;# 
   574  0090                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0093                     	;# 
   579  0093                     	;# 
   580  0094                     	;# 
   581  0095                     	;# 
   582  0096                     	;# 
   583  0097                     	;# 
   584  0098                     	;# 
   585  0099                     	;# 
   586  009A                     	;# 
   587  009B                     	;# 
   588  009C                     	;# 
   589  009D                     	;# 
   590  009E                     	;# 
   591  009F                     	;# 
   592  0105                     	;# 
   593  0107                     	;# 
   594  0108                     	;# 
   595  0109                     	;# 
   596  010C                     	;# 
   597  010C                     	;# 
   598  010D                     	;# 
   599  010E                     	;# 
   600  010F                     	;# 
   601  0185                     	;# 
   602  0187                     	;# 
   603  0188                     	;# 
   604  0189                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  0000                     	;# 
   608  0001                     	;# 
   609  0002                     	;# 
   610  0003                     	;# 
   611  0004                     	;# 
   612  0005                     	;# 
   613  0006                     	;# 
   614  0007                     	;# 
   615  0008                     	;# 
   616  0009                     	;# 
   617  000A                     	;# 
   618  000B                     	;# 
   619  000C                     	;# 
   620  000D                     	;# 
   621  000E                     	;# 
   622  000E                     	;# 
   623  000F                     	;# 
   624  0010                     	;# 
   625  0011                     	;# 
   626  0012                     	;# 
   627  0013                     	;# 
   628  0014                     	;# 
   629  0015                     	;# 
   630  0015                     	;# 
   631  0016                     	;# 
   632  0017                     	;# 
   633  0018                     	;# 
   634  0019                     	;# 
   635  001A                     	;# 
   636  001B                     	;# 
   637  001B                     	;# 
   638  001C                     	;# 
   639  001D                     	;# 
   640  001E                     	;# 
   641  001F                     	;# 
   642  0081                     	;# 
   643  0085                     	;# 
   644  0086                     	;# 
   645  0087                     	;# 
   646  0088                     	;# 
   647  0089                     	;# 
   648  008C                     	;# 
   649  008D                     	;# 
   650  008E                     	;# 
   651  008F                     	;# 
   652  0090                     	;# 
   653  0091                     	;# 
   654  0092                     	;# 
   655  0093                     	;# 
   656  0093                     	;# 
   657  0093                     	;# 
   658  0094                     	;# 
   659  0095                     	;# 
   660  0096                     	;# 
   661  0097                     	;# 
   662  0098                     	;# 
   663  0099                     	;# 
   664  009A                     	;# 
   665  009B                     	;# 
   666  009C                     	;# 
   667  009D                     	;# 
   668  009E                     	;# 
   669  009F                     	;# 
   670  0105                     	;# 
   671  0107                     	;# 
   672  0108                     	;# 
   673  0109                     	;# 
   674  010C                     	;# 
   675  010C                     	;# 
   676  010D                     	;# 
   677  010E                     	;# 
   678  010F                     	;# 
   679  0185                     	;# 
   680  0187                     	;# 
   681  0188                     	;# 
   682  0189                     	;# 
   683  018C                     	;# 
   684  018D                     	;# 
   685  0013                     _SSPBUF	set	19
   686  0014                     _SSPCON	set	20
   687  0018                     _RCSTAbits	set	24
   688  0006                     _PORTBbits	set	6
   689  001F                     _ADCON0bits	set	31
   690  0001                     _TMR0	set	1
   691  000C                     _PIR1bits	set	12
   692  000B                     _INTCONbits	set	11
   693  0007                     _PORTCbits	set	7
   694  0008                     _PORTD	set	8
   695  0007                     _PORTC	set	7
   696  0006                     _PORTB	set	6
   697  0005                     _PORTA	set	5
   698  0094                     _SSPSTATbits	set	148
   699  0094                     _SSPSTAT	set	148
   700  0099                     _SPBRG	set	153
   701  009A                     _SPBRGH	set	154
   702  0098                     _TXSTAbits	set	152
   703  008F                     _OSCCONbits	set	143
   704  009F                     _ADCON1	set	159
   705  008C                     _PIE1bits	set	140
   706  0081                     _OPTION_REG	set	129
   707  0087                     _TRISC	set	135
   708  0086                     _TRISB	set	134
   709  0085                     _TRISA	set	133
   710  0088                     _TRISD	set	136
   711  043B                     _TRISC3	set	1083
   712  043D                     _TRISC5	set	1085
   713  0187                     _BAUDCTLbits	set	391
   714  0189                     _ANSELH	set	393
   715  0188                     _ANSELbits	set	392
   716  0188                     _ANSEL	set	392
   717                           
   718                           	psect	strings
   719  017D                     __pstrings:
   720  017D                     stringtab:
   721  017D                     __stringtab:
   722  017D                     stringcode:	
   723                           ;	String table - string pointers are 1 byte each
   724                           
   725  017D                     stringdir:
   726  017D  3001               	movlw	high stringdir
   727  017E  008A               	movwf	10
   728  017F  0804               	movf	4,w
   729  0180  0A84               	incf	4,f
   730  0181  0782               	addwf	2,f
   731  0182                     __stringbase:
   732  0182  3400               	retlw	0
   733  0183                     __end_of__stringtab:
   734  0183                     STR_1:
   735  0183  3453               	retlw	83	;'S'
   736  0184  3431               	retlw	49	;'1'
   737  0185  3420               	retlw	32	;' '
   738  0186  3420               	retlw	32	;' '
   739  0187  3420               	retlw	32	;' '
   740  0188  3420               	retlw	32	;' '
   741  0189  3453               	retlw	83	;'S'
   742  018A  3432               	retlw	50	;'2'
   743  018B  3420               	retlw	32	;' '
   744  018C  3420               	retlw	32	;' '
   745  018D  3420               	retlw	32	;' '
   746  018E  3420               	retlw	32	;' '
   747  018F  3453               	retlw	83	;'S'
   748  0190  3433               	retlw	51	;'3'
   749  0191  3400               	retlw	0
   750                           
   751                           	psect	cinit
   752  000F                     start_initialization:	
   753                           ; #config settings
   754                           
   755  000F                     __initialization:
   756                           
   757                           ; Clear objects allocated to COMMON
   758  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   759  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   760  0011                     end_of_initialization:	
   761                           ;End of C runtime variable initialization code
   762                           
   763  0011                     __end_of__initialization:
   764  0011  0183               	clrf	3
   765  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   766                           
   767                           	psect	bssCOMMON
   768  007A                     __pbssCOMMON:
   769  007A                     _basura:
   770  007A                     	ds	1
   771  007B                     _go_adc:
   772  007B                     	ds	1
   773                           
   774                           	psect	cstackCOMMON
   775  0070                     __pcstackCOMMON:
   776  0070                     ?_initOsc:
   777  0070                     ?_Setup:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_Lcd_Init:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_Lcd_Cmd:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_Lcd_Write_String:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_slave1:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_spiWrite:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?_spiRead:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_ISR:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ??_ISR:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_main:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_Lcd_Port:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_Lcd_Write_Char:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_spiReceiveWait:	
   814                           ; 1 bytes @ 0x0
   815                           
   816                           
   817                           ; 1 bytes @ 0x0
   818  0070                     	ds	2
   819  0072                     ??_initOsc:
   820  0072                     ??_Setup:	
   821                           ; 1 bytes @ 0x2
   822                           
   823  0072                     ?_spiInit:	
   824                           ; 1 bytes @ 0x2
   825                           
   826  0072                     ??_spiWrite:	
   827                           ; 1 bytes @ 0x2
   828                           
   829  0072                     ??_spiRead:	
   830                           ; 1 bytes @ 0x2
   831                           
   832  0072                     ??_Lcd_Port:	
   833                           ; 1 bytes @ 0x2
   834                           
   835  0072                     ??_spiReceiveWait:	
   836                           ; 1 bytes @ 0x2
   837                           
   838  0072                     Lcd_Port@a:	
   839                           ; 1 bytes @ 0x2
   840                           
   841  0072                     initOsc@frec:	
   842                           ; 1 bytes @ 0x2
   843                           
   844  0072                     spiInit@sDataSample:	
   845                           ; 1 bytes @ 0x2
   846                           
   847  0072                     spiWrite@dat:	
   848                           ; 1 bytes @ 0x2
   849                           
   850                           
   851                           ; 1 bytes @ 0x2
   852  0072                     	ds	1
   853  0073                     ??_Lcd_Cmd:
   854  0073                     ??_slave1:	
   855                           ; 1 bytes @ 0x3
   856                           
   857  0073                     ??_Lcd_Write_Char:	
   858                           ; 1 bytes @ 0x3
   859                           
   860  0073                     spiInit@sClockIdle:	
   861                           ; 1 bytes @ 0x3
   862                           
   863                           
   864                           ; 1 bytes @ 0x3
   865  0073                     	ds	1
   866  0074                     Lcd_Write_Char@a:
   867  0074                     spiInit@sTransmitEdge:	
   868                           ; 1 bytes @ 0x4
   869                           
   870                           
   871                           ; 1 bytes @ 0x4
   872  0074                     	ds	1
   873  0075                     ??_spiInit:
   874  0075                     ??_Lcd_Write_String:	
   875                           ; 1 bytes @ 0x5
   876                           
   877  0075                     Lcd_Cmd@a:	
   878                           ; 1 bytes @ 0x5
   879                           
   880  0075                     spiInit@sType:	
   881                           ; 1 bytes @ 0x5
   882                           
   883  0075                     Lcd_Write_String@i:	
   884                           ; 1 bytes @ 0x5
   885                           
   886                           
   887                           ; 2 bytes @ 0x5
   888  0075                     	ds	1
   889  0076                     ??_Lcd_Init:
   890  0076                     ?_Lcd_Set_Cursor:	
   891                           ; 1 bytes @ 0x6
   892                           
   893  0076                     Lcd_Set_Cursor@b:	
   894                           ; 1 bytes @ 0x6
   895                           
   896                           
   897                           ; 1 bytes @ 0x6
   898  0076                     	ds	1
   899  0077                     ??_Lcd_Set_Cursor:
   900  0077                     Lcd_Set_Cursor@a:	
   901                           ; 1 bytes @ 0x7
   902                           
   903  0077                     Lcd_Write_String@a:	
   904                           ; 1 bytes @ 0x7
   905                           
   906                           
   907                           ; 1 bytes @ 0x7
   908  0077                     	ds	1
   909  0078                     Lcd_Set_Cursor@temp:
   910                           
   911                           ; 1 bytes @ 0x8
   912  0078                     	ds	1
   913  0079                     Lcd_Set_Cursor@z:
   914                           
   915                           ; 1 bytes @ 0x9
   916  0079                     	ds	1
   917  007A                     ??_main:
   918                           
   919                           	psect	maintext
   920  0015                     __pmaintext:	
   921                           ; 1 bytes @ 0xA
   922 ;;
   923 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   924 ;;
   925 ;; *************** function _main *****************
   926 ;; Defined at:
   927 ;;		line 68 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : B00/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0
   944 ;;      Totals:         0       0       0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels required when called:    4
   947 ;; This function calls:
   948 ;;		_Lcd_Cmd
   949 ;;		_Lcd_Init
   950 ;;		_Lcd_Set_Cursor
   951 ;;		_Lcd_Write_String
   952 ;;		_Setup
   953 ;;		_initOsc
   954 ;;		_slave1
   955 ;;		_spiInit
   956 ;; This function is called by:
   957 ;;		Startup code after reset
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _main
   963  0015                     _main:
   964  0015                     l1051:	
   965                           ;incstack = 0
   966                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   967                           
   968                           
   969                           ;main.c: 69: TRISD = 0x00;
   970  0015  1683               	bsf	3,5	;RP0=1, select bank1
   971  0016  1303               	bcf	3,6	;RP1=0, select bank1
   972  0017  0188               	clrf	8	;volatile
   973  0018                     l1053:
   974                           
   975                           ;main.c: 70: initOsc(20);
   976  0018  3014               	movlw	20
   977  0019  120A  118A  20D4  120A  118A  	fcall	_initOsc
   978  001E                     l1055:
   979                           
   980                           ;main.c: 71: Setup();
   981  001E  120A  118A  2082  120A  118A  	fcall	_Setup
   982  0023                     l1057:
   983                           
   984                           ;main.c: 72: spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   985  0023  01F2               	clrf	spiInit@sDataSample
   986  0024  01F3               	clrf	spiInit@sClockIdle
   987  0025  01F4               	clrf	spiInit@sTransmitEdge
   988  0026  3020               	movlw	32
   989  0027  120A  118A  2151  120A  118A  	fcall	_spiInit
   990  002C                     l1059:
   991                           
   992                           ;main.c: 74: Lcd_Init();
   993  002C  120A  118A  2120  120A  118A  	fcall	_Lcd_Init
   994  0031                     l1061:
   995                           
   996                           ;main.c: 75: Lcd_Cmd(0x8A);
   997  0031  308A               	movlw	138
   998  0032  120A  118A  2139  120A  118A  	fcall	_Lcd_Cmd
   999  0037                     l1063:
  1000                           
  1001                           ;main.c: 77: Lcd_Set_Cursor(1,1);
  1002  0037  01F6               	clrf	Lcd_Set_Cursor@b
  1003  0038  0AF6               	incf	Lcd_Set_Cursor@b,f
  1004  0039  3001               	movlw	1
  1005  003A  120A  118A  2056  120A  118A  	fcall	_Lcd_Set_Cursor
  1006  003F                     l1065:
  1007                           
  1008                           ;main.c: 78: Lcd_Write_String("S1    S2    S3");
  1009  003F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1010  0040  120A  118A  20FB  120A  118A  	fcall	_Lcd_Write_String
  1011  0045                     l1067:
  1012                           
  1013                           ;main.c: 79: Lcd_Set_Cursor(2,1);
  1014  0045  01F6               	clrf	Lcd_Set_Cursor@b
  1015  0046  0AF6               	incf	Lcd_Set_Cursor@b,f
  1016  0047  3002               	movlw	2
  1017  0048  120A  118A  2056  120A  118A  	fcall	_Lcd_Set_Cursor
  1018  004D                     l1069:
  1019                           
  1020                           ;main.c: 80: slave1();
  1021  004D  120A  118A  20AD  120A  118A  	fcall	_slave1
  1022  0052  2837               	goto	l1063
  1023  0053  120A  118A  280C   	ljmp	start
  1024  0056                     __end_of_main:
  1025                           
  1026                           	psect	text1
  1027  0151                     __ptext1:	
  1028 ;; *************** function _spiInit *****************
  1029 ;; Defined at:
  1030 ;;		line 12 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  sType           1    wreg     enum E1265
  1033 ;;  sDataSample     1    2[COMMON] enum E1273
  1034 ;;  sClockIdle      1    3[COMMON] enum E1277
  1035 ;;  sTransmitEdg    1    4[COMMON] enum E1281
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  sType           1    5[COMMON] enum E1265
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         3       0       0       0       0
  1048 ;;      Locals:         1       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0
  1050 ;;      Totals:         4       0       0       0       0
  1051 ;;Total ram usage:        4 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _spiInit
  1063  0151                     _spiInit:
  1064                           
  1065                           ;incstack = 0
  1066                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1067                           ;spiInit@sType stored from wreg
  1068  0151  00F5               	movwf	spiInit@sType
  1069  0152                     l1017:
  1070                           
  1071                           ;SPI.c: 14: TRISC5 = 0;
  1072  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1073  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1074  0154  1287               	bcf	7,5	;volatile
  1075                           
  1076                           ;SPI.c: 15: if(sType & 0b00000100)
  1077  0155  1D75               	btfss	spiInit@sType,2
  1078  0156  2958               	goto	u61
  1079  0157  2959               	goto	u60
  1080  0158                     u61:
  1081  0158  295D               	goto	l1023
  1082  0159                     u60:
  1083  0159                     l1019:
  1084                           
  1085                           ;SPI.c: 16: {;SPI.c: 17: SSPSTAT = sTransmitEdge;
  1086  0159  0874               	movf	spiInit@sTransmitEdge,w
  1087  015A  0094               	movwf	20	;volatile
  1088  015B                     l1021:
  1089                           
  1090                           ;SPI.c: 18: TRISC3 = 1;
  1091  015B  1587               	bsf	7,3	;volatile
  1092                           
  1093                           ;SPI.c: 19: }
  1094  015C  2961               	goto	l205
  1095  015D                     l1023:
  1096                           
  1097                           ;SPI.c: 20: else;SPI.c: 21: {;SPI.c: 22: SSPSTAT = sDataSample | sTransmitEdge;
  1098  015D  0872               	movf	spiInit@sDataSample,w
  1099  015E  0474               	iorwf	spiInit@sTransmitEdge,w
  1100  015F  0094               	movwf	20	;volatile
  1101  0160                     l1025:
  1102                           
  1103                           ;SPI.c: 23: TRISC3 = 0;
  1104  0160  1187               	bcf	7,3	;volatile
  1105  0161                     l205:
  1106                           
  1107                           ;SPI.c: 24: };SPI.c: 26: SSPCON = sType | sClockIdle;
  1108  0161  0875               	movf	spiInit@sType,w
  1109  0162  0473               	iorwf	spiInit@sClockIdle,w
  1110  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0165  0094               	movwf	20	;volatile
  1113  0166                     l206:
  1114  0166  0008               	return
  1115  0167                     __end_of_spiInit:
  1116                           
  1117                           	psect	text2
  1118  00AD                     __ptext2:	
  1119 ;; *************** function _slave1 *****************
  1120 ;; Defined at:
  1121 ;;		line 129 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, pclath, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0
  1137 ;;      Temps:          2       0       0       0       0
  1138 ;;      Totals:         2       0       0       0       0
  1139 ;;Total ram usage:        2 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    3
  1142 ;; This function calls:
  1143 ;;		_spiRead
  1144 ;;		_spiWrite
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _slave1
  1152  00AD                     _slave1:
  1153  00AD                     l921:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _slave1: [wreg+status,2+status,0+pclath+cstack]
  1156                           
  1157                           
  1158                           ;main.c: 130: PORTCbits.RC2 = 0;
  1159  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1160  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1161  00AF  1107               	bcf	7,2	;volatile
  1162  00B0                     l923:
  1163                           
  1164                           ;main.c: 131: _delay((unsigned long)((1)*(40000000/4000.0)));
  1165  00B0  300D               	movlw	13
  1166  00B1  00F4               	movwf	??_slave1+1
  1167  00B2  30FB               	movlw	251
  1168  00B3  00F3               	movwf	??_slave1
  1169  00B4                     u107:
  1170  00B4  0BF3               	decfsz	??_slave1,f
  1171  00B5  28B4               	goto	u107
  1172  00B6  0BF4               	decfsz	??_slave1+1,f
  1173  00B7  28B4               	goto	u107
  1174  00B8  28B9               	nop2
  1175  00B9                     l925:
  1176                           
  1177                           ;main.c: 133: spiWrite(basura);
  1178  00B9  3000               	movlw	0
  1179  00BA  120A  118A  21A9  120A  118A  	fcall	_spiWrite
  1180  00BF                     l927:
  1181                           
  1182                           ;main.c: 134: PORTA = spiRead();
  1183  00BF  120A  118A  2192  120A  118A  	fcall	_spiRead
  1184  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1185  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1186  00C6  0085               	movwf	5	;volatile
  1187                           
  1188                           ;main.c: 136: _delay((unsigned long)((1)*(40000000/4000.0)));
  1189  00C7  300D               	movlw	13
  1190  00C8  00F4               	movwf	??_slave1+1
  1191  00C9  30FB               	movlw	251
  1192  00CA  00F3               	movwf	??_slave1
  1193  00CB                     u117:
  1194  00CB  0BF3               	decfsz	??_slave1,f
  1195  00CC  28CB               	goto	u117
  1196  00CD  0BF4               	decfsz	??_slave1+1,f
  1197  00CE  28CB               	goto	u117
  1198  00CF  28D0               	nop2
  1199  00D0                     l929:
  1200                           
  1201                           ;main.c: 137: PORTCbits.RC2 = 1;
  1202  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1203  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1204  00D2  1507               	bsf	7,2	;volatile
  1205  00D3                     l79:
  1206  00D3  0008               	return
  1207  00D4                     __end_of_slave1:
  1208                           
  1209                           	psect	text3
  1210  01A9                     __ptext3:	
  1211 ;; *************** function _spiWrite *****************
  1212 ;; Defined at:
  1213 ;;		line 34 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  dat             1    wreg     unsigned char 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  dat             1    2[COMMON] unsigned char 
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1227 ;;      Params:         0       0       0       0       0
  1228 ;;      Locals:         1       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0
  1230 ;;      Totals:         1       0       0       0       0
  1231 ;;Total ram usage:        1 bytes
  1232 ;; Hardware stack levels used:    1
  1233 ;; Hardware stack levels required when called:    1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_slave1
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _spiWrite
  1243  01A9                     _spiWrite:
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _spiWrite: [wreg]
  1247                           ;spiWrite@dat stored from wreg
  1248  01A9  00F2               	movwf	spiWrite@dat
  1249  01AA                     l829:
  1250                           
  1251                           ;SPI.c: 36: SSPBUF = dat;
  1252  01AA  0872               	movf	spiWrite@dat,w
  1253  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1254  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1255  01AD  0093               	movwf	19	;volatile
  1256  01AE                     l215:
  1257  01AE  0008               	return
  1258  01AF                     __end_of_spiWrite:
  1259                           
  1260                           	psect	text4
  1261  0192                     __ptext4:	
  1262 ;; *************** function _spiRead *****************
  1263 ;; Defined at:
  1264 ;;		line 49 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      unsigned char 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0
  1281 ;;      Totals:         0       0       0       0       0
  1282 ;;Total ram usage:        0 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    2
  1285 ;; This function calls:
  1286 ;;		_spiReceiveWait
  1287 ;; This function is called by:
  1288 ;;		_slave1
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _spiRead
  1294  0192                     _spiRead:
  1295  0192                     l831:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1298                           
  1299                           
  1300                           ;SPI.c: 51: spiReceiveWait();
  1301  0192  120A  118A  219B  120A  118A  	fcall	_spiReceiveWait
  1302  0197                     l833:
  1303                           
  1304                           ;SPI.c: 52: return(SSPBUF);
  1305  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0199  0813               	movf	19,w	;volatile
  1308  019A                     l223:
  1309  019A  0008               	return
  1310  019B                     __end_of_spiRead:
  1311                           
  1312                           	psect	text5
  1313  019B                     __ptext5:	
  1314 ;; *************** function _spiReceiveWait *****************
  1315 ;; Defined at:
  1316 ;;		line 29 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/SPI.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		None
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0
  1333 ;;      Totals:         0       0       0       0       0
  1334 ;;Total ram usage:        0 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    1
  1337 ;; This function calls:
  1338 ;;		Nothing
  1339 ;; This function is called by:
  1340 ;;		_spiRead
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           
  1345                           ;psect for function _spiReceiveWait
  1346  019B                     _spiReceiveWait:
  1347  019B                     l817:	
  1348                           ;incstack = 0
  1349                           ; Regs used in _spiReceiveWait: []
  1350                           
  1351  019B                     l209:	
  1352                           ;SPI.c: 31: while ( !SSPSTATbits.BF );
  1353                           
  1354  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1355  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1356  019D  1C14               	btfss	20,0	;volatile
  1357  019E  29A0               	goto	u11
  1358  019F  29A1               	goto	u10
  1359  01A0                     u11:
  1360  01A0  299B               	goto	l209
  1361  01A1                     u10:
  1362  01A1                     l212:
  1363  01A1  0008               	return
  1364  01A2                     __end_of_spiReceiveWait:
  1365                           
  1366                           	psect	text6
  1367  00D4                     __ptext6:	
  1368 ;; *************** function _initOsc *****************
  1369 ;; Defined at:
  1370 ;;		line 7 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/Osc.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  frec            1    wreg     unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  frec            1    2[COMMON] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0
  1387 ;;      Totals:         1       0       0       0       0
  1388 ;;Total ram usage:        1 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _initOsc
  1400  00D4                     _initOsc:
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1404                           ;initOsc@frec stored from wreg
  1405  00D4  00F2               	movwf	initOsc@frec
  1406  00D5                     l849:
  1407                           
  1408                           ;Osc.c: 8: switch(frec){
  1409  00D5  28EE               	goto	l853
  1410  00D6                     l171:	
  1411                           ;Osc.c: 9: case 0:
  1412                           
  1413                           
  1414                           ;Osc.c: 10: OSCCONbits.IRCF0 = 0;
  1415  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  1416  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  1417  00D8  120F               	bcf	15,4	;volatile
  1418                           
  1419                           ;Osc.c: 11: OSCCONbits.IRCF1 = 0;
  1420  00D9  128F               	bcf	15,5	;volatile
  1421                           
  1422                           ;Osc.c: 12: OSCCONbits.IRCF2 = 0;
  1423  00DA  130F               	bcf	15,6	;volatile
  1424                           
  1425                           ;Osc.c: 13: break;
  1426  00DB  28F9               	goto	l172
  1427  00DC                     l173:	
  1428                           ;Osc.c: 14: case 1:
  1429                           
  1430                           
  1431                           ;Osc.c: 15: OSCCONbits.IRCF0 = 1;
  1432  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  1433  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  1434  00DE  160F               	bsf	15,4	;volatile
  1435                           
  1436                           ;Osc.c: 16: OSCCONbits.IRCF1 = 0;
  1437  00DF  128F               	bcf	15,5	;volatile
  1438                           
  1439                           ;Osc.c: 17: OSCCONbits.IRCF2 = 0;
  1440  00E0  130F               	bcf	15,6	;volatile
  1441                           
  1442                           ;Osc.c: 18: break;
  1443  00E1  28F9               	goto	l172
  1444  00E2                     l174:	
  1445                           ;Osc.c: 26: case 7:
  1446                           
  1447                           
  1448                           ;Osc.c: 27: OSCCONbits.IRCF0 = 1;
  1449  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1450  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1451  00E4  160F               	bsf	15,4	;volatile
  1452                           
  1453                           ;Osc.c: 28: OSCCONbits.IRCF1 = 1;
  1454  00E5  168F               	bsf	15,5	;volatile
  1455                           
  1456                           ;Osc.c: 29: OSCCONbits.IRCF2 = 1;
  1457  00E6  170F               	bsf	15,6	;volatile
  1458                           
  1459                           ;Osc.c: 30: break;
  1460  00E7  28F9               	goto	l172
  1461  00E8                     l175:	
  1462                           ;Osc.c: 31: default:
  1463                           
  1464                           
  1465                           ;Osc.c: 32: OSCCONbits.IRCF0 = 0;
  1466  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  1467  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  1468  00EA  120F               	bcf	15,4	;volatile
  1469                           
  1470                           ;Osc.c: 33: OSCCONbits.IRCF1 = 1;
  1471  00EB  168F               	bsf	15,5	;volatile
  1472                           
  1473                           ;Osc.c: 34: OSCCONbits.IRCF2 = 1;
  1474  00EC  170F               	bsf	15,6	;volatile
  1475                           
  1476                           ;Osc.c: 35: break;
  1477  00ED  28F9               	goto	l172
  1478  00EE                     l853:
  1479  00EE  0872               	movf	initOsc@frec,w
  1480                           
  1481                           ; Switch size 1, requested type "simple"
  1482                           ; Number of cases is 3, Range of values is 0 to 7
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte           10     6 (average)
  1486                           ; direct_byte           32     8 (fixed)
  1487                           ; jumptable            260     6 (fixed)
  1488                           ;	Chosen strategy is simple_byte
  1489  00EF  3A00               	xorlw	0	; case 0
  1490  00F0  1903               	skipnz
  1491  00F1  28D6               	goto	l171
  1492  00F2  3A01               	xorlw	1	; case 1
  1493  00F3  1903               	skipnz
  1494  00F4  28DC               	goto	l173
  1495  00F5  3A06               	xorlw	6	; case 7
  1496  00F6  1903               	skipnz
  1497  00F7  28E2               	goto	l174
  1498  00F8  28E8               	goto	l175
  1499  00F9                     l172:
  1500                           
  1501                           ;Osc.c: 38: OSCCONbits.SCS = 1;
  1502  00F9  140F               	bsf	15,0	;volatile
  1503  00FA                     l176:
  1504  00FA  0008               	return
  1505  00FB                     __end_of_initOsc:
  1506                           
  1507                           	psect	text7
  1508  0082                     __ptext7:	
  1509 ;; *************** function _Setup *****************
  1510 ;; Defined at:
  1511 ;;		line 91 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;		None
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         0       0       0       0       0
  1526 ;;      Locals:         0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0
  1528 ;;      Totals:         0       0       0       0       0
  1529 ;;Total ram usage:        0 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function _Setup
  1541  0082                     _Setup:
  1542  0082                     l855:	
  1543                           ;incstack = 0
  1544                           ; Regs used in _Setup: [wreg+status,2]
  1545                           
  1546                           
  1547                           ;main.c: 93: PORTA = 0;
  1548  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0084  0185               	clrf	5	;volatile
  1551                           
  1552                           ;main.c: 94: PORTB = 0;
  1553  0085  0186               	clrf	6	;volatile
  1554                           
  1555                           ;main.c: 95: PORTC = 0;
  1556  0086  0187               	clrf	7	;volatile
  1557                           
  1558                           ;main.c: 96: PORTD = 0;
  1559  0087  0188               	clrf	8	;volatile
  1560                           
  1561                           ;main.c: 97: ANSEL = 0;
  1562  0088  1683               	bsf	3,5	;RP0=1, select bank3
  1563  0089  1703               	bsf	3,6	;RP1=1, select bank3
  1564  008A  0188               	clrf	8	;volatile
  1565  008B                     l857:
  1566                           
  1567                           ;main.c: 98: ANSELbits.ANS0 = 1;
  1568  008B  1408               	bsf	8,0	;volatile
  1569                           
  1570                           ;main.c: 99: ANSELH = 0;
  1571  008C  0189               	clrf	9	;volatile
  1572                           
  1573                           ;main.c: 100: TRISA = 0b00000000;
  1574  008D  1683               	bsf	3,5	;RP0=1, select bank1
  1575  008E  1303               	bcf	3,6	;RP1=0, select bank1
  1576  008F  0185               	clrf	5	;volatile
  1577  0090                     l859:
  1578                           
  1579                           ;main.c: 101: TRISB = 0b00011000;
  1580  0090  3018               	movlw	24
  1581  0091  0086               	movwf	6	;volatile
  1582  0092                     l861:
  1583                           
  1584                           ;main.c: 102: TRISD = 0;
  1585  0092  0188               	clrf	8	;volatile
  1586                           
  1587                           ;main.c: 103: TRISC = 0b00010000;
  1588  0093  3010               	movlw	16
  1589  0094  0087               	movwf	7	;volatile
  1590  0095                     l863:
  1591                           
  1592                           ;main.c: 104: PORTCbits.RC2 = 1;
  1593  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0097  1507               	bsf	7,2	;volatile
  1596  0098                     l865:
  1597                           
  1598                           ;main.c: 105: INTCONbits.TMR0IF = 0;
  1599  0098  110B               	bcf	11,2	;volatile
  1600  0099                     l867:
  1601                           
  1602                           ;main.c: 106: PIR1bits.ADIF = 0;
  1603  0099  130C               	bcf	12,6	;volatile
  1604  009A                     l869:
  1605                           
  1606                           ;main.c: 107: INTCONbits.RBIF = 0;
  1607  009A  100B               	bcf	11,0	;volatile
  1608                           
  1609                           ;main.c: 110: OPTION_REG = 0b11010111;
  1610  009B  30D7               	movlw	215
  1611  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1612  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1613  009E  0081               	movwf	1	;volatile
  1614  009F                     l871:
  1615                           
  1616                           ;main.c: 113: INTCONbits.GIE = 0;
  1617  009F  138B               	bcf	11,7	;volatile
  1618  00A0                     l873:
  1619                           
  1620                           ;main.c: 114: INTCONbits.PEIE = 0;
  1621  00A0  130B               	bcf	11,6	;volatile
  1622  00A1                     l875:
  1623                           
  1624                           ;main.c: 116: INTCONbits.RBIE = 0;
  1625  00A1  118B               	bcf	11,3	;volatile
  1626  00A2                     l877:
  1627                           
  1628                           ;main.c: 117: PIE1bits.ADIE = 1;
  1629  00A2  170C               	bsf	12,6	;volatile
  1630  00A3                     l879:
  1631                           
  1632                           ;main.c: 118: INTCONbits.T0IE = 1;
  1633  00A3  168B               	bsf	11,5	;volatile
  1634                           
  1635                           ;main.c: 119: TMR0 = 236;
  1636  00A4  30EC               	movlw	236
  1637  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1638  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1639  00A7  0081               	movwf	1	;volatile
  1640  00A8                     l881:
  1641                           
  1642                           ;main.c: 121: PIE1bits.TXIE = 1;
  1643  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1644  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1645  00AA  160C               	bsf	12,4	;volatile
  1646  00AB                     l883:
  1647                           
  1648                           ;main.c: 123: PIE1bits.SSPIE = 1;
  1649  00AB  158C               	bsf	12,3	;volatile
  1650  00AC                     l76:
  1651  00AC  0008               	return
  1652  00AD                     __end_of_Setup:
  1653                           
  1654                           	psect	text8
  1655  00FB                     __ptext8:	
  1656 ;; *************** function _Lcd_Write_String *****************
  1657 ;; Defined at:
  1658 ;;		line 63 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  a               1    wreg     PTR unsigned char 
  1661 ;;		 -> STR_1(15), 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  a               1    7[COMMON] PTR unsigned char 
  1664 ;;		 -> STR_1(15), 
  1665 ;;  i               2    5[COMMON] int 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         0       0       0       0       0
  1676 ;;      Locals:         3       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0
  1678 ;;      Totals:         3       0       0       0       0
  1679 ;;Total ram usage:        3 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    3
  1682 ;; This function calls:
  1683 ;;		_Lcd_Write_Char
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           
  1690                           ;psect for function _Lcd_Write_String
  1691  00FB                     _Lcd_Write_String:
  1692                           
  1693                           ;incstack = 0
  1694                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1695                           ;Lcd_Write_String@a stored from wreg
  1696  00FB  00F7               	movwf	Lcd_Write_String@a
  1697  00FC                     l1043:
  1698                           
  1699                           ;LCD8BIT.c: 65: int i;;LCD8BIT.c: 66: for(i=0;a[i]!='\0';i++)
  1700  00FC  01F5               	clrf	Lcd_Write_String@i
  1701  00FD  01F6               	clrf	Lcd_Write_String@i+1
  1702  00FE  2912               	goto	l1049
  1703  00FF                     l1045:
  1704                           
  1705                           ;LCD8BIT.c: 67: Lcd_Write_Char(a[i]);
  1706  00FF  0875               	movf	Lcd_Write_String@i,w
  1707  0100  0777               	addwf	Lcd_Write_String@a,w
  1708  0101  0084               	movwf	4
  1709  0102  120A  118A  217D  120A  118A  	fcall	stringdir
  1710  0107  120A  118A  2167  120A  118A  	fcall	_Lcd_Write_Char
  1711  010C                     l1047:
  1712  010C  3001               	movlw	1
  1713  010D  07F5               	addwf	Lcd_Write_String@i,f
  1714  010E  1803               	skipnc
  1715  010F  0AF6               	incf	Lcd_Write_String@i+1,f
  1716  0110  3000               	movlw	0
  1717  0111  07F6               	addwf	Lcd_Write_String@i+1,f
  1718  0112                     l1049:
  1719  0112  0875               	movf	Lcd_Write_String@i,w
  1720  0113  0777               	addwf	Lcd_Write_String@a,w
  1721  0114  0084               	movwf	4
  1722  0115  120A  118A  217D  120A  118A  	fcall	stringdir
  1723  011A  3A00               	xorlw	0
  1724  011B  1D03               	skipz
  1725  011C  291E               	goto	u91
  1726  011D  291F               	goto	u90
  1727  011E                     u91:
  1728  011E  28FF               	goto	l1045
  1729  011F                     u90:
  1730  011F                     l159:
  1731  011F  0008               	return
  1732  0120                     __end_of_Lcd_Write_String:
  1733                           
  1734                           	psect	text9
  1735  0167                     __ptext9:	
  1736 ;; *************** function _Lcd_Write_Char *****************
  1737 ;; Defined at:
  1738 ;;		line 53 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  a               1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  a               1    4[COMMON] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0
  1754 ;;      Temps:          1       0       0       0       0
  1755 ;;      Totals:         2       0       0       0       0
  1756 ;;Total ram usage:        2 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    2
  1759 ;; This function calls:
  1760 ;;		_Lcd_Port
  1761 ;; This function is called by:
  1762 ;;		_Lcd_Write_String
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _Lcd_Write_Char
  1768  0167                     _Lcd_Write_Char:
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1772                           ;Lcd_Write_Char@a stored from wreg
  1773  0167  00F4               	movwf	Lcd_Write_Char@a
  1774  0168                     l837:
  1775                           
  1776                           ;LCD8BIT.c: 55: PORTBbits.RB1 = 1;
  1777  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1779  016A  1486               	bsf	6,1	;volatile
  1780  016B                     l839:
  1781                           
  1782                           ;LCD8BIT.c: 56: Lcd_Port(a);
  1783  016B  0874               	movf	Lcd_Write_Char@a,w
  1784  016C  120A  118A  21AF  120A  118A  	fcall	_Lcd_Port
  1785  0171                     l841:
  1786                           
  1787                           ;LCD8BIT.c: 57: PORTBbits.RB0 = 1;
  1788  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0173  1406               	bsf	6,0	;volatile
  1791  0174                     l843:
  1792                           
  1793                           ;LCD8BIT.c: 58: _delay((unsigned long)((40)*(40000000/4000000.0)));
  1794  0174  3085               	movlw	133
  1795  0175  00F3               	movwf	??_Lcd_Write_Char
  1796  0176                     u127:
  1797  0176  0BF3               	decfsz	??_Lcd_Write_Char,f
  1798  0177  2976               	goto	u127
  1799  0178                     l845:
  1800                           
  1801                           ;LCD8BIT.c: 59: PORTBbits.RB0 = 0;
  1802  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1804  017A  1006               	bcf	6,0	;volatile
  1805  017B                     l847:
  1806                           
  1807                           ;LCD8BIT.c: 60: PORTBbits.RB1 = 0;
  1808  017B  1086               	bcf	6,1	;volatile
  1809  017C                     l153:
  1810  017C  0008               	return
  1811  017D                     __end_of_Lcd_Write_Char:
  1812                           
  1813                           	psect	text10
  1814  0056                     __ptext10:	
  1815 ;; *************** function _Lcd_Set_Cursor *****************
  1816 ;; Defined at:
  1817 ;;		line 35 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  a               1    wreg     unsigned char 
  1820 ;;  b               1    6[COMMON] unsigned char 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  a               1    7[COMMON] unsigned char 
  1823 ;;  z               1    9[COMMON] unsigned char 
  1824 ;;  temp            1    8[COMMON] unsigned char 
  1825 ;;  y               1    0        unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1835 ;;      Params:         1       0       0       0       0
  1836 ;;      Locals:         3       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0
  1838 ;;      Totals:         4       0       0       0       0
  1839 ;;Total ram usage:        4 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    3
  1842 ;; This function calls:
  1843 ;;		_Lcd_Cmd
  1844 ;; This function is called by:
  1845 ;;		_main
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _Lcd_Set_Cursor
  1851  0056                     _Lcd_Set_Cursor:
  1852                           
  1853                           ;incstack = 0
  1854                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1855                           ;Lcd_Set_Cursor@a stored from wreg
  1856  0056  00F7               	movwf	Lcd_Set_Cursor@a
  1857  0057                     l1027:
  1858                           
  1859                           ;LCD8BIT.c: 37: char temp,z,y;;LCD8BIT.c: 38: if(a == 1)
  1860  0057  0377               	decf	Lcd_Set_Cursor@a,w
  1861  0058  1D03               	btfss	3,2
  1862  0059  285B               	goto	u71
  1863  005A  285C               	goto	u70
  1864  005B                     u71:
  1865  005B  286C               	goto	l1035
  1866  005C                     u70:
  1867  005C                     l1029:
  1868                           
  1869                           ;LCD8BIT.c: 39: {;LCD8BIT.c: 40: temp = 0x80 + b - 1;
  1870  005C  0876               	movf	Lcd_Set_Cursor@b,w
  1871  005D  3E7F               	addlw	127
  1872  005E  00FF               	movwf	btemp+1
  1873  005F  087F               	movf	btemp+1,w
  1874  0060  00F8               	movwf	Lcd_Set_Cursor@temp
  1875  0061                     l1031:
  1876                           
  1877                           ;LCD8BIT.c: 41: z = temp;
  1878  0061  0878               	movf	Lcd_Set_Cursor@temp,w
  1879  0062  00FF               	movwf	btemp+1
  1880  0063  087F               	movf	btemp+1,w
  1881  0064  00F9               	movwf	Lcd_Set_Cursor@z
  1882  0065                     l1033:
  1883                           
  1884                           ;LCD8BIT.c: 42: Lcd_Cmd(z);
  1885  0065  0879               	movf	Lcd_Set_Cursor@z,w
  1886  0066  120A  118A  2139  120A  118A  	fcall	_Lcd_Cmd
  1887                           
  1888                           ;LCD8BIT.c: 43: }
  1889  006B  2881               	goto	l150
  1890  006C                     l1035:
  1891                           
  1892                           ;LCD8BIT.c: 44: else if(a == 2)
  1893  006C  3002               	movlw	2
  1894  006D  0677               	xorwf	Lcd_Set_Cursor@a,w
  1895  006E  1D03               	btfss	3,2
  1896  006F  2871               	goto	u81
  1897  0070  2872               	goto	u80
  1898  0071                     u81:
  1899  0071  2881               	goto	l150
  1900  0072                     u80:
  1901  0072                     l1037:
  1902                           
  1903                           ;LCD8BIT.c: 45: {;LCD8BIT.c: 46: temp = 0xC0 + b - 1;
  1904  0072  0876               	movf	Lcd_Set_Cursor@b,w
  1905  0073  3EBF               	addlw	191
  1906  0074  00FF               	movwf	btemp+1
  1907  0075  087F               	movf	btemp+1,w
  1908  0076  00F8               	movwf	Lcd_Set_Cursor@temp
  1909  0077                     l1039:
  1910                           
  1911                           ;LCD8BIT.c: 47: z = temp;
  1912  0077  0878               	movf	Lcd_Set_Cursor@temp,w
  1913  0078  00FF               	movwf	btemp+1
  1914  0079  087F               	movf	btemp+1,w
  1915  007A  00F9               	movwf	Lcd_Set_Cursor@z
  1916  007B                     l1041:
  1917                           
  1918                           ;LCD8BIT.c: 48: Lcd_Cmd(z);
  1919  007B  0879               	movf	Lcd_Set_Cursor@z,w
  1920  007C  120A  118A  2139  120A  118A  	fcall	_Lcd_Cmd
  1921  0081                     l150:
  1922  0081  0008               	return
  1923  0082                     __end_of_Lcd_Set_Cursor:
  1924                           
  1925                           	psect	text11
  1926  0120                     __ptext11:	
  1927 ;; *************** function _Lcd_Init *****************
  1928 ;; Defined at:
  1929 ;;		line 10 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0
  1946 ;;      Totals:         0       0       0       0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    3
  1950 ;; This function calls:
  1951 ;;		_Lcd_Cmd
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _Lcd_Init
  1959  0120                     _Lcd_Init:
  1960  0120                     l895:	
  1961                           ;incstack = 0
  1962                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1963                           
  1964                           
  1965                           ;LCD8BIT.c: 12: Lcd_Cmd(0x38);
  1966  0120  3038               	movlw	56
  1967  0121  120A  118A  2139  120A  118A  	fcall	_Lcd_Cmd
  1968                           
  1969                           ;LCD8BIT.c: 13: Lcd_Cmd(0x0c);
  1970  0126  300C               	movlw	12
  1971  0127  120A  118A  2139  120A  118A  	fcall	_Lcd_Cmd
  1972                           
  1973                           ;LCD8BIT.c: 14: Lcd_Cmd(0x06);
  1974  012C  3006               	movlw	6
  1975  012D  120A  118A  2139  120A  118A  	fcall	_Lcd_Cmd
  1976                           
  1977                           ;LCD8BIT.c: 15: Lcd_Cmd(0x80);
  1978  0132  3080               	movlw	128
  1979  0133  120A  118A  2139  120A  118A  	fcall	_Lcd_Cmd
  1980  0138                     l138:
  1981  0138  0008               	return
  1982  0139                     __end_of_Lcd_Init:
  1983                           
  1984                           	psect	text12
  1985  0139                     __ptext12:	
  1986 ;; *************** function _Lcd_Cmd *****************
  1987 ;; Defined at:
  1988 ;;		line 19 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  a               1    wreg     unsigned char 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  a               1    5[COMMON] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       0       0       0       0
  2003 ;;      Locals:         1       0       0       0       0
  2004 ;;      Temps:          2       0       0       0       0
  2005 ;;      Totals:         3       0       0       0       0
  2006 ;;Total ram usage:        3 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    2
  2009 ;; This function calls:
  2010 ;;		_Lcd_Port
  2011 ;; This function is called by:
  2012 ;;		_main
  2013 ;;		_Lcd_Init
  2014 ;;		_Lcd_Set_Cursor
  2015 ;;		_Lcd_Clear
  2016 ;;		_Lcd_Shift_Right
  2017 ;;		_Lcd_Shift_Left
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function _Lcd_Cmd
  2023  0139                     _Lcd_Cmd:
  2024                           
  2025                           ;incstack = 0
  2026                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2027                           ;Lcd_Cmd@a stored from wreg
  2028  0139  00F5               	movwf	Lcd_Cmd@a
  2029  013A                     l819:
  2030                           
  2031                           ;LCD8BIT.c: 22: Lcd_Port(a);
  2032  013A  0875               	movf	Lcd_Cmd@a,w
  2033  013B  120A  118A  21AF  120A  118A  	fcall	_Lcd_Port
  2034  0140                     l821:
  2035                           
  2036                           ;LCD8BIT.c: 23: PORTBbits.RB1 = 0;
  2037  0140  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0141  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0142  1086               	bcf	6,1	;volatile
  2040  0143                     l823:
  2041                           
  2042                           ;LCD8BIT.c: 24: PORTBbits.RB0 = 1;
  2043  0143  1406               	bsf	6,0	;volatile
  2044  0144                     l825:
  2045                           
  2046                           ;LCD8BIT.c: 25: _delay((unsigned long)((5)*(40000000/4000.0)));
  2047  0144  3041               	movlw	65
  2048  0145  00F4               	movwf	??_Lcd_Cmd+1
  2049  0146  30EE               	movlw	238
  2050  0147  00F3               	movwf	??_Lcd_Cmd
  2051  0148                     u137:
  2052  0148  0BF3               	decfsz	??_Lcd_Cmd,f
  2053  0149  2948               	goto	u137
  2054  014A  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2055  014B  2948               	goto	u137
  2056  014C  0000               	nop
  2057  014D                     l827:
  2058                           
  2059                           ;LCD8BIT.c: 26: PORTBbits.RB0 = 0;
  2060  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2061  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2062  014F  1006               	bcf	6,0	;volatile
  2063  0150                     l141:
  2064  0150  0008               	return
  2065  0151                     __end_of_Lcd_Cmd:
  2066                           
  2067                           	psect	text13
  2068  01AF                     __ptext13:	
  2069 ;; *************** function _Lcd_Port *****************
  2070 ;; Defined at:
  2071 ;;		line 5 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Libs/LCD8BIT.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  a               1    wreg     unsigned char 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  a               1    2[COMMON] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       0       0       0       0
  2086 ;;      Locals:         1       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0
  2088 ;;      Totals:         1       0       0       0       0
  2089 ;;Total ram usage:        1 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    1
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_Lcd_Cmd
  2096 ;;		_Lcd_Write_Char
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _Lcd_Port
  2102  01AF                     _Lcd_Port:
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in _Lcd_Port: [wreg]
  2106                           ;Lcd_Port@a stored from wreg
  2107  01AF  00F2               	movwf	Lcd_Port@a
  2108  01B0                     l815:
  2109                           
  2110                           ;LCD8BIT.c: 7: PORTD = a;
  2111  01B0  0872               	movf	Lcd_Port@a,w
  2112  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2113  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2114  01B3  0088               	movwf	8	;volatile
  2115  01B4                     l135:
  2116  01B4  0008               	return
  2117  01B5                     __end_of_Lcd_Port:
  2118                           
  2119                           	psect	text14
  2120  01A2                     __ptext14:	
  2121 ;; *************** function _ISR *****************
  2122 ;; Defined at:
  2123 ;;		line 60 in file "C:/Users/Carlo/OneDrive/Documentos/Quinto Semestre/Digital2/Pjct1_D2.X/main.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		None
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0
  2139 ;;      Temps:          2       0       0       0       0
  2140 ;;      Totals:         2       0       0       0       0
  2141 ;;Total ram usage:        2 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		Interrupt level 1
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function _ISR
  2152  01A2                     _ISR:
  2153  01A2                     i1l65:
  2154  01A2  0871               	movf	??_ISR+1,w
  2155  01A3  008A               	movwf	10
  2156  01A4  0E70               	swapf	??_ISR^(0+4294967168),w
  2157  01A5  0083               	movwf	3
  2158  01A6  0EFE               	swapf	btemp,f
  2159  01A7  0E7E               	swapf	btemp,w
  2160  01A8  0009               	retfie
  2161  01A9                     __end_of_ISR:
  2162  007E                     btemp	set	126	;btemp
  2163  007E                     wtemp0	set	126
  2164                           
  2165                           	psect	intentry
  2166  0004                     __pintentry:	
  2167                           ;incstack = 0
  2168                           ; Regs used in _ISR: []
  2169                           
  2170  0004                     interrupt_function:
  2171  007E                     saved_w	set	btemp
  2172  0004  00FE               	movwf	btemp
  2173  0005  0E03               	swapf	3,w
  2174  0006  00F0               	movwf	??_ISR
  2175  0007  080A               	movf	10,w
  2176  0008  00F1               	movwf	??_ISR+1
  2177  0009  120A  118A  29A2   	ljmp	_ISR
  2178                           
  2179                           	psect	config
  2180                           
  2181                           ;Config register CONFIG1 @ 0x2007
  2182                           ;	Oscillator Selection bits
  2183                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2184                           ;	Watchdog Timer Enable bit
  2185                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2186                           ;	Power-up Timer Enable bit
  2187                           ;	PWRTE = OFF, PWRT disabled
  2188                           ;	RE3/MCLR pin function select bit
  2189                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2190                           ;	Code Protection bit
  2191                           ;	CP = OFF, Program memory code protection is disabled
  2192                           ;	Data Code Protection bit
  2193                           ;	CPD = OFF, Data memory code protection is disabled
  2194                           ;	Brown Out Reset Selection bits
  2195                           ;	BOREN = OFF, BOR disabled
  2196                           ;	Internal External Switchover bit
  2197                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2198                           ;	Fail-Safe Clock Monitor Enabled bit
  2199                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2200                           ;	Low Voltage Programming Enable bit
  2201                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2202                           ;	In-Circuit Debugger Mode bit
  2203                           ;	DEBUG = 0x1, unprogrammed default
  2204  2007                     	org	8199
  2205  2007  20D4               	dw	8404
  2206                           
  2207                           ;Config register CONFIG2 @ 0x2008
  2208                           ;	Brown-out Reset Selection bit
  2209                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2210                           ;	Flash Program Memory Self Write Enable bits
  2211                           ;	WRT = OFF, Write protection off
  2212  2008                     	org	8200
  2213  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _slave1->_spiWrite
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     965
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _Setup
                            _initOsc
                             _slave1
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _slave1                                               2     2      0      15
                                              3 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     153
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      30
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     362
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      30
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
     _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
   _initOsc
   _slave1
     _spiRead
       _spiReceiveWait
     _spiWrite
   _spiInit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Feb 12 00:59:27 2021

                        pc 0002                _SSPSTATbits 0094                         l76 00AC  
                       l79 00D3                         u10 01A1                         u11 01A0  
                       u60 0159                         u61 0158                         u70 005C  
                       u71 005B                         u80 0072                         u81 0071  
                       u90 011F                         u91 011E                         fsr 0004  
                      l212 01A1                        l141 0150                        l205 0161  
                      l150 0081                        l206 0166                        l135 01B4  
                      l223 019A                        l215 01AE                        l153 017C  
                      l209 019B                        l138 0138                        l171 00D6  
                      l172 00F9                        l173 00DC                        l174 00E2  
                      l159 011F                        l175 00E8                        l176 00FA  
                      l821 0140                        l815 01B0                        l823 0143  
                      l831 0192                        l825 0144                        l841 0171  
                      l817 019B                        l833 0197                        l921 00AD  
                      l827 014D                        l819 013A                        l843 0174  
                      l923 00B0                        l845 0178                        l837 0168  
                      l861 0092                        l853 00EE                        l829 01AA  
                      l925 00B9                        l847 017B                        l839 016B  
                      l871 009F                        l863 0095                        l855 0082  
                      l927 00BF                        l881 00A8                        l873 00A0  
                      l865 0098                        l857 008B                        l849 00D5  
                      l929 00D0                        l883 00AB                        l875 00A1  
                      l867 0099                        l859 0090                        l877 00A2  
                      l869 009A                        l895 0120                        l879 00A3  
                      u107 00B4                        u117 00CB                        u127 0176  
                      u137 0148                        _ISR 01A2                        fsr0 0004  
                     ?_ISR 0070                       l1021 015B                       l1031 0061  
                     l1023 015D                       l1041 007B                       l1033 0065  
                     l1025 0160                       l1017 0152                       l1035 006C  
                     l1027 0057                       l1043 00FC                       l1019 0159  
                     l1051 0015                       l1037 0072                       l1029 005C  
                     l1045 00FF                       l1061 0031                       l1053 0018  
                     l1039 0077                       l1047 010C                       l1063 0037  
                     l1055 001E                       l1049 0112                       l1065 003F  
                     l1057 0023                       l1067 0045                       l1059 002C  
                     l1069 004D                       STR_1 0183                       i1l65 01A2  
                     _TMR0 0001          ?_Lcd_Write_String 0070                       _main 0015  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0075  
          __end_of_Lcd_Cmd 0151                      ??_ISR 0070                      ?_main 0070  
                    _ANSEL 0188                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 002C                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _Setup 0082  
          __end_of_initOsc 00FB                      pclath 000A            __end_of_spiInit 0167  
          __end_of_spiRead 019B                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0139           __end_of_Lcd_Port 01B5            __initialization 000F  
             __end_of_main 0056                     ??_main 007A                     ?_Setup 0070  
                   _ADCON1 009F                     _ANSELH 0189                initOsc@frec 0072  
                ??_Lcd_Cmd 0073                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0016  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013                     _basura 007A                     _go_adc 007B  
                   _slave1 00AD                  ??_initOsc 0072                     saved_w 007E  
         __end_of_spiWrite 01AF                  ??_spiInit 0075                  ??_spiRead 0072  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@z 0079  
  __end_of__initialization 0011             __pcstackCOMMON 0070              __end_of_Setup 00AD  
           _Lcd_Set_Cursor 0056                    ??_Setup 0072                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pmaintext 0015                 __pintentry 0004  
  __size_of_spiReceiveWait 0007  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0082  
                  ?_slave1 0070                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
                  _SSPSTAT 0094                 __stringtab 017D             _Lcd_Write_Char 0167  
                  _Lcd_Cmd 0139                  ?_spiWrite 0070                  _ANSELbits 0188  
          ?_Lcd_Set_Cursor 0076            __size_of_slave1 0027                    __ptext1 0151  
                  __ptext2 00AD                    __ptext3 01A9                    __ptext4 0192  
                  __ptext5 019B                    __ptext6 00D4                    __ptext7 0082  
                  __ptext8 00FB                    __ptext9 0167               __size_of_ISR 0007  
                  _initOsc 00D4                    _spiInit 0151                    _spiRead 0192  
   __end_of_Lcd_Write_Char 017D       end_of_initialization 0011                  _RCSTAbits 0018  
               ??_spiWrite 0072                  Lcd_Port@a 0072                  _PORTBbits 0006  
                _PORTCbits 0007                spiWrite@dat 0072            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075                  _TXSTAbits 0098  
           _spiReceiveWait 019B           _Lcd_Write_String 00FB                _BAUDCTLbits 0187  
           __end_of_slave1 00D4        start_initialization 000F                __end_of_ISR 01A9  
        __size_of_Lcd_Init 0019          __size_of_Lcd_Port 0006     __end_of_spiReceiveWait 01A2  
          Lcd_Write_Char@a 0074                   ??_slave1 0073                __pbssCOMMON 007A  
                ___latbits 0002                   ?_Lcd_Cmd 0070            ?_spiReceiveWait 0070  
         ??_Lcd_Set_Cursor 0077          __size_of_spiWrite 0006                  __pstrings 017D  
                 ?_initOsc 0070                   ?_spiInit 0072                   ?_spiRead 0070  
           __size_of_Setup 002B       spiInit@sTransmitEdge 0074          interrupt_function 0004  
                 _PIE1bits 008C         spiInit@sDataSample 0072                   Lcd_Cmd@a 0075  
                 _PIR1bits 000C                 _ADCON0bits 001F                __stringbase 0182  
         ??_Lcd_Write_Char 0073                   _Lcd_Init 0120                   _Lcd_Port 01AF  
 __end_of_Lcd_Write_String 0120           __size_of_Lcd_Cmd 0018         __end_of__stringtab 0183  
         __size_of_initOsc 0027                   __ptext10 0056                   __ptext11 0120  
                 __ptext12 0139                   __ptext13 01AF                   __ptext14 01A2  
         __size_of_spiInit 0016           __size_of_spiRead 0009              __size_of_main 0041  
                 _spiWrite 01A9               spiInit@sType 0075          spiInit@sClockIdle 0073  
               _INTCONbits 000B                   intlevel1 0000           ??_spiReceiveWait 0072  
                stringcode 017D                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0078  
               _OPTION_REG 0081                   stringdir 017D                   stringtab 017D  
